trigger:
  batch: true
  branches:
    include:
      - k8s-extension/public
      - k8s-extension/private
pr:
  branches:
    include:
      - k8s-extension/public
      - k8s-extension/private

stages:
- stage: BuildTestPublishExtension
  displayName: "Build, Test, and Publish Extension"
  variables:
    TEST_PATH: $(Agent.BuildDirectory)/s/testing
    CLI_REPO_PATH: $(Agent.BuildDirectory)/s
    SUBSCRIPTION_ID: "15c06b1b-01d6-407b-bb21-740b8617dea3"
    RESOURCE_GROUP: "K8sPartnerExtensionTest"
    BASE_CLUSTER_NAME: "k8s-extension-cluster"
    IS_PRIVATE_BRANCH: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/k8s-extension/private'), eq(variables['System.PullRequest.TargetBranch'], 'k8s-extension/private'))]
  jobs:
  - template: ./templates/run-test.yml
    parameters:
      jobName: AzureDefender
      path: ./test/extensions/public/AzureDefender.Tests.ps1
  - template: ./templates/run-test.yml
    parameters:
      jobName: AzureMLKubernetes
      path: ./test/extensions/public/AzureMLKubernetes.Tests.ps1
  - template: ./templates/run-test.yml
    parameters:
      jobName: AzureMonitor
      path: ./test/extensions/public/AzureMonitor.Tests.ps1
  - template: ./templates/run-test.yml
    parameters:
      jobName: AzurePolicy
      path: ./test/extensions/public/AzurePolicy.Tests.ps1
  - template: ./templates/run-test.yml
    parameters:
      jobName: Cassandra
      path: ./test/extensions/public/Cassandra.Tests.ps1
  - template: ./templates/run-test.yml
    parameters:
      jobName: OpenServiceMesh
      path: ./test/extensions/public/OpenServiceMesh.Tests.ps1
  - job: BuildPublishExtension
    pool:
      vmImage: 'ubuntu-latest'
    displayName: "Build and Publish the Extension Artifact"
    variables: 
      CLI_REPO_PATH: $(Agent.BuildDirectory)/s
      workingDirectory: $(CLI_REPO_PATH)
      displayName: "Setup and Build Extension with azdev"
    steps:
    - template: ./templates/build-extension.yml
      parameters:
        CLI_REPO_PATH: $(CLI_REPO_PATH)
        IS_PRIVATE_BRANCH: $(IS_PRIVATE_BRANCH)
    - task: PublishBuildArtifacts@1
      inputs: 
        pathToPublish: $(CLI_REPO_PATH)/dist
      
- stage: AzureCLIOfficial
  displayName: "Azure Official CLI Code Checks"
  dependsOn: []
  jobs:
  - job: CheckLicenseHeader
    displayName: "Check License"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.6'
      inputs:
        versionSpec: 3.6
    - bash: |
        set -ev

        # prepare and activate virtualenv
        python -m venv env/

        chmod +x ./env/bin/activate
        source ./env/bin/activate

        # clone azure-cli
        git clone -q --single-branch -b dev https://github.com/Azure/azure-cli.git ../azure-cli

        pip install --upgrade pip
        pip install -q azdev

        azdev setup -c ../azure-cli -r ./

        azdev --version
        az --version

        azdev verify license

  - job: StaticAnalysis
    displayName: "Static Analysis"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: 3.6
      - bash: pip install wheel==0.30.0 pylint==1.9.5 flake8==3.5.0 requests
        displayName: 'Install wheel, pylint, flake8, requests'
      - bash: python scripts/ci/source_code_static_analysis.py
        displayName: "Static Analysis"

  - job: IndexVerify
    displayName: "Verify Extensions Index"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7
    - bash: |
        #!/usr/bin/env bash
        set -ev
        pip install wheel==0.30.0 requests packaging
        export CI="ADO"
        python ./scripts/ci/test_index.py -v
      displayName: "Verify Extensions Index"

  - job: SourceTests
    displayName: "Integration Tests, Build Tests"
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python36:
          python.version: '3.6'
        Python38:
          python.version: '3.8'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'
        inputs:
          versionSpec: '$(python.version)'
      - bash: pip install wheel==0.30.0
        displayName: 'Install wheel==0.30.0'
      - bash: |
          set -ev

          # prepare and activate virtualenv
          pip install virtualenv
          python -m virtualenv venv/
          source ./venv/bin/activate

          # clone azure-cli
          git clone --single-branch -b dev https://github.com/Azure/azure-cli.git ../azure-cli

          pip install --upgrade pip
          pip install azdev

          azdev --version

          azdev setup -c ../azure-cli -r ./ -e k8s-extension
          azdev test k8s-extension
        displayName: 'Run integration test and build test'

  - job: LintModifiedExtensions
    displayName: "CLI Linter on Modified Extensions"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: 3.6
      - bash: |
          set -ev

          # prepare and activate virtualenv
          pip install virtualenv
          python -m virtualenv venv/
          source ./venv/bin/activate

          # clone azure-cli
          git clone --single-branch -b dev https://github.com/Azure/azure-cli.git ../azure-cli

          pip install --upgrade pip
          pip install azdev

          azdev --version

          azdev setup -c ../azure-cli -r ./ -e k8s-extension

          # overwrite the default AZURE_EXTENSION_DIR set by ADO
          AZURE_EXTENSION_DIR=~/.azure/cliextensions az --version

          AZURE_EXTENSION_DIR=~/.azure/cliextensions azdev linter --include-whl-extensions k8s-extension
        displayName: "CLI Linter on Modified Extension"
        env:
          ADO_PULL_REQUEST_LATEST_COMMIT: $(System.PullRequest.SourceCommitId)
          ADO_PULL_REQUEST_TARGET_BRANCH: $(System.PullRequest.TargetBranch)