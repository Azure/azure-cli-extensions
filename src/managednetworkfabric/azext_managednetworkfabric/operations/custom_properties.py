# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Custom code that is added in addition to auto-generated by aaz-dev code.
# --------------------------------------------------------------------------------------------
# pylint: disable=too-many-lines,no-member,inconsistent-return-statements
# pylint: disable=too-many-statements,too-few-public-methods

"""
Helper class for all POST commands that return extra properties back to the customer
"""

import json

from azure.cli.core.aaz import (
    has_value,
)
from knack.log import get_logger

logger = get_logger(__name__)


class CustomActionProperties:
    """Helper class for all POST commands that return extra properties back to the customer"""

    # Custom response transform
    @staticmethod
    def _output(parent_cmd, *args, **kwargs):  # pylint: disable=unused-argument
        op_response = parent_cmd.ctx.vars.instance.properties.to_serialized_data()

        new_properties = {}
        new_properties["configurationState"] = op_response["configurationState"]
        new_properties["outputUrl"] = op_response["outputUrl"]

        if has_value(
            parent_cmd.ctx.vars.instance.properties.device_configuration_preview
        ):
            json_string = op_response["deviceConfigurationPreview"]

            try:
                new_json = json.loads(json_string)
                new_properties["deviceConfigurationPreview"] = new_json
            except Exception:  # pylint: disable=broad-exception-caught
                logger.warning(
                    "Notice: For brevity, the deviceConfigurationPreview is not"
                    "displaying the full response. Full response can be seen using"
                    "the outputUrl available below."
                )
                logger.warning(json_string)
                new_properties["deviceConfigurationPreview"] = json_string
        else:
            new_properties["deviceConfigurationPreview"] = "{}"

        return new_properties
