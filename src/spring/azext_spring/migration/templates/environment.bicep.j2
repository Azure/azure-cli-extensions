param containerAppEnvName string = {{containerAppEnvName}}
param containerAppLogAnalyticsName string = {{containerAppLogAnalyticsName}}
param location string = {{location}}
param workloadProfileName string
param workloadProfileType string
param daprAIInstrumentationKey string? = {{daprAIInstrumentationKey}}
param daprAIConnectionString string? = {{daprAIConnectionString}}

module containerAppEnv 'environment.bicep' = {
  name: 'containerAppEnvDeployment'
  params: {
    containerAppEnvName: containerAppEnvName
    containerAppLogAnalyticsName: containerAppLogAnalyticsName
    location: location
    workloadProfileName: workloadProfileName
    workloadProfileType: workloadProfileType
  }
}

resource logAnalytics 'Microsoft.OperationalInsights/workspaces@2022-10-01' = {
  name: containerAppLogAnalyticsName
  location: location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
  }
}

resource containerAppEnv 'Microsoft.App/managedEnvironments@2024-03-01' = {
  name: containerAppEnvName
  location: location
  properties: {
    daprAIInstrumentationKey: daprAIInstrumentationKey
    daprAIConnectionString: daprAIConnectionString
    // vnetConfiguration: {}
    appLogsConfiguration: {
      destination: 'log-analytics'
      logAnalyticsConfiguration: {
        customerId: logAnalytics.properties.customerId
        sharedKey: logAnalytics.listKeys().primarySharedKey
      }
    }
    zoneRedundant: '{{zoneRedundant}}'
    // customDomainConfiguration: {}
    workloadProfiles: [
      {
        name: workloadProfileName
        workloadProfileType: workloadProfileType
        minimumCount: '{{minimumCount}}'
        maximumCount: '{{maximumCount}}'
      }
    ]
    // kedaConfiguration: {}
    // daprConfiguration: {}
    infrastructureResourceGroup: '{{infrastructureResourceGroup}}'
    peerAuthentication: {
      mtls: {
        enabled: '{{mtlsEnabled}}'
      }
    }
    //peerTrafficConfiguration: {}
  }
}

output containerAppEnvId string = containerAppEnv.id
