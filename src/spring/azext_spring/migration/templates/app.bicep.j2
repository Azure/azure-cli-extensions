param containerAppName string = {{containerAppName}}
param containerImage string = {{containerImage}}
param targetPort int = {{targetPort}}

param cpuCore string = {{cpuCore}}
param memorySize string = {{memorySize}}

@description('Minimum number of replicas that will be deployed')
@minValue(0)
param minReplicas int = {{minReplicas}}

@description('Maximum number of replicas that will be deployed')
@minValue(1)
param maxReplicas int = {{maxReplicas}}

param containerAppEnvId string

module appModule 'app.bicep' = [for app in data.apps: {
  name: '${app.name}'
  dependsOn: [containerAppEnv]
  params: {
    containerAppName: containerAppName
    containerImage: containerImage
    targetPort: targetPort
    cpuCore: cpuCore
    memorySize: memorySize
    minReplicas: minReplicas
    maxReplicas: maxReplicas
    containerAppEnvId: containerAppEnv.outputs.containerAppEnvId
  }
}]

resource containerApp 'Microsoft.App/containerApps@2024-03-01' = {
  name: containerAppName
  location: resourceGroup().location
  properties: {
    managedEnvironmentId: containerAppEnvId
    configuration: {
      ingress: {
        external: true
        targetPort: targetPort
        allowInsecure: false
        traffic: [
          {
            latestRevision: true
            weight: 100
          }
        ]
      }
    }
    template: {
      containers: [
        {
          name: containerAppName
          image: containerImage
          resources: {
            cpu: json(cpuCore)
            memory: '${memorySize}Gi'
          }
        }
      ]
      scale: {
        minReplicas: minReplicas
        maxReplicas: maxReplicas
      }
    }
  }
}

output containerAppFQDN string = containerApp.properties.configuration.ingress.fqdn
