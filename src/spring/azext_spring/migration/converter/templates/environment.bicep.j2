// Params
param workloadProfileName string
param workloadProfileType string

param managedEnvName string = '{{data.containerAppEnvName}}'
param containerAppLogAnalyticsName string = '{{data.containerAppLogAnalyticsName}}'
param zoneRedundant bool = {{data.zoneRedundant}}

resource logAnalytics 'Microsoft.OperationalInsights/workspaces@2022-10-01' = {
  name: containerAppLogAnalyticsName
  location: resourceGroup().location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
  }
}

resource containerAppEnv 'Microsoft.App/managedEnvironments@2024-03-01' = {
  name: managedEnvName
  location: resourceGroup().location
  properties: {
    // vnetConfiguration: {}
    appLogsConfiguration: {
      destination: 'log-analytics'
      logAnalyticsConfiguration: {
        customerId: logAnalytics.properties.customerId
        sharedKey: logAnalytics.listKeys().primarySharedKey
      }
    }
    zoneRedundant: zoneRedundant
    // customDomainConfiguration: {}
    workloadProfiles: [
      {
        name: workloadProfileName
        workloadProfileType: workloadProfileType
        // minimumCount: minNodes
        // maximumCount: maxNodes
      }
    ]
  }
}

{% if data.scheduledEntries %}
resource maintenanceConfig 'Microsoft.App/managedEnvironments/maintenanceConfigurations@2024-10-02-Preview' = {
  name: '${managedEnvName}/default'
  parent: containerAppEnv
  location: resourceGroup().location
  properties: {
    scheduledEntries: [
      {% for entry in data.scheduledEntries %}
        { weekDay: '{{ entry.weekDay }}', startHourUtc: {{ entry.startHourUtc }}, durationHours: {{ entry.durationHours }} }{{ "," if not loop.last }}
      {% endfor %}
    ]
  }
}
{% endif %}

output containerAppEnvId string = containerAppEnv.id
output containerAppEnvName string = containerAppEnv.name
