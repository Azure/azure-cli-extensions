// Params
param workloadProfileName string
param workloadProfileType string
param minNodes int
param maxNodes int

param containerAppEnvName string = '{{data.containerAppEnvName}}'
param containerAppLogAnalyticsName string = '{{data.containerAppLogAnalyticsName}}'
param daprAIInstrumentationKey string = '{{data.daprAIInstrumentationKey}}'
param daprAIConnectionString string = '{{data.daprAIConnectionString}}'

resource logAnalytics 'Microsoft.OperationalInsights/workspaces@2022-10-01' = {
  name: containerAppLogAnalyticsName
  location: resourceGroup().location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
  }
}

resource containerAppEnv 'Microsoft.App/managedEnvironments@2024-03-01' = {
  name: containerAppEnvName
  location: resourceGroup().location
  properties: {
    daprAIInstrumentationKey: daprAIInstrumentationKey
    daprAIConnectionString: daprAIConnectionString
    // vnetConfiguration: {}
    appLogsConfiguration: {
      destination: 'log-analytics'
      logAnalyticsConfiguration: {
        customerId: logAnalytics.properties.customerId
        sharedKey: logAnalytics.listKeys().primarySharedKey
      }
    }
    zoneRedundant: {{data.zoneRedundant}}
    // customDomainConfiguration: {}
    workloadProfiles: [
      {
        name: workloadProfileName
        workloadProfileType: workloadProfileType
        minimumCount: minNodes
        maximumCount: maxNodes
      }
    ]
    // kedaConfiguration: {}
    // daprConfiguration: {}
    infrastructureResourceGroup: '{{data.infrastructureResourceGroup}}'
    peerAuthentication: {
      mtls: {
        enabled: {{data.mtlsEnabled}}
      }
    }
    //peerTrafficConfiguration: {}
  }
}

output containerAppEnvId string = containerAppEnv.id
