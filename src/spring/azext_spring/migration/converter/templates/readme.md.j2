This README provides instructions on how to use the Bicep files generated from your Azure Spring Apps service to provision an Azure Container Apps environment, including the necessary resources and containerized applications. Additionally, some configuration updates must be made manually by referencing public Azure documentation after deploying the Bicep files.

## Prerequisites

Before you begin, ensure you have the following:

1. Azure Subscription: An Azure subscription with sufficient permissions to create and manage resources for deploying Azure Container Apps.

2. Bicep CLI: Ensure the Bicep CLI is installed.

3. Generated Bicep files: Make sure you have run the following command to generate the Bicep files from your Azure Spring Apps service to Azure Container Apps.

```azurecli
az spring migration-aca start --service <azure-spring-apps-service-name> --resource-group <resource-group> --subscription <subscription-id>
```

## Steps to Deploy Azure Container Apps Using the Bicep Files

###. Review the Bicep Files and Modify Parameters

After running the command to generate the Bicep files, you will have the following files and related resource definitions:

- `main.bicep`: The entry point to deploy and manage Azure Container Apps resources
- `param.bicepparam`: The parameters which  values required for the deployment.
- `environment.bicep`: The Bicep file that contains the resource definitions for the Azure Container Apps environment.
- `<app_name>-app.bicep`: The Bicep file that contains the resource definitions for the Azure Container Apps applications.
- `<managed_components>.bicep`: The Bicep file that contains the resource definitions for the managed components like config server, spring cloud gateway, spring boot admin and eureka.

Replace the values in `param.bicepparam` to customize your Azure Container Apps.

###. Customize the Bicep Files

Modify values in the Bicep files as needed to align with your environment.

- Change the `param.bicepparam` file by filling in the image URL that you get through containerizing your app. Refer to this [doc](https://review.learn.microsoft.com/en-us/azure/spring-apps/migration/migrate-to-azure-container-apps-build-overview) for more details about how to containerize your application.
- If you are migrating Application Configuration Service or Config Server, you need to provide the credentials to the remote Git repository. Replace the "*" with the correct credentials in the file `config_server.bicep`.


### Create a new Resource Group for Azure Container Apps

#### If the resource group you want to deploy the Azure Container Apps does not already exist, create one with the following command:

```azurecli
az group create --name <resource-group-name> --location <location>
```

#### Deploy the Bicep files using the Azure CLI:

```azurecli
az deployment group create --resource-group <resource-group-name> --template-file main.bicep --parameters param.bicepparam
```

#### Validate Deployment

After deployment, validate that all resources, including the Azure Container Apps environment and applications, are correctly provisioned. You can check this in the Azure Portal:

- Navigate to the Azure Portal and open the resource group you specified.
- Click `Settings` > `Deployments` to view all the deployment status and any errors.
- If there is any error, check the error messages and logs to troubleshoot the issue. Retry the deployment after fixing these issues.

## Post-Deployment Configuration

Some properties and configurations are not included in the Bicep files and must be manually updated. Refer to the official Azure documentation for detailed steps:

https://learn.microsoft.com/en-us/azure/spring-apps/migration/migrate-to-azure-container-apps-overview
