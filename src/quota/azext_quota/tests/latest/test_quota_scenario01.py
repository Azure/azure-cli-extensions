# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .example_steps import step_create
from .example_steps import step_create2
from .example_steps import step_create3
from .example_steps import step_create4
from .example_steps import step_show
from .example_steps import step_list
from .example_steps import step_list2
from .example_steps import step_list3
from .example_steps import step_show2
from .example_steps import step_update
from .example_steps import step_update2
from .example_steps import step_quotaoperation_list
from .example_steps import step_quotarequeststatus_show
from .example_steps import step_quotarequeststatus_list
from .example_steps import step_quotarequeststatus_show2
from .example_steps import step_quotarequeststatus_show3
from .example_steps import step_usage_list
from .example_steps import step_usage_list2
from .example_steps import step_usage_list3
from .example_steps import step_usage_show
from .example_steps import step_usage_show2
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_create(test, checks=[])
    step_create2(test, checks=[])
    step_create3(test, checks=[])
    step_create4(test, checks=[])
    step_show(test, checks=[])
    step_list(test, checks=[])
    step_list2(test, checks=[])
    step_list3(test, checks=[])
    step_show2(test, checks=[])
    step_update(test, checks=[])
    step_update2(test, checks=[])
    step_quotaoperation_list(test, checks=[])
    step_quotarequeststatus_show(test, checks=[])
    step_quotarequeststatus_list(test, checks=[])
    step_quotarequeststatus_show2(test, checks=[])
    step_quotarequeststatus_show3(test, checks=[])
    step_usage_list(test, checks=[])
    step_usage_list2(test, checks=[])
    step_usage_list3(test, checks=[])
    step_usage_show(test, checks=[])
    step_usage_show2(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class QuotaScenarioTest(ScenarioTest):
    def __init__(self, *args, **kwargs):
        super(QuotaScenarioTest, self).__init__(*args, **kwargs)

    def test_quota_Scenario(self):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()
