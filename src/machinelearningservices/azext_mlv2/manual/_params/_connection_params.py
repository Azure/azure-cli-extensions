# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from ._common_params import add_common_params, add_max_results_params, add_override_param


def add_name_param(c):
    c.argument("name", options_list=["--name", "-n"], type=str, help="Name of the environment.")


def add_populate_secrets_param(c):
    c.argument(
        "populate_secrets",
        options_list=["--populate-secrets", "-p"],
        action="store_true",
        help="For API key-based connections, try to populate the returned credentials with the actual "
             "secret value. Does nothing for non-API key-based connections.",
    )


def load_connection_params(self):
    with self.argument_context("ml connection create") as c:
        add_common_params(c)
        add_name_param(c)
        add_populate_secrets_param(c)
        c.argument(
            "file",
            options_list=["--file", "-f"],
            help="Local path to the YAML file containing the Azure ML connection specification.",
        )
        add_override_param(c)

    with self.argument_context("ml connection show") as c:
        add_common_params(c)
        add_name_param(c)
        add_populate_secrets_param(c)

    with self.argument_context("ml connection list") as c:
        add_common_params(c)
        add_max_results_params(c)
        c.argument(
            "connection_type",
            options_list=["--type", "-t"],
            help="The type of Azure ML connection to list.",
        )
        add_populate_secrets_param(c)

    with self.argument_context("ml connection update") as c:
        add_common_params(c)
        add_name_param(c)
        add_populate_secrets_param(c)

    with self.argument_context("ml connection delete") as c:
        add_common_params(c)
        add_name_param(c)
