# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from knack.help_files import helps


def get_feature_set_help():
    helps[
        "ml feature-set"
    ] = """
        type: group
        short-summary: Manage Azure ML feature sets.
        long-summary: >
            A collection of features on a source
    """
    helps[
        "ml feature-set list"
    ] = """
        type: command
        short-summary: List feature set in a feature store.
        examples:
        - name: List all the feature set in a feature store
          text: az ml feature-set list --resource-group my-resource-group --feature-store-name my-feature-store
        - name: List all the feature set versions for the specified name in a feature store
          text: az ml feature-set list --name my-feature-set --resource-group my-resource-group --feature-store-name my-feature-store
        - name: List all the feature set assets in a feature store using --query argument to execute a JMESPath query on the results of commands.
          text: az ml feature-set list --query \"[].{Name:name}\" --output table --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set show"
    ] = """
        type: command
        short-summary: Shows details for a feature set.
        examples:
        - name: Show details for a feature set with the specified name and version in a feature store
          text: az ml feature-set show --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set create"
    ] = """
        type: command
        short-summary: Create a feature set.
        long-summary: >
            feature sets can be defined from files on your local machine. The created feature set will be tracked in the feature store
            under the specified name and version.


            To create a feature set from file(s) on your local machine, specify the 'path'
            field in your YAML config. Azure ML will upload these file(s) to the blob container
            that backs the feature store's default datastore (named 'workspaceblobstore'). The created
            feature set will then point to that uploaded feature set.

        examples:
        - name: Create a feature set from a YAML specification file
          text: az ml feature-set create --file feature-set.yaml --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set update"
    ] = """
        type: command
        short-summary: Update a feature set.
        examples:
        - name: Update a feature set from a YAML specification file
          text: az ml feature-set update --file feature-set.yaml --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set archive"
    ] = """
        type: command
        short-summary: Archive a feature set.
        long-summary: >
            Archiving a feature set will hide it by default from list queries (`az ml feature-set list`).
        examples:
        - name: Archive a specific feature set version
          text: az ml feature-set archive --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set restore"
    ] = """
        type: command
        short-summary: Restore an archived feature set.
        long-summary: >
            When an archived feature set is restored, it will no longer be hidden from list queries (`az ml
            feature-set list`).
        examples:
        - name: Restore a specific archived feature set version
          text: az ml feature-set restore --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set backfill"
    ] = """
        type: command
        short-summary: Begin backfill job.
        examples:
        - name: Begin backfill job
          text: az ml feature-set backfill --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store --feature-window-start-time start-time --feature-window-end-time end-time
    """
    helps[
        "ml feature-set list-materialization-operation"
    ] = """
        type: command
        short-summary: List Materialization operation
        examples:
        - name: List Materialization operation
          text: az ml feature-set list-materialization-operation --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set list-features"
    ] = """
        type: command
        short-summary: List Features for a feature set
        examples:
        - name: List features
          text: az ml feature-set list-features --name my-feature-set --version 1 --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set get-feature"
    ] = """
        type: command
        short-summary: Gets a feature for a feature set
        examples:
        - name: Get feature
          text: az ml feature-set get-feature --name my-feature-set --version 1 --feature-name my-feature --resource-group my-resource-group --feature-store-name my-feature-store
    """
    helps[
        "ml feature-set show-feature"
    ] = """
        type: command
        short-summary: Shows a feature for a feature set
        examples:
        - name: Show feature
          text: az ml feature-set show-feature --name my-feature-set --version 1 --feature-name my-feature --resource-group my-resource-group --feature-store-name my-feature-store
    """
