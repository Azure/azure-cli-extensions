# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from knack.help_files import helps


def get_feature_store_help():
    helps[
        "ml feature-store"
    ] = """
        type: group
        short-summary: Manage Azure ML feature stores.
        long-summary: >
            A feature store is a lifecycle management system for features. Feature store
            provides feature discovery, materialization serving offline workloads (training/batch
            inference), serving online inference with low latency requirements, and operational
            and feature quality monitoring.
    """
    helps[
        "ml feature-store list"
    ] = """
        type: command
        short-summary: List all the feature stores in a subscription.
        long-summary: >
            The list of feature-stores can be filtered by resource group.
        examples:
        - name: List all the feature stores in a resource group
          text: az ml feature-store list --resource-group my-resource-group
        - name: List all the feature stores using --query argument to execute a JMESPath query on the results of commands.
          text: az ml feature-store list --query \"[].{Name:name}\"  --output table --resource-group my-resource-group
    """
    helps[
        "ml feature-store show"
    ] = """
        type: command
        short-summary: Show details for a feature store.
    """
    helps[
        "ml feature-store delete"
    ] = """
        type: command
        short-summary: Delete a feature store.
        long-summary: >
            By default the dependent resources associated with the feature store (Azure Storage,
            Azure Container Registry, Azure Key Vault, Azure Application Insights) are not deleted.
            To delete those as well, include --all-resources.
    """
    helps[
        "ml feature-store create"
    ] = """
        type: command
        short-summary: Create a feature store.
        long-summary: >
            When a feature store is created, several Azure resources that will be used by Azure ML
            also get created by default: Azure Storage, Azure Container Registry, Azure Key Vault, and Azure Application
            Insights. You can instead use existing Azure resource instances for those when creating the feature store
            by specifying the resource IDs in the feature store configuration YAML file.
        examples:
        - name: Create a feature store from a YAML specification file.
          text: az ml feature-store create --file feature-store.yml --resource-group my-resource-group
    """
    helps[
        "ml feature-store update"
    ] = """
        type: command
        short-summary: Update a feature store.
        long-summary: >
            The 'description', 'tags', 'friendly_name', and materialization_identity properties can be updated.
        examples:
        - name: update a feature store from a YAML specification file.
          text: az ml feature-store update --resource-group my-resource-group --name my-feature-store-name --file feature-store.yml
    """
    helps[
        "ml feature-store provision-network"
    ] = """
        type: command
        short-summary: Provision managed network.
        long-summary: >
            Triggers the feature-store to provision the managed network.
            Specifying spark enabled flag prepares the workspace managed network for supporting Spark.
            The default is false if not specified but can be enabled later by running this command again with this flag.
            Once enabled it cannot be disabled.
        examples:
        - name: Provision managed network.
          text: az ml feature-store provision-network --resource-group my-resource-group --name my-feature-store-name
    """
