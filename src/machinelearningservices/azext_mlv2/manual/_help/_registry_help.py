# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from knack.help_files import helps


def get_registry_help():
    helps[
        "ml registry"
    ] = """
        type: group
        short-summary: Manage Azure ML registries.
        long-summary: >
            An Azure ML registry is a top-level resource for Azure Machine
            Learning. It provides a top-level space to store other resources,
            which can then be accessed by multiple workspaces across different
            regions.
    """
    helps[
        "ml registry list"
    ] = """
        type: command
        short-summary: List all the registries in a subscription or resource group.
        examples:
        - name: List all registries in the default resource group and subscription id.
          text: az ml registry list
        - name: >
            List all registries in the default resource group in the specified subscription.
            If no default resource group is set, then list all registries in the subscription.
          text: az ml registry list --subscription my-subscription-id
        - name: List all registries in a specific resource group and subscription.
          text: az ml registry list --resource-group my-resource-group --subscription my-subscription-id
        - name: List all registries using --query argument to execute a JMESPath query on the results of commands.
          text: az ml registry list --query \"[].{Name:name}\"  --output table --resource-group my-resource-group
    """
    helps[
        "ml registry show"
    ] = """
        type: command
        short-summary: Show details for a registry.
        examples:
        - name: Show details of a named registry that is in the specified resource group and subscription.
          text: az ml registry show --resource-group my-resource-group --subscription my-subscription-id --name my-registry-name
    """
    helps[
        "ml registry create"
    ] = """
        type: command
        short-summary: Create a registry.
        long-summary: >
            When a registry is created, several Azure resources that will be
            used by registry get created by default, specifically an Azure Storage and
            Azure Container Registry. Using existing Azure
            resource instances for those when creating the registry is not supported.

        examples:
        - name: Create a registry from a YAML specification file.
          text: az ml registry create --resource-group my-resource-group --file registry.yml
    """
    helps[
        "ml registry update"
    ] = """
        type: command
        short-summary: Update a registry.
        long-summary: >
            Update a registry. This command mostly behaves like the create command,
            except this is ensures that the target registry exists, and it can
            be run without a --file input if a valid --name input is provided.
            Fields can be modified by defining new values in YAML, the --set argument,
            or the fields' normal input arguments. Not all fields are currently safe
            to modify. Valid modifications include: Arbitrary changes to
            the registry tags, and adding new values to the region_details
            field. WARNING: The --file argument is incompatible with modifying values
            through --set. If you wish to set registry using a combination
            of a file and CLI args, use the direct CLI args for the values you wish
            to modify, as exemplified below.
        examples:
        - name: Update a registry from a YAML specification file.
          text: az ml registry update --resource-group my-resource-group --file registry.yml --tags tag=value
        - name: Update specific fields of a registry
          text: az ml registry update --resource-group my-resource-group --name myRegistry --set tags.tag=value
    """
    helps[
        "ml registry delete"
    ] = """
        type: command
        short-summary: Delete a given registry.
        examples:
        - name: Delete a registry from a specific resource group.
          text: az ml registry delete --resource-group my-resource-group --name my-registry-name
    """
