# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from knack.help_files import helps


def get_workspace_outbound_rule_help():
    helps[
        "ml workspace outbound-rule"
    ] = """
        type: group
        short-summary: Manage outbound rules for the managed network of an Azure ML workspace.
        long-summary: >
            An Azure ML workspace is the top-level resource for Azure Machine Learning. This command group
            is used to perform operations on the outbound rules of the workspace managed network.
    """
    helps[
        "ml workspace outbound-rule list"
    ] = """
        type: command
        short-summary: List all the managed network outbound rules for a workspace.
    """
    helps[
        "ml workspace outbound-rule show"
    ] = """
        type: command
        short-summary: Show details for a managed network outbound rule for a workspace.
    """
    helps[
        "ml workspace outbound-rule remove"
    ] = """
        type: command
        short-summary: Remove an outbound rule from the managed network for a workspace.
    """
    helps[
        "ml workspace outbound-rule set"
    ] = """
        type: command
        short-summary: Add or update an outbound rule in the managed network for a workspace.
        long-summary: >
            This command can be used to specify an outbound rule for the managed network of the
            workspace. The needed parameters are defined by --type.

            For --type service_tag use
                        --service-tag, --port-ranges, --protocol, [Optional] --address-prefixes
            For --type fqdn use
                        --destination
            For --type private_endpoint use
                        --service-resource-id, --subresource-target, [Optional] --spark-enabled, [Optional] --fqdns
    """
