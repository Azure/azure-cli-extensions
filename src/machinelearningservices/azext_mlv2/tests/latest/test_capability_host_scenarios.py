# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
import yaml
from azext_mlv2.tests.scenario_test_helper import MLBaseScenarioTest


class CapabilityHostScenarioTest(MLBaseScenarioTest):

    def test_capability_host_in_hub(self) -> None:

        self.kwargs["cap_host_name"] = "test_host_hub"

        self.cmd(
            "az ml capability-host create -g testrg -w workspace --file ./src/machinelearningservices/azext_mlv2/tests/test_configs/ai_workspaces/capability_host_hub.yaml --no-wait"
        )
        if not self.is_live:
            from time import sleep

            sleep(120)  # This sleep is only required for fresh recording of cassette

        capability_host_obj_show = self.cmd(
            "az ml capability-host show -g testrg -w workspace -n {cap_host_name}"
        )

        capability_host_obj_show = yaml.safe_load(capability_host_obj_show.output)
        assert capability_host_obj_show["name"] == "test_host_hub"
        assert capability_host_obj_show["capability_host_kind"] == "Agents"
        assert "vector_store_connections" not in capability_host_obj_show
        assert "ai_services_connections" not in capability_host_obj_show
        assert "storage_connections" not in capability_host_obj_show

        self.cmd("az ml capability-host delete -g testrg -w workspace -n {cap_host_name}")
        # Delete a key regardless of whether it is in the dictionary for the new name
        self.kwargs.pop("cap_host_name", None)

    def test_capability_host_in_project(self) -> None:

        self.kwargs["cap_host_name"] = "test_host_project"

        self.cmd(
            "az ml capability-host create -g testrg -w workspace --file ./src/machinelearningservices/azext_mlv2/tests/test_configs/ai_workspaces/capability_host_project.yaml --no-wait"
        )
        if not self.is_live:
            from time import sleep

            sleep(120)  # This sleep is only required for fresh recording of cassette

        capability_host_obj_show = self.cmd(
            "az ml capability-host show -g tsetrg -w workspacename -n {cap_host_name}"
        )

        capability_host_obj_show = yaml.safe_load(capability_host_obj_show.output)
        ai_search_connections = capability_host_obj_show["vector_store_connections"]
        openAI_service_connections = capability_host_obj_show["ai_services_connections"]
        storage_connections = capability_host_obj_show["storage_connections"]
        assert capability_host_obj_show["name"] == "test_host_project"
        assert capability_host_obj_show["capability_host_kind"] == "Agents"
        assert (
            len(ai_search_connections) == 1
            and ai_search_connections[0] == "vector_store_connection_1"
        )
        assert (
            len(openAI_service_connections) == 1
            and openAI_service_connections[0] == "aiservice_connection_1"
        )
        assert (
            len(storage_connections) == 1
            and storage_connections[0] == "workspaceblobstore"
        )

        self.cmd("az ml capability-host delete -g testrg -w workspace -n {cap_host_name}")
        # Delete a key regardless of whether it is in the dictionary for the new name
        self.kwargs.pop("cap_host_name", None)


