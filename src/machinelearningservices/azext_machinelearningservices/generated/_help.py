# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['machinelearningservices workspace'] = """
    type: group
    short-summary: Manage workspace with machinelearningservices
"""

helps['machinelearningservices workspace list'] = """
    type: command
    short-summary: "Lists all the available machine learning workspaces under the specified resource group. And Lists \
all the available machine learning workspaces under the specified subscription."
    examples:
      - name: Get Workspaces by Resource Group
        text: |-
               az machinelearningservices workspace list --resource-group "workspace-1234"
      - name: Get Workspaces by subscription
        text: |-
               az machinelearningservices workspace list
"""

helps['machinelearningservices workspace show'] = """
    type: command
    short-summary: "Gets the properties of the specified machine learning workspace."
    examples:
      - name: Get Workspace
        text: |-
               az machinelearningservices workspace show --resource-group "workspace-1234" --name "testworkspace"
"""

helps['machinelearningservices workspace create'] = """
    type: command
    short-summary: "Create a workspace with the specified parameters."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --shared-private-link-resources
        short-summary: "The list of shared private link resources in this workspace."
        long-summary: |
            Usage: --shared-private-link-resources name=XX private-link-resource-id=XX group-id=XX request-message=XX \
status=XX

            name: Unique name of the private link.
            private-link-resource-id: The resource id that private link links to.
            group-id: The private link resource group id.
            request-message: Request message.
            status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

            Multiple actions can be specified by using more than one --shared-private-link-resources argument.
      - name: --identity
        short-summary: "The identity that will be used to access the key vault for encryption at rest."
        long-summary: |
            Usage: --identity user-assigned-identity=XX

            user-assigned-identity: The ArmId of the user assigned identity that will be used to access the customer \
managed key vault
      - name: --key-vault-properties
        short-summary: "Customer Key vault properties."
        long-summary: |
            Usage: --key-vault-properties key-vault-arm-id=XX key-identifier=XX identity-client-id=XX

            key-vault-arm-id: Required. The ArmId of the keyVault where the customer owned encryption key is present.
            key-identifier: Required. Key vault uri to access the encryption key.
            identity-client-id: For future use - The client id of the identity which will be used to access key vault.
    examples:
      - name: Create Workspace
        text: |-
               az machinelearningservices workspace create --identity type="SystemAssigned,UserAssigned" \
userAssignedIdentities={"/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/workspace-1234/providers/Mi\
crosoft.ManagedIdentity/userAssignedIdentities/testuai":{}} --location "eastus2euap" --description "test description" \
--application-insights "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/workspace-1234/providers/mic\
rosoft.insights/components/testinsights" --container-registry "/subscriptions/00000000-1111-2222-3333-444444444444/reso\
urceGroups/workspace-1234/providers/Microsoft.ContainerRegistry/registries/testRegistry" --identity \
user-assigned-identity="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/workspace-1234/providers/Mic\
rosoft.ManagedIdentity/userAssignedIdentities/testuai" --key-vault-properties identity-client-id="" \
key-identifier="https://testkv.vault.azure.net/keys/testkey/aabbccddee112233445566778899aabb" \
key-vault-arm-id="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/workspace-1234/providers/Microsoft\
.KeyVault/vaults/testkv" --status "Enabled" --friendly-name "HelloName" --hbi-workspace false --key-vault \
"/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/workspace-1234/providers/Microsoft.KeyVault/vaults/\
testkv" --shared-private-link-resources name="testdbresource" private-link-resource-id="/subscriptions/00000000-1111-22\
22-3333-444444444444/resourceGroups/workspace-1234/providers/Microsoft.DocumentDB/databaseAccounts/testdbresource/priva\
teLinkResources/Sql" group-id="Sql" request-message="Please approve" status="Approved" --storage-account \
"/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/accountcrud-1234/providers/Microsoft.Storage/storag\
eAccounts/testStorageAccount" --resource-group "workspace-1234" --name "testworkspace"
"""

helps['machinelearningservices workspace update'] = """
    type: command
    short-summary: "Updates a machine learning workspace with the specified parameters."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Update Workspace
        text: |-
               az machinelearningservices workspace update --description "new description" --friendly-name "New \
friendly name" --resource-group "workspace-1234" --name "testworkspace"
"""

helps['machinelearningservices workspace delete'] = """
    type: command
    short-summary: "Deletes a machine learning workspace."
    examples:
      - name: Delete Workspace
        text: |-
               az machinelearningservices workspace delete --resource-group "workspace-1234" --name "testworkspace"
"""

helps['machinelearningservices workspace list-key'] = """
    type: command
    short-summary: "Lists all the keys associated with this workspace. This includes keys for the storage account, app \
insights and password for container registry."
    examples:
      - name: List Workspace Keys
        text: |-
               az machinelearningservices workspace list-key --resource-group "testrg123" --name "workspaces123"
"""

helps['machinelearningservices workspace list-notebook-access-token'] = """
    type: command
    short-summary: "return notebook access token and refresh token."
    examples:
      - name: List Workspace Keys
        text: |-
               az machinelearningservices workspace list-notebook-access-token --resource-group "workspace-1234" \
--name "testworkspace"
"""

helps['machinelearningservices workspace resync-key'] = """
    type: command
    short-summary: "Resync all the keys associated with this workspace. This includes keys for the storage account, \
app insights and password for container registry."
    examples:
      - name: Resync Workspace Keys
        text: |-
               az machinelearningservices workspace resync-key --resource-group "testrg123" --name "workspaces123"
"""

helps['machinelearningservices workspace wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the machinelearningservices workspace is met.
    examples:
      - name: Pause executing next line of CLI script until the machinelearningservices workspace is successfully \
created.
        text: |-
               az machinelearningservices workspace wait --resource-group "workspace-1234" --name "testworkspace" \
--created
      - name: Pause executing next line of CLI script until the machinelearningservices workspace is successfully \
deleted.
        text: |-
               az machinelearningservices workspace wait --resource-group "workspace-1234" --name "testworkspace" \
--deleted
"""

helps['machinelearningservices workspace-feature'] = """
    type: group
    short-summary: Manage workspace feature with machinelearningservices
"""

helps['machinelearningservices workspace-feature list'] = """
    type: command
    short-summary: "Lists all enabled features for a workspace."
    examples:
      - name: List Workspace features
        text: |-
               az machinelearningservices workspace-feature list --resource-group "myResourceGroup" --workspace-name \
"testworkspace"
"""

helps['machinelearningservices usage'] = """
    type: group
    short-summary: Manage usage with machinelearningservices
"""

helps['machinelearningservices usage list'] = """
    type: command
    short-summary: "Gets the current usage information as well as limits for AML resources for given subscription and \
location."
    examples:
      - name: List Usages
        text: |-
               az machinelearningservices usage list --location "eastus"
"""

helps['machinelearningservices virtual-machine-size'] = """
    type: group
    short-summary: Manage virtual machine size with machinelearningservices
"""

helps['machinelearningservices virtual-machine-size list'] = """
    type: command
    short-summary: "Returns supported VM Sizes in a location."
    examples:
      - name: List VM Sizes
        text: |-
               az machinelearningservices virtual-machine-size list --location "eastus"
"""

helps['machinelearningservices quota'] = """
    type: group
    short-summary: Manage quota with machinelearningservices
"""

helps['machinelearningservices quota list'] = """
    type: command
    short-summary: "Gets the currently assigned Workspace Quotas based on VMFamily."
    examples:
      - name: List workspace quotas by VMFamily
        text: |-
               az machinelearningservices quota list --location "eastus"
"""

helps['machinelearningservices quota update'] = """
    type: command
    short-summary: "Update quota for each VM family in workspace."
    parameters:
      - name: --value
        short-summary: "The list for update quota."
        long-summary: |
            Usage: --value id=XX type=XX limit=XX unit=XX

            id: Specifies the resource ID.
            type: Specifies the resource type.
            limit: The maximum permitted quota of the resource.
            unit: An enum describing the unit of quota measurement.

            Multiple actions can be specified by using more than one --value argument.
    examples:
      - name: update quotas
        text: |-
               az machinelearningservices quota update --location "eastus" --value type="Microsoft.MachineLearningServi\
ces/workspaces/quotas" id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Ma\
chineLearningServices/workspaces/demo_workspace1/quotas/Standard_DSv2_Family_Cluster_Dedicated_vCPUs" limit=100 \
unit="Count" --value type="Microsoft.MachineLearningServices/workspaces/quotas" id="/subscriptions/00000000-0000-0000-0\
000-000000000000/resourceGroups/rg/providers/Microsoft.MachineLearningServices/workspaces/demo_workspace2/quotas/Standa\
rd_DSv2_Family_Cluster_Dedicated_vCPUs" limit=200 unit="Count"
"""

helps['machinelearningservices machine-learning-compute'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices
"""

helps['machinelearningservices machine-learning-compute list'] = """
    type: command
    short-summary: "Gets computes in specified workspace."
    examples:
      - name: Get Computes
        text: |-
               az machinelearningservices machine-learning-compute list --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices machine-learning-compute show'] = """
    type: command
    short-summary: "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not \
returned - use 'keys' nested resource to get them."
    examples:
      - name: Get a AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute show --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123"
      - name: Get a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute show --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123"
      - name: Get an ComputeInstance
        text: |-
               az machinelearningservices machine-learning-compute show --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute aks'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group aks
"""

helps['machinelearningservices machine-learning-compute aks create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute aks create --compute-name "compute123" --location \
"eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute aks create --compute-name "compute123" --location \
"eastus" --ak-s-properties "{\\"enableNodePublicIp\\":true,\\"isolatedNetwork\\":false,\\"osType\\":\\"Windows\\",\\"re\
moteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeI\
dleTimeBeforeScaleDown\\":\\"PT5M\\"},\\"virtualMachineImage\\":{\\"id\\":\\"/subscriptions/00000000-0000-0000-0000-000\
000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/images/myImageDefinition/\
versions/0.0.1\\"},\\"vmPriority\\":\\"Dedicated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute aks create --compute-name "compute123" --location \
"eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute aks create --compute-name "compute123" --location \
"eastus" --ak-s-properties "{\\"applicationSharingPolicy\\":\\"Personal\\",\\"computeInstanceAuthorizationType\\":\\"pe\
rsonal\\",\\"personalComputeInstanceSettings\\":{\\"assignedUser\\":{\\"objectId\\":\\"00000000-0000-0000-0000-00000000\
0000\\",\\"tenantId\\":\\"00000000-0000-0000-0000-000000000000\\"}},\\"sshSettings\\":{\\"sshPublicAccess\\":\\"Disable\
d\\"},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute aks create --compute-name "compute123" --location \
"eastus" --ak-s-properties "{\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices machine-learning-compute aml-compute'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group aml-compute
"""

helps['machinelearningservices machine-learning-compute aml-compute create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute aml-compute create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute aml-compute create --compute-name "compute123" \
--location "eastus" --aml-compute-properties "{\\"enableNodePublicIp\\":true,\\"isolatedNetwork\\":false,\\"osType\\":\
\\"Windows\\",\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{\\"maxNodeCount\\":1,\\"minNode\
Count\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"},\\"virtualMachineImage\\":{\\"id\\":\\"/subscriptions/00000000\
-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/images\
/myImageDefinition/versions/0.0.1\\"},\\"vmPriority\\":\\"Dedicated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute aml-compute create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute aml-compute create --compute-name "compute123" \
--location "eastus" --aml-compute-properties "{\\"applicationSharingPolicy\\":\\"Personal\\",\\"computeInstanceAuthoriz\
ationType\\":\\"personal\\",\\"personalComputeInstanceSettings\\":{\\"assignedUser\\":{\\"objectId\\":\\"00000000-0000-\
0000-0000-000000000000\\",\\"tenantId\\":\\"00000000-0000-0000-0000-000000000000\\"}},\\"sshSettings\\":{\\"sshPublicAc\
cess\\":\\"Disabled\\"},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group \
"testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute aml-compute create --compute-name "compute123" \
--location "eastus" --aml-compute-properties "{\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute compute-instance'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group compute-instance
"""

helps['machinelearningservices machine-learning-compute compute-instance create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute compute-instance create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute compute-instance create --compute-name "compute123" \
--location "eastus" --compute-instance-properties "{\\"enableNodePublicIp\\":true,\\"isolatedNetwork\\":false,\\"osType\
\\":\\"Windows\\",\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{\\"maxNodeCount\\":1,\\"min\
NodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"},\\"virtualMachineImage\\":{\\"id\\":\\"/subscriptions/0000\
0000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/im\
ages/myImageDefinition/versions/0.0.1\\"},\\"vmPriority\\":\\"Dedicated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute compute-instance create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute compute-instance create --compute-name "compute123" \
--location "eastus" --compute-instance-properties "{\\"applicationSharingPolicy\\":\\"Personal\\",\\"computeInstanceAut\
horizationType\\":\\"personal\\",\\"personalComputeInstanceSettings\\":{\\"assignedUser\\":{\\"objectId\\":\\"00000000-\
0000-0000-0000-000000000000\\",\\"tenantId\\":\\"00000000-0000-0000-0000-000000000000\\"}},\\"sshSettings\\":{\\"sshPub\
licAccess\\":\\"Disabled\\"},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute compute-instance create --compute-name "compute123" \
--location "eastus" --compute-instance-properties "{\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute data-factory'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group data-factory
"""

helps['machinelearningservices machine-learning-compute data-factory create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute data-factory create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute data-factory create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute data-factory create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute data-factory create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute data-factory create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute data-lake-analytics'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group data-lake-analytics
"""

helps['machinelearningservices machine-learning-compute data-lake-analytics create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute data-lake-analytics create --compute-name \
"compute123" --location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute data-lake-analytics create --compute-name \
"compute123" --location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute data-lake-analytics create --compute-name \
"compute123" --location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute data-lake-analytics create --compute-name \
"compute123" --location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute data-lake-analytics create --compute-name \
"compute123" --location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute databricks'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group databricks
"""

helps['machinelearningservices machine-learning-compute databricks create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute databricks create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute databricks create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute databricks create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute databricks create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute databricks create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute hd-insight'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group hd-insight
"""

helps['machinelearningservices machine-learning-compute hd-insight create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --administrator-account
        short-summary: "Admin credentials for master node of the cluster"
        long-summary: |
            Usage: --administrator-account username=XX password=XX public-key-data=XX private-key-data=XX

            username: Username of admin account
            password: Password of admin account
            public-key-data: Public key data
            private-key-data: Private key data
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute hd-insight create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute hd-insight create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute hd-insight create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute hd-insight create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute hd-insight create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute synapse-spark'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group synapse-spark
"""

helps['machinelearningservices machine-learning-compute synapse-spark create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute synapse-spark create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute synapse-spark create --compute-name "compute123" \
--location "eastus" --synapse-spark-properties "{\\"enableNodePublicIp\\":true,\\"isolatedNetwork\\":false,\\"osType\\"\
:\\"Windows\\",\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{\\"maxNodeCount\\":1,\\"minNod\
eCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"},\\"virtualMachineImage\\":{\\"id\\":\\"/subscriptions/0000000\
0-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/image\
s/myImageDefinition/versions/0.0.1\\"},\\"vmPriority\\":\\"Dedicated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute synapse-spark create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute synapse-spark create --compute-name "compute123" \
--location "eastus" --synapse-spark-properties "{\\"applicationSharingPolicy\\":\\"Personal\\",\\"computeInstanceAuthor\
izationType\\":\\"personal\\",\\"personalComputeInstanceSettings\\":{\\"assignedUser\\":{\\"objectId\\":\\"00000000-000\
0-0000-0000-000000000000\\",\\"tenantId\\":\\"00000000-0000-0000-0000-000000000000\\"}},\\"sshSettings\\":{\\"sshPublic\
Access\\":\\"Disabled\\"},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute synapse-spark create --compute-name "compute123" \
--location "eastus" --synapse-spark-properties "{\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute virtual-machine'] = """
    type: group
    short-summary: Manage machine learning compute with machinelearningservices sub group virtual-machine
"""

helps['machinelearningservices machine-learning-compute virtual-machine create'] = """
    type: command
    short-summary: "Create compute. This call will overwrite a compute if it exists. This is a nonrecoverable \
operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
    examples:
      - name: Create AKS Compute
        text: |-
               az machinelearningservices machine-learning-compute virtual-machine create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a AML Compute
        text: |-
               az machinelearningservices machine-learning-compute virtual-machine create --compute-name "compute123" \
--location "eastus" --virtual-machine-properties "{\\"enableNodePublicIp\\":true,\\"isolatedNetwork\\":false,\\"osType\
\\":\\"Windows\\",\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{\\"maxNodeCount\\":1,\\"min\
NodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"},\\"virtualMachineImage\\":{\\"id\\":\\"/subscriptions/0000\
0000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/im\
ages/myImageDefinition/versions/0.0.1\\"},\\"vmPriority\\":\\"Dedicated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create a DataFactory Compute
        text: |-
               az machinelearningservices machine-learning-compute virtual-machine create --compute-name "compute123" \
--location "eastus" --resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute virtual-machine create --compute-name "compute123" \
--location "eastus" --virtual-machine-properties "{\\"applicationSharingPolicy\\":\\"Personal\\",\\"computeInstanceAuth\
orizationType\\":\\"personal\\",\\"personalComputeInstanceSettings\\":{\\"assignedUser\\":{\\"objectId\\":\\"00000000-0\
000-0000-0000-000000000000\\",\\"tenantId\\":\\"00000000-0000-0000-0000-000000000000\\"}},\\"sshSettings\\":{\\"sshPubl\
icAccess\\":\\"Disabled\\"},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}" \
--resource-group "testrg123" --workspace-name "workspaces123"
      - name: Create an ComputeInstance Compute with minimal inputs
        text: |-
               az machinelearningservices machine-learning-compute virtual-machine create --compute-name "compute123" \
--location "eastus" --virtual-machine-properties "{\\"vmSize\\":\\"STANDARD_NC6\\"}" --resource-group "testrg123" \
--workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute update'] = """
    type: command
    short-summary: "Updates properties of a compute. This call will overwrite a compute if it exists. This is a \
nonrecoverable operation."
    parameters:
      - name: --scale-settings
        short-summary: "Desired scale settings for the amlCompute."
        long-summary: |
            Usage: --scale-settings max-node-count=XX min-node-count=XX node-idle-time-before-scale-down=XX

            max-node-count: Required. Max number of nodes to use
            min-node-count: Min number of nodes to use
            node-idle-time-before-scale-down: Node Idle Time before scaling down amlCompute. This string needs to be \
in the RFC Format.
    examples:
      - name: Update a AmlCompute Compute
        text: |-
               az machinelearningservices machine-learning-compute update --compute-name "compute123" --scale-settings \
max-node-count=4 min-node-count=4 node-idle-time-before-scale-down="PT5M" --resource-group "testrg123" \
--workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute delete'] = """
    type: command
    short-summary: "Deletes specified Machine Learning compute."
    examples:
      - name: Delete Compute
        text: |-
               az machinelearningservices machine-learning-compute delete --compute-name "compute123" --resource-group \
"testrg123" --underlying-resource-action "Delete" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute list-key'] = """
    type: command
    short-summary: "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc)."
    examples:
      - name: List AKS Compute Keys
        text: |-
               az machinelearningservices machine-learning-compute list-key --compute-name "compute123" \
--resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute list-node'] = """
    type: command
    short-summary: "Get the details (e.g IP address, port etc) of all the compute nodes in the compute."
    examples:
      - name: Get compute nodes information for a compute
        text: |-
               az machinelearningservices machine-learning-compute list-node --compute-name "compute123" \
--resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute restart'] = """
    type: command
    short-summary: "Posts a restart action to a compute instance."
    examples:
      - name: Restart ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute restart --compute-name "compute123" \
--resource-group "testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute start'] = """
    type: command
    short-summary: "Posts a start action to a compute instance."
    examples:
      - name: Start ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute start --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute stop'] = """
    type: command
    short-summary: "Posts a stop action to a compute instance."
    examples:
      - name: Stop ComputeInstance Compute
        text: |-
               az machinelearningservices machine-learning-compute stop --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-compute wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the machinelearningservices \
machine-learning-compute is met.
    examples:
      - name: Pause executing next line of CLI script until the machinelearningservices machine-learning-compute is \
successfully created.
        text: |-
               az machinelearningservices machine-learning-compute wait --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123" --created
      - name: Pause executing next line of CLI script until the machinelearningservices machine-learning-compute is \
successfully updated.
        text: |-
               az machinelearningservices machine-learning-compute wait --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123" --updated
      - name: Pause executing next line of CLI script until the machinelearningservices machine-learning-compute is \
successfully deleted.
        text: |-
               az machinelearningservices machine-learning-compute wait --compute-name "compute123" --resource-group \
"testrg123" --workspace-name "workspaces123" --deleted
"""

helps['machinelearningservices workspace'] = """
    type: group
    short-summary: Manage workspace with machinelearningservices
"""

helps['machinelearningservices workspace list-sku'] = """
    type: command
    short-summary: "Lists all skus with associated features."
    examples:
      - name: List Skus
        text: |-
               az machinelearningservices workspace list-sku
"""

helps['machinelearningservices private-endpoint-connection'] = """
    type: group
    short-summary: Manage private endpoint connection with machinelearningservices
"""

helps['machinelearningservices private-endpoint-connection show'] = """
    type: command
    short-summary: "Gets the specified private endpoint connection associated with the workspace."
    examples:
      - name: WorkspaceGetPrivateEndpointConnection
        text: |-
               az machinelearningservices private-endpoint-connection show --name "{privateEndpointConnectionName}" \
--resource-group "rg-1234" --workspace-name "testworkspace"
"""

helps['machinelearningservices private-endpoint-connection delete'] = """
    type: command
    short-summary: "Deletes the specified private endpoint connection associated with the workspace."
    examples:
      - name: WorkspaceDeletePrivateEndpointConnection
        text: |-
               az machinelearningservices private-endpoint-connection delete --name "{privateEndpointConnectionName}" \
--resource-group "rg-1234" --workspace-name "testworkspace"
"""

helps['machinelearningservices private-endpoint-connection put'] = """
    type: command
    short-summary: "Update the state of specified private endpoint connection associated with the workspace."
    parameters:
      - name: --sku
        short-summary: "The sku of the workspace."
        long-summary: |
            Usage: --sku name=XX tier=XX

            name: Name of the sku
            tier: Tier of the sku like Basic or Enterprise
      - name: --private-link-service-connection-state
        short-summary: "A collection of information about the state of the connection between service consumer and \
provider."
        long-summary: |
            Usage: --private-link-service-connection-state status=XX description=XX actions-required=XX

            status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
            description: The reason for approval/rejection of the connection.
            actions-required: A message indicating if changes on the service provider require any updates on the \
consumer.
    examples:
      - name: WorkspacePutPrivateEndpointConnection
        text: |-
               az machinelearningservices private-endpoint-connection put --name "{privateEndpointConnectionName}" \
--private-link-service-connection-state description="Auto-Approved" status="Approved" --resource-group "rg-1234" \
--workspace-name "testworkspace"
"""

helps['machinelearningservices private-link-resource'] = """
    type: group
    short-summary: Manage private link resource with machinelearningservices
"""

helps['machinelearningservices private-link-resource list'] = """
    type: command
    short-summary: "Gets the private link resources that need to be created for a workspace."
    examples:
      - name: WorkspaceListPrivateLinkResources
        text: |-
               az machinelearningservices private-link-resource list --resource-group "rg-1234" --workspace-name \
"testworkspace"
"""

helps['machinelearningservices machine-learning-service'] = """
    type: group
    short-summary: Manage machine learning service with machinelearningservices
"""

helps['machinelearningservices machine-learning-service list'] = """
    type: command
    short-summary: "Gets services in specified workspace."
    examples:
      - name: Get Services
        text: |-
               az machinelearningservices machine-learning-service list --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices machine-learning-service show'] = """
    type: command
    short-summary: "Get a Service by name."
    examples:
      - name: Get Service
        text: |-
               az machinelearningservices machine-learning-service show --resource-group "testrg123" --service-name \
"service123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-service create'] = """
    type: command
    short-summary: "Create service. This call will update a service if it exists. This is a nonrecoverable operation. \
If your intent is to create a new service, do a GET first to verify that it does not exist yet."
    examples:
      - name: Create Or Update service
        text: |-
               az machinelearningservices machine-learning-service create --properties "{\\"appInsightsEnabled\\":true,\
\\"authEnabled\\":true,\\"computeType\\":\\"ACI\\",\\"containerResourceRequirements\\":{\\"cpu\\":1,\\"memoryInGB\\":1}\
,\\"environmentImageRequest\\":{\\"assets\\":[{\\"id\\":null,\\"mimeType\\":\\"application/x-python\\",\\"unpack\\":fal\
se,\\"url\\":\\"aml://storage/azureml/score.py\\"}],\\"driverProgram\\":\\"score.py\\",\\"environment\\":{\\"name\\":\\\
"AzureML-Scikit-learn-0.20.3\\",\\"docker\\":{\\"baseDockerfile\\":null,\\"baseImage\\":\\"mcr.microsoft.com/azureml/ba\
se:openmpi3.1.2-ubuntu16.04\\",\\"baseImageRegistry\\":{\\"address\\":null,\\"password\\":null,\\"username\\":null}},\\\
"environmentVariables\\":{\\"EXAMPLE_ENV_VAR\\":\\"EXAMPLE_VALUE\\"},\\"inferencingStackVersion\\":null,\\"python\\":{\
\\"baseCondaEnvironment\\":null,\\"condaDependencies\\":{\\"name\\":\\"azureml_ae1acbe6e1e6aabbad900b53c491a17c\\",\\"c\
hannels\\":[\\"conda-forge\\"],\\"dependencies\\":[\\"python=3.6.2\\",{\\"pip\\":[\\"azureml-core==1.0.69\\",\\"azureml\
-defaults==1.0.69\\",\\"azureml-telemetry==1.0.69\\",\\"azureml-train-restclients-hyperdrive==1.0.69\\",\\"azureml-trai\
n-core==1.0.69\\",\\"scikit-learn==0.20.3\\",\\"scipy==1.2.1\\",\\"numpy==1.16.2\\",\\"joblib==0.13.2\\"]}]},\\"interpr\
eterPath\\":\\"python\\",\\"userManagedDependencies\\":false},\\"spark\\":{\\"packages\\":[],\\"precachePackages\\":tru\
e,\\"repositories\\":[]},\\"version\\":\\"3\\"},\\"models\\":[{\\"name\\":\\"sklearn_regression_model.pkl\\",\\"mimeTyp\
e\\":\\"application/x-python\\",\\"url\\":\\"aml://storage/azureml/sklearn_regression_model.pkl\\"}]},\\"location\\":\\\
"eastus2\\"}" --resource-group "testrg123" --service-name "service456" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-service update'] = """
    type: command
    short-summary: "Update service. This call will update a service if it exists. This is a nonrecoverable operation. \
If your intent is to Update a new service, do a GET first to verify that it does not exist yet."
"""

helps['machinelearningservices machine-learning-service delete'] = """
    type: command
    short-summary: "Delete a specific Service.."
    examples:
      - name: Delete Service
        text: |-
               az machinelearningservices machine-learning-service delete --resource-group "testrg123" --service-name \
"service123" --workspace-name "workspaces123"
"""

helps['machinelearningservices machine-learning-service wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the machinelearningservices \
machine-learning-service is met.
    examples:
      - name: Pause executing next line of CLI script until the machinelearningservices machine-learning-service is \
successfully created.
        text: |-
               az machinelearningservices machine-learning-service wait --resource-group "testrg123" --service-name \
"service123" --workspace-name "workspaces123" --created
      - name: Pause executing next line of CLI script until the machinelearningservices machine-learning-service is \
successfully updated.
        text: |-
               az machinelearningservices machine-learning-service wait --resource-group "testrg123" --service-name \
"service123" --workspace-name "workspaces123" --updated
"""

helps['machinelearningservices notebook'] = """
    type: group
    short-summary: Manage notebook with machinelearningservices
"""

helps['machinelearningservices notebook list-key'] = """
    type: command
    short-summary: "."
    examples:
      - name: List Workspace Keys
        text: |-
               az machinelearningservices notebook list-key --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices notebook prepare'] = """
    type: command
    short-summary: "."
    examples:
      - name: Prepare Notebook
        text: |-
               az machinelearningservices notebook prepare --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices storage-account'] = """
    type: group
    short-summary: Manage storage account with machinelearningservices
"""

helps['machinelearningservices storage-account list-key'] = """
    type: command
    short-summary: "."
    examples:
      - name: List Workspace Keys
        text: |-
               az machinelearningservices storage-account list-key --resource-group "testrg123" --workspace-name \
"workspaces123"
"""

helps['machinelearningservices workspace-connection'] = """
    type: group
    short-summary: Manage workspace connection with machinelearningservices
"""

helps['machinelearningservices workspace-connection list'] = """
    type: command
    short-summary: "List all connections under a AML workspace."
    examples:
      - name: ListWorkspaceConnections
        text: |-
               az machinelearningservices workspace-connection list --category "ACR" --resource-group \
"resourceGroup-1" --target "www.facebook.com" --workspace-name "workspace-1"
"""

helps['machinelearningservices workspace-connection show'] = """
    type: command
    short-summary: "Get the detail of a workspace connection."
    examples:
      - name: GetWorkspaceConnection
        text: |-
               az machinelearningservices workspace-connection show --connection-name "connection-1" --resource-group \
"resourceGroup-1" --workspace-name "workspace-1"
"""

helps['machinelearningservices workspace-connection create'] = """
    type: command
    short-summary: "Add a new workspace connection."
    examples:
      - name: CreateWorkspaceConnection
        text: |-
               az machinelearningservices workspace-connection create --connection-name "connection-1" --name \
"connection-1" --auth-type "PAT" --category "ACR" --target "www.facebook.com" --value "secrets" --resource-group \
"resourceGroup-1" --workspace-name "workspace-1"
"""

helps['machinelearningservices workspace-connection delete'] = """
    type: command
    short-summary: "Delete a workspace connection."
    examples:
      - name: DeleteWorkspaceConnection
        text: |-
               az machinelearningservices workspace-connection delete --connection-name "connection-1" \
--resource-group "resourceGroup-1" --workspace-name "workspace-1"
"""
