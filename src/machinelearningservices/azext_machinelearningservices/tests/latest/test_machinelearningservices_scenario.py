# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    pass


# EXAMPLE: /Workspaces/post/List Workspace Keys
@try_manual
def step__workspaces_post_list_workspace_keys(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace list-key '
             '--resource-group "{rg_3}" '
             '--name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /Workspaces/get/Get Workspaces by subscription
@try_manual
def step__workspaces_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace list '
             '-g ""',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /Workspaces/patch/Update Workspace
@try_manual
def step__workspaces_patch_update_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace update '
             '--description "new description" '
             '--friendly-name "New friendly name" '
             '--sku name="Enterprise" tier="Enterprise" '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=[
                 test.check("description", "new description", case_sensitive=False),
                 test.check("friendlyName", "New friendly name", case_sensitive=False),
                 test.check("sku.name", "Enterprise", case_sensitive=False),
                 test.check("sku.tier", "Enterprise", case_sensitive=False),
                 test.check("name", "{myWorkspace}", case_sensitive=False),
             ])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /Workspaces/get/Get Workspaces by Resource Group
@try_manual
def step__workspaces_get2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace list '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /Workspaces/put/Create Workspace
@try_manual
def step__workspaces_put_create_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace create '
             '--location "eastus2euap" '
             '--description "test description" '
             '--application-insights "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/microsoft.insights'
             '/components/testinsights" '
             '--container-registry "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.ContainerR'
             'egistry/registries/testRegistry" '
             '--friendly-name "HelloName" '
             '--hbi-workspace false '
             '--key-vault "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.KeyVault/vaults/tes'
             'tkv" '
             '--shared-private-link-resources name="testdbresource" private-link-resource-id="/subscriptions/{subscript'
             'ion_id}/resourceGroups/{rg}/providers/Microsoft.DocumentDB/databaseAccounts/testdbresource/privateLinkRes'
             'ources/{myPrivateLinkResource}" group-id="{myPrivateLinkResource}" request-message="Please approve" '
             'status="Approved" '
             '--storage-account "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Storage/sto'
             'rageAccounts/{sa}" '
             '--sku name="Basic" tier="Basic" '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=[
                 test.check("description", "test description", case_sensitive=False),
                 test.check("friendlyName", "HelloName", case_sensitive=False),
                 test.check("sku.name", "Basic", case_sensitive=False),
                 test.check("sku.tier", "Basic", case_sensitive=False),
                 test.check("name", "{myWorkspace}", case_sensitive=False),
                 test.check("location", "eastus2euap", case_sensitive=False),
                 test.check("applicationInsights", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/micr"
                            "osoft.insights/components/testinsights", case_sensitive=False),
                 test.check("containerRegistry", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Micros"
                            "oft.ContainerRegistry/registries/testRegistry", case_sensitive=False),
                 test.check("hbiWorkspace", False),
                 test.check("keyVault", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.KeyVa"
                            "ult/vaults/testkv", case_sensitive=False),
                 test.check("storageAccount", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microso"
                            "ft.Storage/storageAccounts/{sa}", case_sensitive=False),
             ])
    test.cmd('az machinelearningservices workspace wait --created '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a AML Compute
@try_manual
def step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"remoteLoginPortPublicAccess\\":\\"NotSpecified\\",\\"scaleSettings\\":{{\\"maxNod'
             'eCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBeforeScaleDown\\":\\"PT5M\\"}},\\"vmPriority\\":\\"Dedic'
             'ated\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute
@try_manual
def step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"applicationSharingPolicy\\":\\"Personal\\",\\"sshSettings\\":{{\\"sshPublicAccess'
             '\\":\\"Disabled\\"}},\\"subnet\\":\\"test-subnet-resource-id\\",\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a ComputeInstance Compute with minimal inputs
@try_manual
def step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"vmSize\\":\\"STANDARD_NC6\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create a DataFactory Compute
@try_manual
def step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Create AKS Compute
@try_manual
def step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AKS Compute
@try_manual
def step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--location "eastus" '
             '--ak-s-description "some compute" '
             '--ak-s-properties "{{\\"agentCount\\":4}}" '
             '--ak-s-resource-id "/subscriptions/{subscription_id}/resourcegroups/{rg_3}/providers/Microsoft.ContainerS'
             'ervice/managedClusters/compute123-56826-c9b00420020b2" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/put/Update a AML Compute
@try_manual
def step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute aks create '
             '--compute-name "compute123" '
             '--identity-type "SystemAssigned,UserAssigned" '
             '--identity-user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGro'
             'ups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name\\":{{}}}}" '
             '--location "eastus" '
             '--ak-s-properties "{{\\"scaleSettings\\":{{\\"maxNodeCount\\":1,\\"minNodeCount\\":0,\\"nodeIdleTimeBefor'
             'eScaleDown\\":\\"PT5M\\"}}}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/get/Get a AKS Compute
@try_manual
def step__machinelearningcompute_get_get_a_aks_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute show '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/get/Get a AML Compute
@try_manual
def step__machinelearningcompute_get_get_a_aml_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute show '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/get/Get a ComputeInstance
@try_manual
def step__machinelearningcompute_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute show '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/get/Get Computes
@try_manual
def step__machinelearningcompute_get_get_computes(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute list '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/patch/Update a AmlCompute Compute
@try_manual
def step__machinelearningcompute_patch(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute update '
             '--compute-name "compute123" '
             '--scale-settings max-node-count=4 min-node-count=4 node-idle-time-before-scale-down="PT5M" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/post/Get compute nodes information for a compute
@try_manual
def step__machinelearningcompute_post(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute list-node '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/post/List AKS Compute Keys
@try_manual
def step__machinelearningcompute_post2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute list-key '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/post/Restart ComputeInstance Compute
@try_manual
def step__machinelearningcompute_post3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute restart '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/post/Start ComputeInstance Compute
@try_manual
def step__machinelearningcompute_post4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute start '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/post/Stop ComputeInstance Compute
@try_manual
def step__machinelearningcompute_post5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute stop '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /machinelearningservices /get/List Skus
@try_manual
def step__machinelearningservices__get_list_skus(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices  list-sku',
             checks=[])


# EXAMPLE: /Notebooks/post/Prepare Notebook
@try_manual
def step__notebooks_post_prepare_notebook(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices notebook prepare '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /PrivateEndpointConnections/put/WorkspacePutPrivateEndpointConnection
@try_manual
def step__privateendpointconnections_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices private-endpoint-connection put '
             '--name "{myPrivateEndpointConnection}" '
             '--private-link-service-connection-state description="Auto-Approved" status="Approved" '
             '--resource-group "{rg_7}" '
             '--workspace-name "{myWorkspace}"',
             checks=[])


# EXAMPLE: /PrivateEndpointConnections/get/WorkspaceGetPrivateEndpointConnection
@try_manual
def step__privateendpointconnections_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices private-endpoint-connection show '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg_7}" '
             '--workspace-name "{myWorkspace}"',
             checks=[
                 test.check("name", "{myPrivateEndpointConnection}", case_sensitive=False),
             ])


# EXAMPLE: /PrivateEndpointConnections/delete/WorkspaceDeletePrivateEndpointConnection
@try_manual
def step__privateendpointconnections_delete(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices private-endpoint-connection delete -y '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg_7}" '
             '--workspace-name "{myWorkspace}"',
             checks=[])


# EXAMPLE: /PrivateLinkResources/get/WorkspaceListPrivateLinkResources
@try_manual
def step__privatelinkresources_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices private-link-resource list '
             '--resource-group "{rg_7}" '
             '--workspace-name "{myWorkspace}"',
             checks=[])


# EXAMPLE: /Quotas/get/List workspace quotas by VMFamily
@try_manual
def step__quotas_get_list_workspace_quotas_by_vmfamily(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices quota list '
             '--location "eastus"',
             checks=[])


# EXAMPLE: /Quotas/post/update quotas
@try_manual
def step__quotas_post_update_quotas(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices quota update '
             '--location "eastus" '
             '--value type="Microsoft.MachineLearningServices/workspaces/dedicatedCores/quotas" '
             'id="/subscriptions/{subscription_id}/resourceGroups/{rg_5}/providers/Microsoft.MachineLearningServices/wo'
             'rkspaces/{myWorkspace3}/quotas/{myQuota}" limit=100 unit="Count" '
             '--value type="Microsoft.MachineLearningServices/workspaces/dedicatedCores/quotas" '
             'id="/subscriptions/{subscription_id}/resourceGroups/{rg_5}/providers/Microsoft.MachineLearningServices/wo'
             'rkspaces/{myWorkspace4}/quotas/{myQuota}" limit=200 unit="Count"',
             checks=[])


# EXAMPLE: /Usages/get/List Usages
@try_manual
def step__usages_get_list_usages(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices usage list '
             '--location "eastus"',
             checks=[])


# EXAMPLE: /VirtualMachineSizes/get/List VM Sizes
@try_manual
def step__virtualmachinesizes_get_list_vm_sizes(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices virtual-machine-size list '
             '--location "eastus" '
             '--recommended false',
             checks=[])


# EXAMPLE: /Workspaces/get/Get Workspace
@try_manual
def step__workspaces_get_get_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace show '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=[
                 test.check("description", "test description", case_sensitive=False),
                 test.check("friendlyName", "HelloName", case_sensitive=False),
                 test.check("name", "{myWorkspace}", case_sensitive=False),
                 test.check("location", "eastus2euap", case_sensitive=False),
                 test.check("applicationInsights", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/micr"
                            "osoft.insights/components/testinsights", case_sensitive=False),
                 test.check("containerRegistry", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Micros"
                            "oft.ContainerRegistry/registries/testRegistry", case_sensitive=False),
                 test.check("hbiWorkspace", False),
                 test.check("keyVault", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.KeyVa"
                            "ult/vaults/testkv", case_sensitive=False),
                 test.check("storageAccount", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microso"
                            "ft.Storage/storageAccounts/{sa}", case_sensitive=False),
             ])


# EXAMPLE: /Workspaces/post/Resync Workspace Keys
@try_manual
def step__workspaces_post_resync_workspace_keys(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace resync-key '
             '--resource-group "{rg_3}" '
             '--name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /MachineLearningCompute/delete/Delete Compute
@try_manual
def step__machinelearningcompute_delete_delete_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices machine-learning-compute delete -y '
             '--compute-name "compute123" '
             '--resource-group "{rg_3}" '
             '--underlying-resource-action "Delete" '
             '--workspace-name "{myWorkspace2}"',
             checks=[])


# EXAMPLE: /WorkspaceConnections/put/CreateWorkspaceConnection
@try_manual
def step__workspaceconnections_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace-connection create '
             '--connection-name "{myMachinelearningservices}" '
             '--name "{myMachinelearningservices}" '
             '--auth-type "PAT" '
             '--category "ACR" '
             '--target "www.facebook.com" '
             '--value "secrets" '
             '--resource-group "{rg_6}" '
             '--workspace-name "{myWorkspace5}"',
             checks=[])


# EXAMPLE: /WorkspaceConnections/get/GetWorkspaceConnection
@try_manual
def step__workspaceconnections_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace-connection show '
             '--connection-name "{myMachinelearningservices}" '
             '--resource-group "{rg_6}" '
             '--workspace-name "{myWorkspace5}"',
             checks=[])


# EXAMPLE: /WorkspaceConnections/get/ListWorkspaceConnections
@try_manual
def step__workspaceconnections_get2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace-connection list '
             '--category "ACR" '
             '--resource-group "{rg_6}" '
             '--target "www.facebook.com" '
             '--workspace-name "{myWorkspace5}"',
             checks=[])


# EXAMPLE: /WorkspaceConnections/delete/DeleteWorkspaceConnection
@try_manual
def step__workspaceconnections_delete(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace-connection delete -y '
             '--connection-name "{myMachinelearningservices}" '
             '--resource-group "{rg_6}" '
             '--workspace-name "{myWorkspace5}"',
             checks=[])


# EXAMPLE: /WorkspaceFeatures/get/List Workspace features
@try_manual
def step__workspacefeatures_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace-feature list '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace}"',
             checks=[])


# EXAMPLE: /Workspaces/delete/Delete Workspace
@try_manual
def step__workspaces_delete_delete_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    test.cmd('az machinelearningservices workspace delete -y '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    pass


# Testcase
@try_manual
def call_scenario(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):
    setup(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_post_list_workspace_keys(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_patch_update_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_get2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_put_create_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put6(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_put7(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_get_get_a_aks_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_get_get_a_aml_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_get_get_computes(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_patch(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_post(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_post2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_post3(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_post4(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_post5(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningservices__get_list_skus(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__notebooks_post_prepare_notebook(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__privateendpointconnections_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__privateendpointconnections_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__privateendpointconnections_delete(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__privatelinkresources_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__quotas_get_list_workspace_quotas_by_vmfamily(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__quotas_post_update_quotas(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__usages_get_list_usages(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__virtualmachinesizes_get_list_vm_sizes(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_get_get_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_post_resync_workspace_keys(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__machinelearningcompute_delete_delete_compute(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaceconnections_put(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaceconnections_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaceconnections_get2(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaceconnections_delete(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspacefeatures_get(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    step__workspaces_delete_delete_workspace(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
    cleanup(test, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)


@try_manual
class AzureMachineLearningWorkspacesScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_workspace-1234'[:7], key='rg', parameter_name=''
                           'rg')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_accountcrud-1234'[:7], key='rg_2',
                           parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_rg'[:7], key='rg_5', parameter_name='rg_5')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_testrg123'[:7], key='rg_3', parameter_name=''
                           'rg_3')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_myResourceGroup'[:7], key='rg_4',
                           parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_resourceGroup-1'[:7], key='rg_6',
                           parameter_name='rg_6')
    @ResourceGroupPreparer(name_prefix='clitestmachinelearningservices_rg-1234'[:7], key='rg_7',
                           parameter_name='rg_7')
    @StorageAccountPreparer(name_prefix='clitestmachinelearningservices_testStorageAccount'[:7], key='sa',
                            resource_group_parameter_name='rg_2')
    def test_machinelearningservices(self, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myMachinelearningservices': 'connection-1',
            'myWorkspace6': 'default',
            'myPrivateLinkResource2': 'default',
            'myWorkspace3': 'demo_workspace1',
            'myWorkspace4': 'demo_workspace2',
            'myWorkspace': 'testworkspace',
            'myWorkspace2': 'workspaces123',
            'myWorkspace5': 'workspace-1',
            'myQuota': 'StandardDSv2Family',
            'myPrivateEndpointConnection': '{privateEndpointConnectionName}',
            'myPrivateLinkResource': 'Sql',
        })

        call_scenario(self, rg, rg_2, rg_5, rg_3, rg_4, rg_6, rg_7)
        calc_coverage(__file__)
        raise_if()
