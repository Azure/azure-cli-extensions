interactions:
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:19:43.7737738Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:19:43.7737738Z"},"identity":{"principalId":"ee751eb2-0014-4826-8764-6f71f575360f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"11"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview, 2024-10-01, 2024-11-01-preview, 2025-01-01-preview, 2025-02-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
      cache-control:
      - no-cache
      content-length:
      - '1227'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:19:44 GMT
      etag:
      - '"4500f5a1-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848987909&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=AVPiEYsJs9mF4Bp25HBkN8PNp5mj9mWO4dK9KS64zD1XSqM2Ku9gtCPx-SXazYKS2I-4nIg4q3SvR-SRg4HY4vOuPmisbX3stUVLc-EKkFziPnNQf7NT0jbleUFx8Q9v46YFzsaoDuigxB2OLSMbaO7h8oevjlR22OyimQbogaZGs8VT4Ey0CpBJDa2mfQNyMOVbotoBCvB0naIgy5x7LCU7C22dzqxINwd-6pVSTiFg972I0ziw8i0HQuBrasYrUv84HmSvAkq93G9wSSwvBKmwPEDRrlTt96iOnSOfSZehr1BZuVXltUMhu8BxEGog-LUFIk0tbkApoxJ4Kwnl0A&h=HRKBM_DVXqPbOWOYOVNC264bCUNvRnqWezr0pj4jA6Y
      mise-correlation-id:
      - db4b1996-a97f-46b7-9b52-cbc29f89f5df
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-async-operation-timeout:
      - P6D
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/8b48e8a0-e8de-4fb7-8123-11d5ac83ae43
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '19999'
      x-msedge-ref:
      - 'Ref A: F2915EBC1AF5487CB0FFDAB0D0066D59 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:19:42Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2025-04-21T20:19:44.4686826Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:19:44 GMT
      etag:
      - '"2d00f920-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: D74E41310DAE46B98BD2C528CDC303B8 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:19:44Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2025-04-21T20:19:44.4686826Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:20:14 GMT
      etag:
      - '"2d00f920-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: B29A084485934802B910515D10353D53 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:20:15Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2025-04-21T20:19:44.4686826Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:20:44 GMT
      etag:
      - '"2d00f920-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 6047878CC89349BB94D5D3BEF5DFF190 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:20:45Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2025-04-21T20:19:44.4686826Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:21:14 GMT
      etag:
      - '"2d00f920-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: EA1521C2A98446009BAABBD9A2D69355 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:21:15Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2025-04-21T20:19:44.4686826Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:21:44 GMT
      etag:
      - '"2d00f920-0000-0600-0000-6806a8600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 4DE422141DA1404BBF94FAD301FBD8FE Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:21:45Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808635848831637&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=dG1D7leT59vyKcU-_z7cU7JbCq-IUPAq7i25f_WI0ztqyVkLiP8pgJJpfxsdBNuWSbUGIJd9rvg9m9FFeqSiybXzZFzQY0wmKMapwZyHtugonjox7wnpjGS6V8_IMSETV6D3K13MYo05V9VDYBe-8G0Dnc7Ray5WNCfzEWdHx10c47dq6Qg2sGSep1pU1r0VuD5JI8kNLF5cZg9UmaJ7rSafS5lPndUA1sEweQokLOX8V4rLwjSr06HksY4JOr-iBDLm6gMsqQiShxIrpEav6I7rzncpqvLG5kHqUUIEaM-iImCUo9q5PN2CmmMS-29HHWf1-mPkYgnFaAhp6epHAg&h=mxe_oxBNd_msHj4re29RBEMbfVzIbop3fkE5ybtg-3U
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"cd989f88-37c9-45b1-b946-68f5bf3e7892*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Succeeded","startTime":"2025-04-21T20:19:44.4686826Z","endTime":"2025-04-21T20:22:01.2336565Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '591'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:14 GMT
      etag:
      - '"2d002722-0000-0600-0000-6806a8e90000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 76F2901D61B344F4A2A0D8CE2C6AE61D Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:22:15Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:19:43.7737738Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:19:43.7737738Z"},"identity":{"principalId":"ee751eb2-0014-4826-8764-6f71f575360f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:15 GMT
      etag:
      - '"ce02bc9a-0000-0800-0000-6806a8e90000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 7DCBCCEDF0984591AEA45BC1767188B3 Ref B: CO6AA3150220027 Ref C: 2025-04-21T20:22:15Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.9.13 (Windows-10-10.0.22621-SP0) AZURECLI/2.71.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:16 GMT
      odata-version:
      - '4.0'
      request-id:
      - 42939365-7b8c-4b36-a7bd-accac5f33778
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"002","RoleInstance":"MWH0EPF000B7A9D"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:16 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/931f608b-7850-42fe-80d7-594fc86c255c
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 8938875916BD4314BCB0A22FD6E47183 Ref B: CO6AA3150219017 Ref C: 2025-04-21T20:22:16Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:22:17.1383000Z","updatedOn":"2025-04-21T20:22:17.4693031Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000001"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1003'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:17 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/2f66e672-9d8b-4382-8552-b1be9ec9b919
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: A6596C77B22E450D9F52822A2840073A Ref B: MWH011020808062 Ref C: 2025-04-21T20:22:16Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:17 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/a57ff47b-6487-41e4-94a5-17b2ddd01549
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16498'
      x-msedge-ref:
      - 'Ref A: 3279699D82A84A9C864BFC7F4C56BAE7 Ref B: MWH011020807031 Ref C: 2025-04-21T20:22:18Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "ee751eb2-0014-4826-8764-6f71f575360f", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"error":{"code":"UnmatchedPrincipalType","message":"The PrincipalId
        ''ee751eb20014482687646f71f575360f'' has type ''ServicePrincipal'' , which
        is different from specified PrinciaplType ''User''."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '192'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/6ed9e018-a7ed-49f8-a332-efbf95a86463
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 320B03F8360C46EDA7EE4A24A22C241B Ref B: MWH011020807029 Ref C: 2025-04-21T20:22:18Z'
    status:
      code: 400
      message: Bad Request
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "ee751eb2-0014-4826-8764-6f71f575360f", "principalType": "Group"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '259'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"error":{"code":"UnmatchedPrincipalType","message":"The PrincipalId
        ''ee751eb20014482687646f71f575360f'' has type ''ServicePrincipal'' , which
        is different from specified PrinciaplType ''Group''."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '193'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/5ecebe4f-8f8f-4c5c-8511-6148660b8801
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11998'
      x-ms-ratelimit-remaining-subscription-writes:
      - '798'
      x-msedge-ref:
      - 'Ref A: 87537414F489424791E1B6E79313CF35 Ref B: MWH011020807029 Ref C: 2025-04-21T20:22:18Z'
    status:
      code: 400
      message: Bad Request
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "ee751eb2-0014-4826-8764-6f71f575360f", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"ee751eb2-0014-4826-8764-6f71f575360f","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:22:19.2093437Z","updatedOn":"2025-04-21T20:22:19.3723435Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:22 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/d05f3d41-2b5f-4a6f-9ff8-f6669f46599b
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 482096E1EA0F46ABB017D4D46C716A2C Ref B: MWH011020807029 Ref C: 2025-04-21T20:22:19Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:22:23.8725991Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:22:23.8725991Z"},"identity":{"principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"11"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview, 2024-10-01, 2024-11-01-preview, 2025-01-01-preview, 2025-02-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
      cache-control:
      - no-cache
      content-length:
      - '1227'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:23 GMT
      etag:
      - '"450091a9-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448569202&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=N7-NIi9rfZhVqUGXMAnsGBseZuptaRHQm_egUitYuwmvVFQEDbeN4_FSrlyQZ6uxtx0eb8SxPzLyipT-9osfd_8N2ltYGCjIFJzm-4AUoZQOzAsV76O1MFY81P0YKUDmJGbZz9PxYCs_LEEEaIxalk33I5MHvCyXe470Prfh0kFt0WLqY3653xvvCe5d2kV_-zdP9hpCCHLJqPSv5XgQMpgQtxyHP-0TO-IIOA8FpZ2TEHpsiU_Haf0Bla5es5AJv1qQQZNsmRXWzh6aWJSE_sjcAVy-JaWeAM0Xzha38Jmqmz6wGNCsWyFnDG8yHhX7xaH3f-7CxpZS5-BTQxSXcA&h=EZdE9kHbHCcyHhPo0vngdMlm4Ptgpi55aEbA0HILJ4I
      mise-correlation-id:
      - 406f0caf-4bab-4621-9b9f-f7524a87d875
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-async-operation-timeout:
      - P6D
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/654dd98e-9708-41e2-8352-731f37d063ec
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '19999'
      x-msedge-ref:
      - 'Ref A: CEED9E0174EC4BAFB38BA1CE9F1DFDD5 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:22:23Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:24 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 954E3B2B4CDD4EF5A92653F8103455EF Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:22:24Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:22:54 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: B7C0EF9C88BE4F978FA2E0D81E048C46 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:22:55Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:23:24 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 7E9DB922A81E4CCDA99F9FF936F82619 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:23:25Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:23:54 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: D685A3775234439E8E7B256D8600D77B Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:23:55Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:24:25 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: DF8E39FE19014E6AB3E27F120FB094A5 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:24:25Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2025-04-21T20:22:24.6632179Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:24:55 GMT
      etag:
      - '"2d008822-0000-0600-0000-6806a9000000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 8BC3C2DC3FCE43B893C07F8ADB74B597 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:24:55Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808637448413239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BsOCHwhdHbYZV0_RmFHN4d9whN2oRT5t-OiJGwV_Qvpmt85mElUZ8gblKPAyo3gcfQ9mZmPvqAR3gBHEhgjZvM2n6RkHF3Zz91uKz8aw2iFqMdll3TbLhrsyg2yey2bO4cMklg3387sz5085405uRlF8Idgleg43KeZaTN7cZdJjr6E4Y4qcg_N4mLkUFJifqI1TpCLvdokEJe7Tir4FsZ41TFd615Zi2hvuMNghgx9UcC_-oFoW57LynoBRbvQiqDp0dnnGVz4NF8jS6lyorO1VVKDCzrf7liQGOvjkv1Adl9JyMrboi6g0ctlCIqZnIF48XfUSb5GBbclawv8P9g&h=RpxbwEhDy-VuTR8Cr_c4C1xJfo2kIPbqwpjskDKFF28
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"1f4400f9-687b-444e-bfcd-262276a2b251*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Succeeded","startTime":"2025-04-21T20:22:24.6632179Z","endTime":"2025-04-21T20:25:12.1996603Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '591'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:25 GMT
      etag:
      - '"2d00e523-0000-0600-0000-6806a9a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 3347C5336EFA4E07891F7301C8279EBF Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:25:25Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:22:23.8725991Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:22:23.8725991Z"},"identity":{"principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:26 GMT
      etag:
      - '"ce0204e5-0000-0800-0000-6806a9a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 28D051C625E94B788407CDA059650F56 Ref B: CO6AA3150217051 Ref C: 2025-04-21T20:25:25Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.9.13 (Windows-10-10.0.22621-SP0) AZURECLI/2.71.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:25 GMT
      odata-version:
      - '4.0'
      request-id:
      - 39a06958-eefa-4c06-813d-c619648a8b7a
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"004","RoleInstance":"MW2PEPF0000E057"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:26 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/35efbe8e-596f-42e5-bc4e-d5ccf095d750
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 0E80E78FF62B4C64B7916DF5CD11253C Ref B: MWH011020806023 Ref C: 2025-04-21T20:25:26Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:25:27.3090973Z","updatedOn":"2025-04-21T20:25:27.5131019Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000003"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1003'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:29 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/28dcada2-b782-42dd-98b4-3f8dda97a48d
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 7C575692F5354030AD3877AA0338A5D5 Ref B: MWH011020806054 Ref C: 2025-04-21T20:25:26Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:29 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/764b09f2-05fc-4ae0-bb63-a1ceb1c724e3
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 33918762FCC64C70AEA372A580421C16 Ref B: CO6AA3150219011 Ref C: 2025-04-21T20:25:29Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "227f3270-65b9-4121-90b0-6a60f34f8e8a", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"error":{"code":"UnmatchedPrincipalType","message":"The PrincipalId
        ''227f327065b9412190b06a60f34f8e8a'' has type ''ServicePrincipal'' , which
        is different from specified PrinciaplType ''User''."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '192'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:29 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/0b91c8ea-2a35-4a00-8bb7-c537da563623
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 287BA366AD194B95BF66B727E2943C57 Ref B: CO6AA3150219029 Ref C: 2025-04-21T20:25:29Z'
    status:
      code: 400
      message: Bad Request
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "227f3270-65b9-4121-90b0-6a60f34f8e8a", "principalType": "Group"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '259'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"error":{"code":"UnmatchedPrincipalType","message":"The PrincipalId
        ''227f327065b9412190b06a60f34f8e8a'' has type ''ServicePrincipal'' , which
        is different from specified PrinciaplType ''Group''."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '193'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:30 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/0abadb91-ec27-4a0a-a165-8ed3487dff8b
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11998'
      x-ms-ratelimit-remaining-subscription-writes:
      - '798'
      x-msedge-ref:
      - 'Ref A: F1F4CE5014F64458909A57592C4E957E Ref B: CO6AA3150219029 Ref C: 2025-04-21T20:25:30Z'
    status:
      code: 400
      message: Bad Request
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "227f3270-65b9-4121-90b0-6a60f34f8e8a", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:25:30.8061308Z","updatedOn":"2025-04-21T20:25:30.9691352Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:25:32 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/7db7f4be-33fb-427f-a902-252f3b961536
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: A7A5209F2D6941559423197D353BA236 Ref B: CO6AA3150219029 Ref C: 2025-04-21T20:25:30Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"properties": {"apiKey": "Enabled"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana update
      Connection:
      - keep-alive
      Content-Length:
      - '37'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n --service-account
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: PATCH
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:19:43.7737738Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:27:33.9343626Z"},"identity":{"principalId":"ee751eb2-0014-4826-8764-6f71f575360f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"11"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview, 2024-10-01, 2024-11-01-preview, 2025-01-01-preview, 2025-02-01-preview
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:34 GMT
      etag:
      - '"4500c6ae-0000-0600-0000-6806aa360000"'
      expires:
      - '-1'
      mise-correlation-id:
      - 76e6e048-0f63-4700-b234-69fe250caaa7
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/6f19766b-7865-49ad-b46a-ffd71fe76edb
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '19998'
      x-msedge-ref:
      - 'Ref A: 485B8F0AF705454C9DED01D988950CB2 Ref B: MWH011020806060 Ref C: 2025-04-21T20:27:33Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana folder create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --title
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:19:43.7737738Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:27:33.9343626Z"},"identity":{"principalId":"ee751eb2-0014-4826-8764-6f71f575360f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:34 GMT
      etag:
      - '"4500c6ae-0000-0600-0000-6806aa360000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 91CF5CBBC0314BE495080A1FE06F76D1 Ref B: MWH011020806036 Ref C: 2025-04-21T20:27:34Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '24'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"fejm3qr4wsmbka","orgId":0,"title":"Test Folder","url":"/dashboards/f/fejm3qr4wsmbka/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2025-04-21T20:27:35.928974722Z","updatedBy":"example@example.com","updated":"2025-04-21T20:27:35.928974792Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-aKzRUwbUngxkSTxF4Fk77g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:35 GMT
      grafana-trace-id:
      - 35861a2866410594945a30aca69468bf
      mise-correlation-id:
      - 26c6e96f-6ed0-496b-898b-f24528506a08
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267255.551.32.487251|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"dejm381rbp8u8e","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"aejm37zm1ubr4d","title":"Azure Monitor"},{"id":14,"uid":"fejm380xkesjka","title":"Geneva"},{"id":12,"uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"fejm3qr4wsmbka","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AE5aGv6pqGvEH+jSN6tBrw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:36 GMT
      grafana-trace-id:
      - 21818eace32eaed369159418c1cf7048
      mise-correlation-id:
      - 00c9dc4f-c5da-4392-bbde-db5d569e346e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267257.181.28.15142|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"access": "proxy", "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "jsonData":
      {"azureAuthType": "msi", "subscriptionId": ""}, "name": "Test Azure Monitor
      Data Source", "type": "grafana-azure-monitor-datasource"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '212'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false,"apiVersion":""},"id":5,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '559'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7nuif2fJ3uEHVsoWRBYX+Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:36 GMT
      grafana-trace-id:
      - 605fc3826b15bec0a6a2e53b945702c6
      mise-correlation-id:
      - f0b73b5f-71b0-421d-9564-53401c32bb6f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267257.552.28.989449|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jfUKwcuJt6+KCUqYFt+kmQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:36 GMT
      grafana-trace-id:
      - af4df891032c5516e1fbf8d5596cbfb0
      mise-correlation-id:
      - a05744fa-d67d-4625-a975-73bbfc97b7ad
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267257.951.28.192712|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"dejm381rbp8u8e","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"aejm37zm1ubr4d","title":"Azure Monitor"},{"id":14,"uid":"fejm380xkesjka","title":"Geneva"},{"id":12,"uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"fejm3qr4wsmbka","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Hp+Of3goyAM0Nk7Wfx4jNw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:37 GMT
      grafana-trace-id:
      - 91a78ff3453ac6d38c93bed3bc7a4d1d
      mise-correlation-id:
      - f30a69ab-0b0c-4112-98ad-c754976d44e6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.069.30.519011|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVa"},
      "folderUid": "fejm3qr4wsmbka", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '127'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"fejm3qr4wsmbka","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VeBmPX+HxXH5LvNcyYALSQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:37 GMT
      grafana-trace-id:
      - 8bd11e1eda2ed8b600c42f5137621695
      mise-correlation-id:
      - 40a9ad44-a6fb-48ab-aec8-86426ecbfc19
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.216.29.285229|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard2", "panels": [], "uid": "mg2OAlTVb"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '97'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '135'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3hI3EiFYdILtoemtrUt+DQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:37 GMT
      grafana-trace-id:
      - 67cb46aab21f24137e9abc098423ecf1
      mise-correlation-id:
      - 6d4b857d-f1ad-4f90-ae96-276f0ddb4a3f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.448.30.711167|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HKdnkWfOllYCBMDuC+R3lw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:37 GMT
      grafana-trace-id:
      - 5892f8d6cda0bbfd30550abbeb53984e
      mise-correlation-id:
      - 28bf8584-7500-4176-a24a-88a3c35a40d7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.724.28.517304|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"dejm381rbp8u8e","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"aejm37zm1ubr4d","title":"Azure Monitor"},{"id":14,"uid":"fejm380xkesjka","title":"Geneva"},{"id":12,"uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"fejm3qr4wsmbka","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FU3EAIC+uL8fPRWUSxFaHQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:37 GMT
      grafana-trace-id:
      - 57bf8bf4486f8e7cef033a030607e114
      mise-correlation-id:
      - e0aeb661-2002-4814-a431-ddcc9869716a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.85.31.876466|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard3", "panels": [], "uid": "mg2OAlTVc"},
      "folderUid": "fejm3qr4wsmbka", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '128'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"fejm3qr4wsmbka","id":35,"slug":"test-dashboard3","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard3","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-d3JGX/vc8bEOz37CZb102Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:38 GMT
      grafana-trace-id:
      - 48ea22ab26f019ad2a67cde230b0aece
      mise-correlation-id:
      - 58f3003c-e848-421e-9a78-a1eb01255143
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267258.972.28.593564|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"name": "clitestamgmigrate000004", "role": "Admin"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '52'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/serviceaccounts
  response:
    body:
      string: '{"id":3,"name":"clitestamgmigrate000004","login":"sa-1-clitestamgmigrate000004","orgId":1,"isDisabled":false,"role":"Admin","tokens":0,"avatarUrl":""}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '150'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rgQPfTCwdPfTPSxgqhpM2Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:38 GMT
      grafana-trace-id:
      - 84b6bab0baaa4dac1abdf600302c0673
      mise-correlation-id:
      - d532797f-520c-49d1-9fee-348e480e144e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267259.244.31.665742|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/serviceaccounts/search
  response:
    body:
      string: '{"totalCount":1,"serviceAccounts":[{"id":3,"name":"clitestamgmigrate000004","login":"sa-1-clitestamgmigrate000004","orgId":1,"isDisabled":false,"role":"Admin","tokens":0,"avatarUrl":"/avatar/7f0b52335021fe6a217e657dc1400e15"}],"page":1,"perPage":1000}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '251'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MnEMkRLv7BpxWorCJCpGCw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:38 GMT
      grafana-trace-id:
      - 76e67accaef4e0368b243e6b012fab84
      mise-correlation-id:
      - 483bdba4-b2bc-4a04-81a3-6a8dddc2fd49
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267259.493.30.559035|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"name": "clitestamgmigrate000004_token", "secondsToLive": 86400}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '65'
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/serviceaccounts/3/tokens
  response:
    body:
      string: '{"id":1,"name":"clitestamgmigrate000004_token","key":"fakeApiKeyOrServiceAccountToken"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '87'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6hlVBla8ZlPR0xI8G+ZOQw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:38 GMT
      grafana-trace-id:
      - 55f9c223957bbb904294854a879efde3
      mise-correlation-id:
      - f4736491-b778-4f87-a504-84baf4516486
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267259.648.30.574689|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana data-source list
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:22:23.8725991Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:22:23.8725991Z"},"identity":{"principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:38 GMT
      etag:
      - '"ce0204e5-0000-0800-0000-6806a9a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 1B4592FD7D0746FEA5F7948070087D48 Ref B: CO6AA3150220011 Ref C: 2025-04-21T20:27:38Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wyCJ1Yb/xQ2sMx2lMNrMOA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:40 GMT
      grafana-trace-id:
      - 2e7f10779a40c1db5cee3ce05b562046
      mise-correlation-id:
      - 7f782cc7-5e1d-4599-86c5-c6b85e236901
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267260.156.30.641509|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":31,"uid":"bejm3irje8glcc","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"aejm3ionrwvswf","title":"Azure Monitor"},{"id":14,"uid":"dejm3iqnmiy9sd","title":"Geneva"},{"id":12,"uid":"aejm3iqi5pqm8a","title":"Microsoft
        Defender for Cloud"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '258'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-c/h+uwW5qQtXVxcNZekZxQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:40 GMT
      grafana-trace-id:
      - dabf511a8f8590abd305eff50e2e21d2
      mise-correlation-id:
      - b4c218be-e73f-4581-ba2c-77c0f1e88473
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267261.447.29.500590|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":29,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":8,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":11,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":9,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":5,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":3,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":7,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":4,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":10,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":6,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"aejm3iqi5pqm8a","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/aejm3iqi5pqm8a/Microsoft Defender
        for Cloud","sortMeta":0,"isDeleted":false},{"id":32,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":15,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":30,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":28,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":34,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":36,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":17,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":21,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":20,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":23,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10202'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-bk7+EwiKhPEhmqmu33zmAA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:40 GMT
      grafana-trace-id:
      - aaa7a04a192c679dcf17065eb597c2d4
      mise-correlation-id:
      - 7a2914d9-9525-4eb4-b5b2-cb5d8e14a44b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267261.801.32.351811|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-YIKNH3KSVfbNdZXCZgwvyw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:40 GMT
      grafana-trace-id:
      - ea4a2feea2c49706e1dc426b7915ea87
      mise-correlation-id:
      - 2e7495f4-18c9-4704-a7fd-c0607aea78ca
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267261.947.29.632944|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"database\": \"ok\",\n  \"version\": \"11.2.2\",\n  \"commit\":
        \"unknown-dev\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '72'
      content-type:
      - application/json; charset=UTF-8
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - 4693c54a7a5ed8e8c360269b532d2fe0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.154.30.343541|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"database\": \"ok\",\n  \"version\": \"11.2.2\",\n  \"commit\":
        \"unknown-dev\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '72'
      content-type:
      - application/json; charset=UTF-8
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - 343da609a73e5853ea3472378de55df9
      mise-correlation-id:
      - 17bc1d7a-fac0-44b1-8158-1c8059ae61b4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.26.31.215413|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZO94onL7Isj7XvzaMgSuSw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - e97f8cf5216a425fc3e161f23a49df13
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.372.30.489445|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vhyqU35dDK7Y7ppFp9cWcA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - 69dedf2ca86e97190496f90fb38a125a
      mise-correlation-id:
      - 860eec61-7fd3-446f-9ba8-c80f2f2b1a7d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.496.30.690437|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"dejm381rbp8u8e","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":1,"uid":"aejm37zm1ubr4d","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":14,"uid":"fejm380xkesjka","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/fejm380xkesjka/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":12,"uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/bejm380sd4em8c/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":32,"uid":"fejm3qr4wsmbka","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/fejm3qr4wsmbka/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1199'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pCLXKjEMRuEqy1ryUfLokg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - 254e49bcd48b560cf89be81c89d9a838
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.779.30.718573|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/dejm381rbp8u8e
  response:
    body:
      string: '{"id":28,"uid":"dejm381rbp8u8e","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:21:46.459823Z","updatedBy":"Anonymous","updated":"2025-04-21T20:21:46Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '372'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Ft1m0Gkggrs273Qz4tIDiQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:41 GMT
      grafana-trace-id:
      - a7bc5037a7681933499b7e2d46cef360
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267262.919.30.305203|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/dejm381rbp8u8e/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"dejm381rbp8u8e","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"dejm381rbp8u8e","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MwMiGYOLFz1RU3mIQRPoIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - 5b53f6751d2c268039be79b324ab4125
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.057.31.857604|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/aejm37zm1ubr4d
  response:
    body:
      string: '{"id":1,"uid":"aejm37zm1ubr4d","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:21:45.347723Z","updatedBy":"Anonymous","updated":"2025-04-21T20:21:45Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '327'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-N3DnyOs/84fd0LBzwo5UPg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - f6d7f95599f41fb4a009240aea9f8c04
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.192.32.725518|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/aejm37zm1ubr4d/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"aejm37zm1ubr4d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","inherited":false},{"folderId":1,"created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"aejm37zm1ubr4d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ovDxfxajpz76xRHhxnlYiQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - dc08fa751666e2b2873af09f21adf533
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.311.30.170845|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/fejm380xkesjka
  response:
    body:
      string: '{"id":14,"uid":"fejm380xkesjka","orgId":0,"title":"Geneva","url":"/dashboards/f/fejm380xkesjka/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:21:46.030357Z","updatedBy":"Anonymous","updated":"2025-04-21T20:21:46Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '314'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WKhzXFhsO+DayKD5uhraog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - 3807272acb9e5c462c68920a9bb6d3da
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.439.31.9023|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/fejm380xkesjka/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fejm380xkesjka","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fejm380xkesjka/geneva","inherited":false},{"folderId":14,"created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fejm380xkesjka","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fejm380xkesjka/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-KEC5+F8xG+j/zUtw6aA/rQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - 593dc7ece2905da1422909cfbcf91af9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.573.29.15332|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/bejm380sd4em8c
  response:
    body:
      string: '{"id":12,"uid":"bejm380sd4em8c","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/bejm380sd4em8c/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:21:45.954649Z","updatedBy":"Anonymous","updated":"2025-04-21T20:21:45Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '358'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-s/+jK49aoBDfbUP3WNv+6A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - 6a8c9129b8877367411df7ad67ae856f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.7.28.562188|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/bejm380sd4em8c/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/bejm380sd4em8c/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"bejm380sd4em8c","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/bejm380sd4em8c/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-18hbS2bI/RkHEFL7XZTgeQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - f1960b80da4a7094e743303f34fb277d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.827.29.62038|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/fejm3qr4wsmbka
  response:
    body:
      string: '{"id":32,"uid":"fejm3qr4wsmbka","orgId":0,"title":"Test Folder","url":"/dashboards/f/fejm3qr4wsmbka/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:27:35.933395Z","updatedBy":"Anonymous","updated":"2025-04-21T20:27:35.933395Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nRbgv/dIaJV1BgOLRrfK4Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:42 GMT
      grafana-trace-id:
      - 8f96177159b679d15435ac37a9d60847
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267263.961.29.304542|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/folders/fejm3qr4wsmbka/permissions
  response:
    body:
      string: '[{"folderId":32,"created":"2025-04-21T20:27:35Z","updated":"2025-04-21T20:27:35Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"fejm3qr4wsmbka","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/fejm3qr4wsmbka/test-folder","inherited":false},{"folderId":32,"created":"2025-04-21T20:27:35Z","updated":"2025-04-21T20:27:35Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fejm3qr4wsmbka","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/fejm3qr4wsmbka/test-folder","inherited":false},{"folderId":32,"created":"2025-04-21T20:27:35Z","updated":"2025-04-21T20:27:35Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fejm3qr4wsmbka","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/fejm3qr4wsmbka/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-l545rOCiKgl5MzO+2hnBgQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - 4c640e38be3a445b37a57f0304fea741
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.082.31.514610|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":31,"uid":"bejm3irje8glcc","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/bejm3irje8glcc/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":1,"uid":"aejm3ionrwvswf","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/aejm3ionrwvswf/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":14,"uid":"dejm3iqnmiy9sd","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/dejm3iqnmiy9sd/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":12,"uid":"aejm3iqi5pqm8a","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/aejm3iqi5pqm8a/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '982'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VqSiw23fbDBNN5nOZxZLYw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - be3cfb96b0c4762fb98cd0010c521c04
      mise-correlation-id:
      - 0c57c3fa-f058-443e-ac21-9f61b514643a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.215.29.515350|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/bejm3irje8glcc
  response:
    body:
      string: '{"id":31,"uid":"bejm3irje8glcc","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/bejm3irje8glcc/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:25:06.673221Z","updatedBy":"Anonymous","updated":"2025-04-21T20:25:06.673222Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '379'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PTP6QZ8ptpdF0Vt5i/k8Xg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - d82c194108119089a2190b8350987354
      mise-correlation-id:
      - aa64f7e0-2d64-46dd-9e7f-73fe7cafeef2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.334.32.430292|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/bejm3irje8glcc/permissions
  response:
    body:
      string: '[{"folderId":31,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"bejm3irje8glcc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/bejm3irje8glcc/azure-kubernetes-service-monitoring","inherited":false},{"folderId":31,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"bejm3irje8glcc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/bejm3irje8glcc/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-XvYAcyK8FJoMgyPKs/tW3Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - 79417914ade7ed149603a59c88e695c7
      mise-correlation-id:
      - ba70f740-379e-43b0-a92d-5df21b116040
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.454.29.769127|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/aejm3ionrwvswf
  response:
    body:
      string: '{"id":1,"uid":"aejm3ionrwvswf","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/aejm3ionrwvswf/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:25:05.183131Z","updatedBy":"Anonymous","updated":"2025-04-21T20:25:05.183131Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '334'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tI+AcbbSTCyaIN9sBZ+IXw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - 866d71e9fd4c72e10691a2bc3e42c492
      mise-correlation-id:
      - 948920cd-3216-4279-95b8-7a687d0c82bf
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.584.28.33405|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/aejm3ionrwvswf/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2025-04-21T20:25:05Z","updated":"2025-04-21T20:25:05Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"aejm3ionrwvswf","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/aejm3ionrwvswf/azure-monitor","inherited":false},{"folderId":1,"created":"2025-04-21T20:25:05Z","updated":"2025-04-21T20:25:05Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"aejm3ionrwvswf","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/aejm3ionrwvswf/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-UyiJQfTkuIBzpICsq/FIyA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - 00d8ed7b07fe9c8d09b24f34edc8451a
      mise-correlation-id:
      - 23372999-599b-473b-99ed-b5f1d54985a0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.703.31.457774|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/dejm3iqnmiy9sd
  response:
    body:
      string: '{"id":14,"uid":"dejm3iqnmiy9sd","orgId":0,"title":"Geneva","url":"/dashboards/f/dejm3iqnmiy9sd/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:25:06.215546Z","updatedBy":"Anonymous","updated":"2025-04-21T20:25:06.215546Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '321'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-i7S2i9Gdn2s7iut5LzQnAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:43 GMT
      grafana-trace-id:
      - f815d60039b3db2fe114150288c1adc4
      mise-correlation-id:
      - 30170447-4fa9-4854-a59b-33e702e206a7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.844.29.441823|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/dejm3iqnmiy9sd/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"dejm3iqnmiy9sd","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/dejm3iqnmiy9sd/geneva","inherited":false},{"folderId":14,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"dejm3iqnmiy9sd","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/dejm3iqnmiy9sd/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-UKr1v53C76S48yR5E3Bwaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - 193bcb2eae43403fa8070dacf1f45b7c
      mise-correlation-id:
      - d1ebf13b-bfb2-477f-8228-40e1674a1b86
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267264.976.31.765713|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/aejm3iqi5pqm8a
  response:
    body:
      string: '{"id":12,"uid":"aejm3iqi5pqm8a","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/aejm3iqi5pqm8a/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2025-04-21T20:25:06.139021Z","updatedBy":"Anonymous","updated":"2025-04-21T20:25:06.139021Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Z2lgzoTBWquou7PX6V0oVg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - 5f037904d9ad705e08c66b24f26ec1db
      mise-correlation-id:
      - 5097262f-9779-4fc2-ba36-ea5fa494df9f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.113.29.756551|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/aejm3iqi5pqm8a/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"aejm3iqi5pqm8a","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/aejm3iqi5pqm8a/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2025-04-21T20:25:06Z","updated":"2025-04-21T20:25:06Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"aejm3iqi5pqm8a","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/aejm3iqi5pqm8a/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hFxoHfcNa1o+m9N86GlQIg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - 484194bdff04ecd4113ac45c93b1518f
      mise-correlation-id:
      - f3633c7f-b592-48fe-8706-d5a02849c547
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.231.29.590893|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/dejm381rbp8u8e
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nnZOwKmTJHk0zhwC+9YUQw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - 47ebfe0cfcca37c91a8483063a3f27cc
      mise-correlation-id:
      - 71422d2c-0d99-4697-90c1-ac869e1b6633
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.357.28.520057|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/aejm37zm1ubr4d
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IPyhMJS9PpmvBlJbIF1/aQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - a93413d0f1bb8c5cfc211c19853bb87f
      mise-correlation-id:
      - b0396697-be39-4637-baa2-f9a247da646e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.487.30.158976|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/fejm380xkesjka
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MygQWRYGk8ykxMLRlpp8nQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - 0a88ff531e0a78089091232925d9d318
      mise-correlation-id:
      - 3a073cca-4b52-415f-a356-6a5a014a55cc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.619.29.340116|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/bejm380sd4em8c
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HYLMNgnwGqQWr49aqFegng';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - c242a38720d5659679f6eb1f3abc89ce
      mise-correlation-id:
      - 368a437b-1e36-44f7-bcc5-4c2f8b50e6f2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.734.32.716442|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders/fejm3qr4wsmbka
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/VtXq1Fc5DQLgXHva96YBg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:44 GMT
      grafana-trace-id:
      - f65b98c5f5b5b54c1c38dd777aac333f
      mise-correlation-id:
      - 04269cac-2e8c-4c00-9010-b514dcc009cb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.854.31.748396|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":24,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":19,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":26,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":8,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":5,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":9,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":6,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":11,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":7,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":2,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":4,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":10,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":27,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"bejm380sd4em8c","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/bejm380sd4em8c/Microsoft Defender
        for Cloud","sortMeta":0,"isDeleted":false},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"dejm381rbp8u8e","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/dejm381rbp8u8e/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":21,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":25,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":22,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"dejm381rbp8u8e","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/dejm381rbp8u8e/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"dejm381rbp8u8e","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/dejm381rbp8u8e/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":20,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":15,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":17,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":16,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false},{"id":33,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"fejm3qr4wsmbka","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/fejm3qr4wsmbka/Test Folder","sortMeta":0,"isDeleted":false},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0,"isDeleted":false},{"id":35,"uid":"mg2OAlTVc","title":"Test
        Dashboard3","uri":"db/test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"fejm3qr4wsmbka","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/fejm3qr4wsmbka/Test Folder","sortMeta":0,"isDeleted":false},{"id":18,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/Geneva","sortMeta":0,"isDeleted":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11063'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-sPR9e9wU9c8MG2siwCqY9g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - cb173bdcd0884dcebd5a2b04a9dffda4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267265.99.31.621480|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:46Z\",\"updated\":\"2025-04-21T20:21:46Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fejm380xkesjka\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fejm380xkesjka/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":24,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-i8XGgyN0AHyuTzcxW7hZPw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - e82e62a48fded1085e315fcab21b23f3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.108.30.544049|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":19,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mvWYhABkdLheZFrr1zd8Bg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - 9f1661374a0e433daa585e25fdcf5ec7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.236.32.714252|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":26,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WMBc5OFZgWuVmQiCN9yPOQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - 651597ffd7e23f5ba28f54722ba834a8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.376.30.671308|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":8,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18653'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Q5rAfOccW67KydVyiBrNaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - 601d6052ca686d0d5186fa610e0dfaa7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.51.30.252463|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-A5Q3y95aztDTwDfBQbOOvA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - d7cdb3dc20e76139136901afda1bda12
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.637.31.214550|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":9,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-81sGaenltqdQEPqLA1dJsg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - 9476a2d631806038e25f914a78487011
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.766.29.451839|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":6,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tETw/CoI5TtVZtxDLW2+7Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:45 GMT
      grafana-trace-id:
      - f83195f6d3742fa7ac3ba1bead1c61d6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267266.906.28.941043|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"10.4.7"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"The dashboard provides
        insights of Azure Data Explorer Cluster Resource overview, key mettrics, usage,
        tables, cache and ingestion.","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":11,"links":[],"panels":[{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Overview","type":"row"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Keep Alive (Avg)","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":4,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"CPU (Avg)","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":8,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Utilization
        (Avg)  ","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":12,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Latency (Avg)  ","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":16,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Cache Utilization (Avg)","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":4,"x":20,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Succeeded Ingestions
        (#)","type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"description":"The
        aggregated usage in the cluster, out of the total used CPU and memory. To
        see more details, go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resources":["$ws"],"resultFormat":"time_series"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top resource consumers","type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":3,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":2,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resources":["$ws"],"resultFormat":"time_series"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Unique user count","type":"timeseries"},{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Key
        Metrics","type":"row"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":16},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Keep Alive","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":16},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"CPU","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":16},"id":22,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Cache Utilization","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":16},"id":23,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Instance Count","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":26},"id":24,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Concurrent Queries","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"ms"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":26},"id":25,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Query Duration","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"ms"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":26},"id":26,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Throttled Commands","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":26},"id":27,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Throttled Queries","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":36},"id":28,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Utilization","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":36},"id":29,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Latency","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":36},"id":30,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Result","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":36},"id":31,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Ingestion Volume","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":46},"id":32,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Streaming Ingest Data
        Rate","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"ms"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":46},"id":33,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Streaming Ingest Duration","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"ms"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":46},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Streaming Ingest Request
        Rate","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":46},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Streaming Ingest Result","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":56},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Events Processed","type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":56},"id":37,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Discovery Latency","type":"timeseries"},{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Usage","type":"row"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top resource consumers
        (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top principals
        and applications by command and query count","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top applications
        by command and query count","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top principals
        by command and query count","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Queries and top
        commands by command type","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Changes in query
        count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Failed queries","transparent":true,"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":0,"y":79},"id":47,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Command + query
        count by principal","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":8,"y":79},"id":48,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total memory by
        principal","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":16,"y":79},"id":49,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total CPU by principal","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":0,"y":89},"id":51,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Command + query
        count by application","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":8,"y":89},"id":52,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total memory by
        application","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":16,"y":89},"id":50,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total CPU by application","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":0,"y":99},"id":53,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Queries + command
        count by type","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":8,"y":99},"id":54,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total memory by
        type","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":8,"x":16,"y":99},"id":55,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total CPU by type","transparent":true,"type":"timeseries"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Command + query
        count by workload group","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total memory by
        workload group","transparent":true,"type":"table"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Total CPU by workload
        group","transparent":true,"type":"table"},{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Tables","type":"row"},{"datasource":{"uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"  Table details","transparent":true,"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":117},"id":62,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top tables by
        row count","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":117},"id":63,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top tables by
        hot cache size","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":127},"id":64,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top tables by
        extent count","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":127},"id":65,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resources":["$ws"],"resultFormat":"time_series"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Top tables by
        extent size","transparent":true,"type":"timeseries"},{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Cache","type":"row"},{"datasource":{"uid":"$ds"},"description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Table usage details","transparent":true,"type":"table"},{"collapsed":false,"datasource":{"uid":"$ds"},"gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"targets":[{"datasource":{"uid":"$ds"},"refId":"A"}],"title":"Ingestion","type":"row"},{"datasource":{"uid":"$ds"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"filterable":false,"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"title":"Succeeded ingestions
        by table","transparent":true,"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":8,"x":8,"y":143},"id":74,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[{"dimension":"ComponentType","filters":["StorageEngine"],"operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Stage latency (accumulative
        latency)","transparent":true,"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"$ds"},"description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":8,"x":16,"y":143},"id":75,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.7","targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"dashboardTime":false,"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilters":[{"dimension":"ComponentType","filters":["StorageEngine"],"operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resources":[{"resourceGroup":"$rg","resourceName":"$resource"}],"timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"datasource":{"uid":"$ds"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"title":"Data Processed Successfuly","transparent":true,"type":"timeseries"}],"refresh":false,"schemaVersion":39,"tags":[],"templating":{"list":[{"current":{"selected":true,"text":"Azure
        Monitor","value":"azure-monitor-oob"},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"$ds"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"subscriptions()"},"queryType":"Azure
        Subscriptions","refId":"A"},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false},{"current":{},"datasource":{"uid":"$ds"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Azure
        Resource Groups","refId":"A","subscription":"$sub"},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false},{"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"uid":"$ds"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricNamespace":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"namespace":"$ns","queryType":"Azure
        Resource Names","refId":"A","resourceGroup":"$rg","subscription":"$sub"},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false},{"current":{},"datasource":{"uid":"$ds"},"definition":"","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"WorkspacesQuery","rawQuery":"workspaces()","subscription":"4DC2CD39-7A89-43D8-BEBE-8BB501359891"},"queryType":"Azure
        Workspaces","refId":"A","subscription":"$sub"},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"timepicker":{},"timezone":"","title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '170440'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rnUKk//IqD12CTIDzh2y4w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - d5bc361cf26f712c21d8fa71a643879a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.037.31.761939|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:45Z\",\"updated\":\"2025-04-21T20:21:45Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"aejm37zm1ubr4d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/aejm37zm1ubr4d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.4.7\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":7,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":{\"uid\":\"${ds}\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"${ds}\"},\"refId\":\"A\"}],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"id\":11,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Transactions
        Over Time\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"ms\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"id\":13,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Overall
        Latency\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"id\":15,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Availability\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"id\":17,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Request
        Types over Time\",\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"${ds}\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"${ds}\"},\"refId\":\"A\"}],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"id\":2,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filters\":[\"2xx\"],\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Successes
        (2xx)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"id\":7,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filters\":[\"4xx\"],\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Failures
        (4xx)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"id\":6,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filters\":[\"429\"],\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Throttling
        (429)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"id\":4,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filters\":[\"401\"],\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filters\":[\"403\"],\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"${ds}\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"${ds}\"},\"refId\":\"A\"}],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":4,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"points\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":6,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":8,\"x\":4,\"y\":26},\"id\":35,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resources\":[\"$ws\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Success
        Operations Counts\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":4,\"x\":12,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"points\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":6,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":8,\"x\":16,\"y\":26},\"id\":36,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resources\":[\"$ws\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"All
        Operations Counts\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":39,\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor\",\"value\":\"azure-monitor-oob\"},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"grafanaTemplateVariableFn\":{\"kind\":\"SubscriptionsQuery\",\"rawQuery\":\"subscriptions()\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"grafanaTemplateVariableFn\":{\"kind\":\"ResourceGroupsQuery\",\"rawQuery\":\"ResourceGroups($sub)\",\"subscription\":\"$sub\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Microsoft.KeyVault/vaults\",\"value\":\"Microsoft.KeyVault/vaults\"},\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"options\":[{\"selected\":false,\"text\":\"Microsoft.KeyVault/vaults\",\"value\":\"Microsoft.KeyVault/vaults\"}],\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"grafanaTemplateVariableFn\":{\"kind\":\"ResourceNamesQuery\",\"metricNamespace\":\"$ns\",\"rawQuery\":\"ResourceNames($sub,
        $rg, $ns)\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"grafanaTemplateVariableFn\":{\"kind\":\"WorkspacesQuery\",\"rawQuery\":\"Workspaces($sub)\",\"subscription\":\"$sub\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '40387'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mX87HIsH4uPFZ07xqTNV+w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - cf3cd7969d8faa811b0875d39fb64c4f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.194.31.833939|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:45Z\",\"updated\":\"2025-04-21T20:21:45Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"aejm37zm1ubr4d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/aejm37zm1ubr4d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.4.7\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":2,\"links\":[],\"panels\":[{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":0},\"id\":7,\"options\":{\"minVizHeight\":75,\"minVizWidth\":75,\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"sizing\":\"auto\",\"text\":{}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":0},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value_and_name\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":0},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value_and_name\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":0},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value_and_name\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":0},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value_and_name\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":0},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"value_and_name\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":4},\"id\":2,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"title\":\"Transactions
        by storage type\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":4},\"id\":14,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Transactions
        by API Name\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":13},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"title\":\"Capacity
        by storage type\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":13},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"title\":\"Availability
        by storage type\",\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"$ds\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":22},\"id\":52,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"$ds\"},\"refId\":\"A\"}],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":23},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":23},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":29},\"id\":20,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":false},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":29},\"id\":22,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":false},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":37},\"id\":24,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":false},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":37},\"id\":26,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":false},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"$ds\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":45},\"id\":50,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"$ds\"},\"refId\":\"A\"}],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":46},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":46},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"gradient\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"gradient\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":52},\"id\":32,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"$ds\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":63},\"id\":48,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"$ds\"},\"refId\":\"A\"}],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$ds\"},\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":64},\"id\":34,\"options\":{\"minVizHeight\":75,\"minVizWidth\":75,\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"sizing\":\"auto\",\"text\":{}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"type\":\"gauge\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"filterable\":false,\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"gradient\",\"type\":\"color-background\"}},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":72},\"id\":36,\"maxDataPoints\":1,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":false},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":72},\"id\":38,\"options\":{\"legend\":{\"calcs\":[\"sum\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"title\":\"Availability
        Trend\",\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":{\"uid\":\"$ds\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":80},\"id\":46,\"panels\":[],\"targets\":[{\"datasource\":{\"uid\":\"$ds\"},\"refId\":\"A\"}],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":81},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"text\":{},\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"decbytes\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":89},\"id\":42,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"none\"}},\"pluginVersion\":\"10.4.7\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"dashboardTime\":false,\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resources\":[{\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\"}],\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"Storage
        capacity\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$ds\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":89},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"datasource\":{\"uid\":\"$ds\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":39,\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor\",\"value\":\"azure-monitor-oob\"},\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"uid\":\"$ds\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"grafanaTemplateVariableFn\":{\"kind\":\"SubscriptionsQuery\",\"rawQuery\":\"subscriptions()\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"uid\":\"$ds\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"uid\":\"$ds\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '127569'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-y0IqMJX/esDqiZm5xQvBnA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - 8d030c4636e8b8a3937e2b952923945c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.346.31.19816|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":3,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-457L7IQuhkqg7eDNnvsxzg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - dd8a9b0dad554e4970c1fa86fbe1f6a2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.498.29.975552|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":4,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117797'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-95nFs1qqGzNZjNIDdKpk8A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - b3d7f276e09c73a501915311caf60420
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.639.31.633593|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:45Z","updated":"2025-04-21T20:21:45Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"aejm37zm1ubr4d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm37zm1ubr4d/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":10,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79656'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FAgaDE/4HPo2GCQ6FW/3DQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - f81c3fe4f9ea363162d225dd51dd97fe
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.814.32.945662|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":27,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WnmF9gvE/hYYFm6/2qJEaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:46 GMT
      grafana-trace-id:
      - 9eff5bce705f1b512d51550884e1d6f7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267267.959.29.582603|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:45Z\",\"updated\":\"2025-04-21T20:21:45Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"bejm380sd4em8c\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/bejm380sd4em8c/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-02o808nzgHYfqimYI9r2bQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - b15dd22ed1bb57560a5fbab0ab424197
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.083.32.860949|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:46Z\",\"updated\":\"2025-04-21T20:21:46Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"dejm381rbp8u8e\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.4.11\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"prometheus\",\"name\":\"Microsoft
        Prometheus (Preview)\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.4.11\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.4.11\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"showPercentChange\":false,\"textMode\":\"auto\",\"wideLayout\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"quota
        - requests\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"#F2495C\",\"mode\":\"fixed\"}},{\"id\":\"custom.fillOpacity\",\"value\":0},{\"id\":\"custom.lineWidth\",\"value\":2},{\"id\":\"custom.stacking\",\"value\":{\"group\":\"A\",\"mode\":\"none\"}},{\"id\":\"custom.lineStyle\",\"value\":{\"dash\":[10,10],\"fill\":\"dash\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"quota
        - limits\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"#FF9830\",\"mode\":\"fixed\"}},{\"id\":\"custom.fillOpacity\",\"value\":0},{\"id\":\"custom.lineWidth\",\"value\":2},{\"id\":\"custom.stacking\",\"value\":{\"group\":\"A\",\"mode\":\"none\"}},{\"id\":\"custom.lineStyle\",\"value\":{\"dash\":[10,10],\"fill\":\"dash\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"id\":5,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"title\":\"CPU Usage\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"bytes\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"quota
        - requests\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"#F2495C\",\"mode\":\"fixed\"}},{\"id\":\"custom.fillOpacity\",\"value\":0},{\"id\":\"custom.lineWidth\",\"value\":2},{\"id\":\"custom.stacking\",\"value\":{\"group\":\"A\",\"mode\":\"none\"}},{\"id\":\"custom.lineStyle\",\"value\":{\"dash\":[10,10],\"fill\":\"dash\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"quota
        - limits\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"#FF9830\",\"mode\":\"fixed\"}},{\"id\":\"custom.fillOpacity\",\"value\":0},{\"id\":\"custom.lineWidth\",\"value\":2},{\"id\":\"custom.stacking\",\"value\":{\"group\":\"A\",\"mode\":\"none\"}},{\"id\":\"custom.lineStyle\",\"value\":{\"dash\":[10,10],\"fill\":\"dash\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"id\":7,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"title\":\"Memory Usage (w/o cache)\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.4.11\",\"type\":\"text\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Current Receive
        Bandwidth\"},{\"id\":\"unit\",\"value\":\"Bps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Current Transmit
        Bandwidth\"},{\"id\":\"unit\",\"value\":\"Bps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Rate of Received
        Packets\"},{\"id\":\"unit\",\"value\":\"pps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Rate of Transmitted
        Packets\"},{\"id\":\"unit\",\"value\":\"pps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Rate of Received
        Packets Dropped\"},{\"id\":\"unit\",\"value\":\"pps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Rate of Transmitted
        Packets Dropped\"},{\"id\":\"unit\",\"value\":\"pps\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to pods\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\"}]},{\"id\":\"custom.align\"}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"title\":\"Current
        Network Usage\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}},{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Time\":true},\"includeByName\":{},\"indexByName\":{},\"renameByName\":{}}}],\"type\":\"table\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"Bps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Receive
        Bandwidth\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"Bps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Transmit
        Bandwidth\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"pps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Rate
        of Received Packets\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"pps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Rate
        of Transmitted Packets\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"pps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"id\":14,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Rate
        of Received Packets Dropped\",\"type\":\"timeseries\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":100,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":0,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"pps\"},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"id\":15,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"multi\",\"sort\":\"desc\"}},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"type\":\"timeseries\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisBorderShow\":false,\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"insertNulls\":false,\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.4.11\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":39,\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":true,\"text\":\"ch1-azuremonitorworkspace\",\"value\":\"aWUCCkX7z\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"error\":{},\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"error\":{},\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75338'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/xbuqH1EAvm0wDAO5yBZ6w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - 64c6377a4ad7e4ed0fc8ce26034c42c0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.218.28.839584|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":21,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QzBX2zqadWikf+SvaHzNog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - f82affe937270547f224eeadc5310f7d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.347.30.298929|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":25,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QG661m89N+4vvsoGfge1Sg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - c0dc137e681bad6e03ac62fe014ab942
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.47.31.877953|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":22,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PBsNWy4tkzD22eM5F5WZjQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - 6170521ae16e1842b78a6ff03c4d9c3e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.618.28.337692|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"dejm381rbp8u8e","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8LIA/DM+96d77adsjt0qmA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - 2ff5ecf5806ab6b59552535e39e162aa
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.748.31.941373|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"dejm381rbp8u8e","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/dejm381rbp8u8e/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"10.4.11"},{"id":"prometheus","name":"Microsoft
        Prometheus (Preview)","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"pluginVersion":"10.4.11","type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"textMode":"value_and_name","wideLayout":true},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showPercentChange":false,"textMode":"value_and_name","wideLayout":true},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showPercentChange":false,"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showPercentChange":false,"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showPercentChange":false,"textMode":"auto","wideLayout":true},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":11},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":false},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Percentage
        Utlilzation of ETCD database","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":9,"y":11},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"title":"Total  Client Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":7,"x":17,"y":11},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"pluginVersion":"10.4.11","targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"title":"ETCD Network GRPC bytes","type":"timeseries"}],"refresh":"","schemaVersion":39,"tags":["kubernetes-mixin"],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"2024-12-09T20:56:43.424Z","to":"2024-12-09T21:24:09.426Z"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11844'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-d28qEg4PXFxvvkhkXD40sQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:47 GMT
      grafana-trace-id:
      - 2dcbf063e06e2883e357a1545ebd194e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267268.885.30.964985|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":20,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-LEjZ091mtZ6tMWWBwn7DkA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - d2f6f6dac19faf1dcb105830ff39e978
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.014.31.116439|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":15,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HOlQqEJ1V29IEGEEuCy9iQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - 549545d724d051d2c0008d8615a7a7c0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.144.28.652413|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2025-04-21T20:21:46Z\",\"updated\":\"2025-04-21T20:21:46Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fejm380xkesjka\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fejm380xkesjka/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":17,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xAYpEB1gHCE1vcsKcyfWwA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - 37a6a3a04473583eab1bf405af79440e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.28.32.904482|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":23,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4WRiW995tXdnaAoqqHkrOA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - 4d4e6c23bd940b051911280c9f603c0d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.413.30.121911|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":16,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-JU1ElA83yxQpscxG4HBe7g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - eb7ae0d17b2ef6c17932bccc15b5b782
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.552.31.407|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:27:37Z","updated":"2025-04-21T20:27:37Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"fejm3qr4wsmbka","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/fejm3qr4wsmbka/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FsCrOFN+PeWSjK0Wd1ApTA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - 4c7c0077b8e7072063678cc9962feecc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.682.28.249420|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:27:37Z","updated":"2025-04-21T20:27:37Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '727'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-obHca7Q5q+93Rh7Pzx3O9w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - d7cf89c4c1513262bfc6d93e92478fb2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.805.30.648189|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:27:38Z","updated":"2025-04-21T20:27:38Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"fejm3qr4wsmbka","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/fejm3qr4wsmbka/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard3","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rafFwVZ3nJaGQiZJifzxIA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:48 GMT
      grafana-trace-id:
      - 9577302757681066d23f0df0f4b5191a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267269.933.29.579400|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2025-04-21T20:21:46Z","updated":"2025-04-21T20:21:46Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fejm380xkesjka","folderTitle":"Geneva","folderUrl":"/dashboards/f/fejm380xkesjka/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TAEEQXpfEvzeXKHuF2r3HQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - 06b904de70fd7c656e9c61211011760f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.06.31.107813|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jd2fTmyICMIIeD8R3FcUUA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - 5b348f13c902ce362bfede28dccaf89f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.183.29.139333|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-T2mtpY8X1E2QZEKC+zOakQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - 74eaf5dcd2ab2ee8ca053c72a4e757e5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.298.30.782332|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"34a1eca485d2ea06a814e7911f366a44"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OSgX07xLGPyMd5/8qK5vrA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - 34a1eca485d2ea06a814e7911f366a44
      mise-correlation-id:
      - b35f6d82-4146-4dc8-855e-130d8367f408
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.418.31.837384|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"b82844ebe4c60278b31f88c2ca9678b8"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HfVONq0o4bgEqLRHtO58iA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - b82844ebe4c60278b31f88c2ca9678b8
      mise-correlation-id:
      - f0a33740-0bf9-4b10-8cf2-edac764ced83
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.551.29.500593|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"bbe754f0669a9fb579c99b614dea0ff5"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ICB5GZ2LoOdb6ag0O1qoQg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - bbe754f0669a9fb579c99b614dea0ff5
      mise-correlation-id:
      - cb581219-a1a4-4aa9-9826-c883c9dc2df4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.669.29.184975|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com/api/dashboard/snapshots
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Var0dDV59LHC19r94bSQvw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:49 GMT
      grafana-trace-id:
      - f22c1182c36d6b15a9e292c033a51f8a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267270.785.28.227769|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BSUYUR1BvppW4jCUBWkduA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      grafana-trace-id:
      - c7605aefab1dec77f4201f24fbfb55c2
      mise-correlation-id:
      - 82a90a46-cecb-466e-993d-ecdcfb458c49
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267271.006.29.664576|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":31,"uid":"bejm3irje8glcc","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"aejm3ionrwvswf","title":"Azure Monitor"},{"id":14,"uid":"dejm3iqnmiy9sd","title":"Geneva"},{"id":12,"uid":"aejm3iqi5pqm8a","title":"Microsoft
        Defender for Cloud"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '258'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AssyPJAkN8bxSlPt1HXNbg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      grafana-trace-id:
      - be2f45105cb4cf65dfc6d5b0a96186e0
      mise-correlation-id:
      - 9a97429f-fb63-4fd1-820a-32643e9d880c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267271.201.29.337040|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":29,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":8,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":11,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":9,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":5,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":3,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":7,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":4,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":10,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":6,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"aejm3ionrwvswf","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/aejm3ionrwvswf/Azure Monitor","sortMeta":0,"isDeleted":false},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"aejm3iqi5pqm8a","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/aejm3iqi5pqm8a/Microsoft Defender
        for Cloud","sortMeta":0,"isDeleted":false},{"id":32,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":15,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":30,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":28,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":34,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":36,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":31,"folderUid":"bejm3irje8glcc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/bejm3irje8glcc/Azure
        Kubernetes Service Monitoring","sortMeta":0,"isDeleted":false},{"id":17,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":21,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":20,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false},{"id":23,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"dejm3iqnmiy9sd","folderTitle":"Geneva","folderUrl":"/dashboards/f/dejm3iqnmiy9sd/Geneva","sortMeta":0,"isDeleted":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10202'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-XJmQqnu++Dc2QzyL6LvwyA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      grafana-trace-id:
      - e45ef9d20ca88aec53469092f875030d
      mise-correlation-id:
      - 8bf269db-62d6-4167-ab66-f1f586697f05
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267271.428.31.764734|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.3
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FkLeE+tAEs7XU1k3kwYLUw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      grafana-trace-id:
      - 60a1b19124075831bdb972483580bbf0
      mise-correlation-id:
      - fed0cf40-ea34-4b94-8e9e-86c252363bf4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1745267271.55.31.804974|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - deny
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:19:43.7737738Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:27:33.9343626Z"},"identity":{"principalId":"ee751eb2-0014-4826-8764-6f71f575360f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000002-hvfsdnhbb5ezefd8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      etag:
      - '"4500c6ae-0000-0600-0000-6806aa360000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: A980D76BF3B94C2590C66673CEFD4F5F Ref B: MWH011020808052 Ref C: 2025-04-21T20:27:50Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:50 GMT
      etag:
      - '"4500faae-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/15a36ee5-6d8d-48d2-9024-a4433bc7bdee
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14998'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 3A4EF44957514507AEBFC14985DCF1A5 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:27:50Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640717049677&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=sJIChlJD8XOrwuSUygR7E0fSPK8oUURt49frRwZelCx4NYIZs_JUIefiTSEeCVfGKbkSYOAdwCkeKgyugFwCaWZ3HPA63wV9n_How8LX645uNqqlzv3dmb26Iv1CEYFvczMIK6gBDQdS9Uz7brqSGSeO2LYGcaoo2EJQ3T2TEEuZzb1LwKuBhB55gkhB6V2Okf_F2kfoy2HEVcXY6e9ew2qOB7ucZuM0N2dCT1p05wky2H64lRitDl3jQGijOlq2drran2MvMGz3whq59ufYbOJme7W_M9B4VM2wbKSnYpTRoY7gIB0vL3sfDav_9BFAWgq6X8g-WUSRHyUMtnAAGQ&h=vG3y6UgBkh8NQooP_WbR7ovMYIa75xCUTr6GspNEk6s
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:27:51 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640717206038&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=5XhHXCsmB_Q6RWOu743sHBCH-jO2HeoT-uv7f1y3c0DSymv5xMva05r_IVYd8HC9tWQFnwl1t2hMj5qng79s8BAQcnF7OeZ6hKitT67Zs_rGUHkbQHm8QRS6w0HtXmrScHDkow1R9SaDq2RNOTztsYdUEfFbhSr1EjYGU3kyllbOps_bKfRRWnvqKtwm_iLGNt0UZYKzkgbjIX4MVbij4J_F4MU_5DOIJ2dA435GD-YctJRUSc20nN7lVTXZ2-glo2UoB0GU3Ku1n5DiATaaltqSVGyofYHoM2W1pzaQDefQ-D_HnsgeW-MOoA-7undntFoyLY4ywfwK0rof7TkdUQ&h=JrGxW-AOQiUD8KA5RIB6wOCEj47_hCQBkdK24L5TEig
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 5A501CE660DF4E1EBE40EBDECEE4707C Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:27:51Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641018190577&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BXVcyzFOQDsAtYykIrj8odBj-W6qpYQIqfxg2MYndlFxdQoQjgc6ZkeA3sAbf7uKl0rm7-2-e9ZTuVtOrtyiooo1cDTLn_AChtfl7CyKhEiMLJAHxfbPM_ASQ00g0rdqK6vLkPheGw5GizMqRqdHCsmGErgUB5r3OKmizUHVu27tUgNskEwRMJwaEP6dJKg9IQrR80EPV9O10SjEWuPLa6vHsivbmHH_8_RPfWN3J36oTe7cmd5OphLrUPJ-HsI8Uz2IE1sQmbhifetHYuL9KmW9yJ5le9TcUH6uCyUsJfcdOawcTxKXWLnX8Af2oQHSKY9_cM9mEUJgaQpCP1y5mQ&h=k4xZ4DstzVuhhl1UR1lgvI8M8YdrOrMbzXvkCIiwvUY
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:28:21 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641018346836&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=k2AywlDeaKUjWl31mqRoEteGvgMQd3yGOIhKIbbTxKIr6syUpdj4sxCttUPtpJzJbWNtE08TIeirZOfpqHU4xgTf-T1Bd8496P9x6JJis8PAKRIGMSJnxZhaWgx5k7saDkhf2HMhemX3HVIVuo_RSIaSN6MZGb2J5T5WpHPtg_Z-uaRXm5X9Rl6YGUDna2Mg1DD0Hw4bgvSPshGLsePiUvzd2nLOQbZAW94DcGxBS8MB8JAPyhQvJPev-vKGz_YY3AnqQTvWbnpmW1fU3p8XOZe3BrKI-yeTFoZ_cCJhOWD2YbagwsKyqTo1n5lBLP56R-hk9_iQcW8SMD7mLvu4Og&h=zDWIUXgM3aaYvQqbsjOgZsS7eHRDXG6REW4iY4RRffk
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: E3C277CDD64A40A7A558AA975614137B Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:28:21Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641319148921&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=LvqyUTOvBqdIT9HRhAh1Qt2iWNneuScFu0rGe9Jkvo3N4vs3L232y0rZlAZP-4zDCRf6DK_FAZZpxpz3TGAcXie8i6OGDTeEC2ApW522qKppgQqooIe9LdxdFojiVodAfPMcQb1L8E4DE1n--7Fv3HqZXQ1o_15g_jfSUgq_hLDdFrrTC_golZOz2ewzOyTPsCZ1Z_D2uxRDKKaQCCs0zt1Ju-thCZot62dTa1Foeq2vFlxsQUf5hfb6BI2ize8lcdwJsyW8s2QsJhc4PMhXO-KQrLu4Svy3kO6cAP9AJIzjdELzyEpzjCt9IS8vngSt36-Eh--Czn3Kmh9bRnsNAQ&h=c_REWVZ5ltfHPLzLAVav7R-K7ZLie6WuA16yxp_PGuI
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:28:51 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641319148921&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=LvqyUTOvBqdIT9HRhAh1Qt2iWNneuScFu0rGe9Jkvo3N4vs3L232y0rZlAZP-4zDCRf6DK_FAZZpxpz3TGAcXie8i6OGDTeEC2ApW522qKppgQqooIe9LdxdFojiVodAfPMcQb1L8E4DE1n--7Fv3HqZXQ1o_15g_jfSUgq_hLDdFrrTC_golZOz2ewzOyTPsCZ1Z_D2uxRDKKaQCCs0zt1Ju-thCZot62dTa1Foeq2vFlxsQUf5hfb6BI2ize8lcdwJsyW8s2QsJhc4PMhXO-KQrLu4Svy3kO6cAP9AJIzjdELzyEpzjCt9IS8vngSt36-Eh--Czn3Kmh9bRnsNAQ&h=c_REWVZ5ltfHPLzLAVav7R-K7ZLie6WuA16yxp_PGuI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 795C4E1BE6424F4EAFF9DE970DAEB7FB Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:28:51Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641621001457&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=Nc6F4IUUUMRwn5_K6yhGaxSaPgomBJC0Q0hdlW7eOsR_xZRPsiQbyJ26y0JVkmm6NdN4MVd8z0p9Q7wc3NAKzHyVBqy8idwdhNGEOpqtZO16goc-k1RvrPJs4o98QpeLty0CEsRTHoSU7kYXHOGn5pl3c_ktRSjeII3redwkKa220yTNxVU49_Q1hqM-kHDTAblaETh065UdW4kIEaPEdPH63xjcDFykjS82TkTy1PNZ8oaU4TtQsTqFt6boooH_Ct-I3_4A9HY5Cie4A7rc9QAYVEdOMVjFcNSNo-xF8CQRwvRVnPbxntw4bgvgNut05-M-wqp7yv7WDXFH85Ls0Q&h=iqxWAjbMAXuS8gCOVx-IqKmsxt3pIHNiN-Dp6RshOEc
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:29:21 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641621157734&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=q2FIHjGMG6iBMu5BHcsFvv6m_RytWEzJmxCoRmq3XeEv6aL1JCkMZXKwKqzVjUxpXD_CpVTLaflWogI1ASHiF9D8bbg2XEicR8fl0qJ0aeze019dGBlWCw05wNuXAtFJ2yRkFtNDz11FvqYnXHZ4R_-fZ4PUPhQ6EgD8eGBDaXDyIf3G0dPba3s3_TLVTo49a2IM9wvTkq5CQq-4BP--8CJj7oA8XdhPdm-gauAhZT2G_q1OtPzndMW8RGsG2taQ8MnDDfOCn6azOSlS4Pz91DjMGZO1t79jB5pGRETDtpLPb2avrgDyBJVxJIiJkS6qRnm7TkdV50Tr-E7_d-WPQw&h=9kH3ZXPHLqpxkv26arFQ01WuQaX71LE3UObrrK_L91I
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 7D5D690E473A4E6781A2E34D12C60019 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:29:21Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641922727885&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=G8_GhnsgKLMdzc3v1WPLwJvQUhUm0ZziffyGL_xnUQcZKMlkxAvLB7FFFimGTqXiPtiKxeyPs3wENC8fhM3l93LHbUWRRuOiN0R3mN27eXCOteOSjqS1CYKZ2C-IiwtY5RAXQGt7puT2UMPgzpD_QuHN6bpzjtUPHb8Q3Qz3Zo1uOq1_mekoG2WxioF--LWK3X_zhCZQm82hOzR-zrvYiIjz8Kcu8Mh-OqCtOPkgzft6fG5YGapWT8kz-8JzXc2PCZoCUrYh08MG_1INfFo3hPfwhjSDwA26E3ncH81yU08cdMDg_FwE7dzQJ5EfPSAMLV3Fm8iZHRfJ_UAebbFYsQ&h=pgxmf8j_8k5RppWG7FSZ1i43EYDRUoNtaGQtcGAAUpc
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:29:51 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808641922727885&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=G8_GhnsgKLMdzc3v1WPLwJvQUhUm0ZziffyGL_xnUQcZKMlkxAvLB7FFFimGTqXiPtiKxeyPs3wENC8fhM3l93LHbUWRRuOiN0R3mN27eXCOteOSjqS1CYKZ2C-IiwtY5RAXQGt7puT2UMPgzpD_QuHN6bpzjtUPHb8Q3Qz3Zo1uOq1_mekoG2WxioF--LWK3X_zhCZQm82hOzR-zrvYiIjz8Kcu8Mh-OqCtOPkgzft6fG5YGapWT8kz-8JzXc2PCZoCUrYh08MG_1INfFo3hPfwhjSDwA26E3ncH81yU08cdMDg_FwE7dzQJ5EfPSAMLV3Fm8iZHRfJ_UAebbFYsQ&h=pgxmf8j_8k5RppWG7FSZ1i43EYDRUoNtaGQtcGAAUpc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: FC3E740FD4BC4B9897BDF12ABA176A15 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:29:52Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642224292112&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=k9T5VMANsrW9vtzEf5HvhZl01aMM-F0WE-oh45rQ6TrFptZ0zm4WZmzI6KhShEMZfUy1wKLFXso5wfo5_usou8e7yCvUk0C5RFBIb51ZLBy_SLXWTbplVHJHbkCdwwiUvy_AAL68PcvQQc5107SWgjZ2Nn_nkbw_z_Od7La_gcwTCzFZ6s51hmIQQPe-Op7vxSfriHPOIUw1L6qAkhr99SAuQJ1J4p2-CkMaV2BdGKQ7TACZLYS4TIWOsZg0iOW1b73dEwl-YaQ5_sEdHrqyIfyz573fHrNF9F2YRzNUPTm6WZ-J4VvzMr5Jvhx2fr-CjQmHWHtXt1elNcK8ayNK6w&h=ER4NojoMqJGY8-OcfKn_Uz8-7a8g8061XMeG11pxP-4
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:30:21 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642224292112&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=k9T5VMANsrW9vtzEf5HvhZl01aMM-F0WE-oh45rQ6TrFptZ0zm4WZmzI6KhShEMZfUy1wKLFXso5wfo5_usou8e7yCvUk0C5RFBIb51ZLBy_SLXWTbplVHJHbkCdwwiUvy_AAL68PcvQQc5107SWgjZ2Nn_nkbw_z_Od7La_gcwTCzFZ6s51hmIQQPe-Op7vxSfriHPOIUw1L6qAkhr99SAuQJ1J4p2-CkMaV2BdGKQ7TACZLYS4TIWOsZg0iOW1b73dEwl-YaQ5_sEdHrqyIfyz573fHrNF9F2YRzNUPTm6WZ-J4VvzMr5Jvhx2fr-CjQmHWHtXt1elNcK8ayNK6w&h=ER4NojoMqJGY8-OcfKn_Uz8-7a8g8061XMeG11pxP-4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 32E496034F6B44F9BDCE8A2217BDCB3B Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:30:22Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642525830259&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=0an-jXyoFECK4XuzskEAQZoUPKwZJj3YJx2-DYapHwPWgVN9ikPByw9mW93vNm91hOVddVpsuccHNVdsydr-0EzBFshdDdXm-13ZkXjmWiTk5_TOsKCkkTXKoL02-xxa93XDzCYN-b-JmBHQhZs4p3vJn-czj9Cui0RHKigpbWNep8xxcnlxjJw6gtQCqU8hOotlyqA4QQagfYHDiYLkAF33bc8rhYqGlX4-ppw-gww3JFJwkuX43u63xTVdzYJM5pTqeCtCouAvNLhhbuRc6mAsfB3Crfa-JTcA-N__iU9oC7aVl3ELVq99yaLWbwoZrdkWHjY_5K3csigDP1rPQA&h=S9kYZoYBOmxmOPEJ4784omzMhgYS_D-Uqi_lwyti3Ik
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:30:51 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642525986239&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=BtY6mx1mpZnN3MuWT6fXIEbuObOfMFl2VTq44wnqzznCWqZUhvtVZAsLj8aNuAXDRn7eq-N4eK_dBqqLlo57yYRiXM3jTXylQ6M07Ndnm3wUhCdf0HvOT2OdW7OG8swNogtApiv3LEhRm20EY6m_ebQEV_Kd9X_JIQMSykK_N7LXvtl4-8i8ImWGldvazdgbEk_RU9pejgnUjJpj10aGdIq9dkvlPzA3QpMmiqDg4GCaCc56imu488ZvEOSS-UEfDqANiANqh7KuLkKDRzn7r7x1ZDZGVjZ-w3VOvrlQaKsxCmIQ_VIH_PriifBBtWjszs9Pj51TxXzZM9749nmiKA&h=9wn_adOCI0FOaGsvMZBihTvLI2pm57Y94996ff7Q-4w
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 4E9819DA97EC4E6CAB65A4D56D160740 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:30:52Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2025-04-21T20:27:51.2701522Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642826717487&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=6pi43GKide92CppnREyU-7pY5Rknl5umKpQZKsdQcILpQZwe9eRh0wgJblNJo30TyHIsgjIlsU7yGXa3_MhfDhogzu7wFpS0q3-7EOzLs4F9-b1qus8Q9q_qFZxfQyzQVVGyQma5yIr8Va8G6BUbw6TCPOpb2fiQXLywwxxN1w9Z2FGI3AJDD5LQEiWgVg-lWc4VVdSt-sYwX8eOI7UGpc3jHaZOG1nbCdD1nPS7kYOXvqj2KpAL3d-ULOY0Z7uRrcucEoxOErzY04UYV6opaBTuvJsflG4xYfvhFmzLjRT1mmweOIaXUonU_JmNQvGm95Wk1LUBxwzqvob5tdxHIQ&h=oz-xW8iBkHMyRwdAA46J2ZfzGF2PZV7KZwG6qS_QRIs
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:21 GMT
      etag:
      - '"2d000d25-0000-0600-0000-6806aa470000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808642827186754&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=THHeq0COik7YYtH4Dx3FfDyM0k7ADHkTZrhPac3Dbncrmea0VLK55QhxSIQWGDmcrinekfYxrpth7t4i4XhX7j_CeK51RH5ziSnQ8NBsitSwKQxlWVl42N-9qTquVzvzq_8SLaq3NU8y4NrdiKYjN6KQii7WnA0o3lCMQjK-kbpsSyBFqpAexPzDB5GF-DOMzOKYXPDJnC8pkoecM3dk9cTc7PIPqRUYChKzKV7oqEp1ai2k-G4YH3xDlE816hVK6mWgsssvyEkefuNk88eIssJiFWx0Pg95UGiOYfb5a_is79UUkUsk6nV3bFFPN74CC66zfDijRbjAzMjsf7DTvw&h=5ibF9Twl5M-f-VIUvWOmBMzOMkH0GQWvNy89F5D4TH4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: AFBA75E914A9471D89C51DED056917E8 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:31:22Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723?api-version=2023-09-01&t=638808640714031952&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i723Dr9qXEVDpUIuSXGm3m7doBmzkIDR-13AoKRTTT7FY3x0zdh83Laal3SAw0AQHF5NpVKQfN490FaCdRsQEvG5PTeRJ8vcYQ6E7CVyAal8dlTEGvYC_4lsFjzDoSYPhhFU4XhRV-UMGIgBB6GF2jz9hLTv6vEm_mCyhPVdqMyZLt03fnvU_Y0Sh4sfDPXAF7JL-rt_T-CthaiVcaA_ffFXv81SRmvDN3vq5LIxhjjHHpeWXKbBh7TQlgJIcL3LkqgefTweqwAm8-U-ONGudvCAvlAud8v2DO07tAXRfZrutqylx3fdenaQ9pys9BWkU0z6_TonAI6XIVn97cOisQ&h=cdAmzD2PTGmWeWWfAdB2DWKb-PrSyhphIn_iWDhrtAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","name":"8f5fee9b-1bd2-4554-857d-57e202f8a373*BE14A9F111F36FB9E68502DFEB90C049A9AAC44F43760B8A355CF55800ADF723","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Succeeded","startTime":"2025-04-21T20:27:51.2701522Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '539'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:52 GMT
      etag:
      - '"0c01e799-0000-0100-0000-6806ab250000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: C99720A183C844BAA12E6D8E55D914B6 Ref B: CO6AA3150219051 Ref C: 2025-04-21T20:31:52Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'ee751eb2-0014-4826-8764-6f71f575360f'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"ee751eb2-0014-4826-8764-6f71f575360f","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:22:19.3723435Z","updatedOn":"2025-04-21T20:22:19.3723435Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:52 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/70f5a623-ccc8-46a5-921e-deaae7460c07
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: A90EDD7D464049C797A4A884EDA29745 Ref B: CO6AA3150217045 Ref C: 2025-04-21T20:31:52Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"ee751eb2-0014-4826-8764-6f71f575360f","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:22:19.3723435Z","updatedOn":"2025-04-21T20:31:53.2884168Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:54 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/8315adbb-0c37-4225-bced-75394200281f
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 7C9D81C273884A7AB2ABF767AC60798F Ref B: CO6AA3150217045 Ref C: 2025-04-21T20:31:53Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:22:23.8725991Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:22:23.8725991Z"},"identity":{"principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrate000003-d3hgbgfee7h5awcd.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:55 GMT
      etag:
      - '"ce0204e5-0000-0800-0000-6806a9a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 5C4BC4A7B5F94FD9AECDC751101C0B3D Ref B: MWH011020806060 Ref C: 2025-04-21T20:31:55Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:56 GMT
      etag:
      - '"450062b3-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163424701&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=RtruwDXwFQRtqDBtDQBB-2Mhr2rmTvD-iwbyA6gBYss3W-CuOZ2Nbud271OIZNp9Ki8ovXh4K0JcJi_B-2p1DclS2uGQN21uV8trMfLH3FfMuMqF88LaxvfvNwqiypin3RVvfqKKGvjwFhucCpcQCYJy4DkZUg3vmRGQb4QHWjRmTTJjLjR1RKURKwdBJKkOWKuTW5-JEwfe3QTKWIHCak78Ocprf_UPN4WcdCH8l0gGm8meEnLcWyL9Sa2T36FSupoN9DS2mNtI1PXoJfZgqHDHujLoUSo6qMTiR0sjhwicytWV7Skjw0tzwuP9TSk7PQUFHBNmwqtcjJayFSjAmg&h=_1-z_Lgs1XvMwKd0GD4aNsUxZYUPJ1OhK1Yl_KhhYuY
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/e6ec7887-f558-4816-87fb-9f9ee220571b
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14996'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: EE58F200ABB54A51AD9940476D020D84 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:31:55Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643165006090&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=jiECXy1dRebuHzzf8cc7ydx6YYGhGZJVHhxhn0R_pBhextKah6WEp8HwQPeIW3pfOpB_0AXLQihQi9sLSprWSDQ_oJnuXxn-ZQgl8tuXTbvCKmhYsc4QBtQ7dV35k5sggp3YKltVdRcoXhSzmKFjVZPq5d1MSL3Ti2CWk9dFZjxsxkTsbp80O5m8itxJOK8rFlAyP3A1B5mhnbithKIynYWIMncXqQpfV4VEOynBI7l6nSk28lAfTwxYB2w3AT-CpNobVuXERIJ4JXRnyJb3eqQk0vLaL5txlZndIUWgOuaUxxkoh12V5u0Q-D29IXAtijFdPDFCJhxvCftlvX3MBg&h=2Us6YmiG8HzCM3VGg0xmA_avIB9TjaECA8uPdWGEC6g
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:31:56 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643165162395&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=MelHAqRL-DJ1EtBXo2qb8GzUuCr6tbvXUXvn19WRkPtLWlR9r-s6_7YwZxYtEGL1NX2dIPqZN-uAPG4hb6-CCGYwyuquDwtDMSGJRdQfid1mDDPBQP93wkIV8AixGMG1xGi5wA_Bn7x_Z2nk2K0C98EyS-ESw1m8KUibc2IY0G5s_9j0S5laVy-J9JvDrzekSe0lqgK15aF93xirlvICt-w-rYFh0NFm8SCdHKsC6fIhyGg1nIsvtQMAdHvoc0TXd62GzJiHUiPYeA2TOzFQGtYngbH0XXiOTbX5Zo6gjNKc_3TKYsEE9oiV7eudebHDVddbfabkfwogNx9G8fUGGw&h=RbeslK-TXaLciwrlCvbkoU70hpuOHzXsuVxpaGC3sEc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 6C318AA20E36436FA8E3452C6ADB2D63 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:31:56Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643466981405&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=bHiiK3jnUdHmnb6td3OTqYA1rqmmAOteEDWVtwFVrzY6RliThY64rST03OqIIRLNFMx0JtSyb1bTinw3hSEaq7JlIjB6hiGGlvbV6tiEPiKi9X6B2esDZt3diIs4Abu_0IyAX0lGBKGC7JsRWLiHKkYdni04udV1HtBHUFANObwOYuYP8jqTXdepgv00j83FPClZpyY5ApsLuC-A9fzotCPYx5RETQMG7WqDRXOCiMYNEobEFR5hbmKeOsk0QXdpM_j4s4X-e-Lv7aLRxTQ7FenHUGJYnzZc9yWUaultFi7E9Jwqiy7Q-ZHCpI9y5E6jDUqA8_UL00nLsGV9SDQY6g&h=0N6-fOPoz0slIBAKHttJPkMolBTpllHGn8zPFOtrVc0
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:32:26 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643466981405&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=bHiiK3jnUdHmnb6td3OTqYA1rqmmAOteEDWVtwFVrzY6RliThY64rST03OqIIRLNFMx0JtSyb1bTinw3hSEaq7JlIjB6hiGGlvbV6tiEPiKi9X6B2esDZt3diIs4Abu_0IyAX0lGBKGC7JsRWLiHKkYdni04udV1HtBHUFANObwOYuYP8jqTXdepgv00j83FPClZpyY5ApsLuC-A9fzotCPYx5RETQMG7WqDRXOCiMYNEobEFR5hbmKeOsk0QXdpM_j4s4X-e-Lv7aLRxTQ7FenHUGJYnzZc9yWUaultFi7E9Jwqiy7Q-ZHCpI9y5E6jDUqA8_UL00nLsGV9SDQY6g&h=0N6-fOPoz0slIBAKHttJPkMolBTpllHGn8zPFOtrVc0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: C887DF609FDB495A8B1DF7A304B24E92 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:32:26Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643769823407&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=PTR4s6OQwwI0XjEnlAHWn4elerTZgRQQtYJFei2hENs49PWtz0HH1ZRFm0uEUKYhXzW19HpADQIWSsLgn88iSPUcDYpYjP6BJUZsPsVy_J6MFYfhPzYGptZB3pVlwacgNNfr2F_msU8jpDTRQzA_c_4zoHwdQlGeaNis5raErVJofTKz8FR9Ijho9LTo8T2AeBKChVt5DIMz08Dj1n35lxD8Kx5eqljsYWpGd9mB7Jb9QMbfC3PPVfmMWBWWUlWRhm7BWoNubJnkoSqw9OeJgzwnWtZ3gasCh36zwUqmxjvSpQcZDQwfU7s51RXLxsoVjvHhwxpCfUOGdH5IA0Abow&h=CWdo3M91bWb5YqdHfvIeZYPr5RdrA4RoIIkHvN2VDgM
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:32:56 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643769823407&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=PTR4s6OQwwI0XjEnlAHWn4elerTZgRQQtYJFei2hENs49PWtz0HH1ZRFm0uEUKYhXzW19HpADQIWSsLgn88iSPUcDYpYjP6BJUZsPsVy_J6MFYfhPzYGptZB3pVlwacgNNfr2F_msU8jpDTRQzA_c_4zoHwdQlGeaNis5raErVJofTKz8FR9Ijho9LTo8T2AeBKChVt5DIMz08Dj1n35lxD8Kx5eqljsYWpGd9mB7Jb9QMbfC3PPVfmMWBWWUlWRhm7BWoNubJnkoSqw9OeJgzwnWtZ3gasCh36zwUqmxjvSpQcZDQwfU7s51RXLxsoVjvHhwxpCfUOGdH5IA0Abow&h=CWdo3M91bWb5YqdHfvIeZYPr5RdrA4RoIIkHvN2VDgM
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: F67F90CC35A04EDFB2324810FEAF09E2 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:32:56Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644072453006&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=JPKZl2IYLz1Pmq5Ei3CDTTIGpicAajVqhN0djFOEDaoeKtemkzWaOwPV0ESdD4lgd5ZrEoeENn1WvcZdSOKSN29MA9Mih-Fz-x1FrLIc9gGQV8JCLTUmPpJXvE6h6Ah-y3_-TxPBQmrw4AjgFgZ4x1HRO6WUADxKzlmM1Y36BL7_JlPItFoAS1uMJQBNO0FhJ7LPyILjHKOXm6te-nnVGfVW1THyHKzhtrs76URDEJTV_8o7dZQU_-ziekYostbl79zE0I9GQUme9i87H9ccFoRALH4AYDFwxomSCRuMSBRkTe_Bfb1B3ErveMvs-lxJ_n7GPZC_mO1O0D1Pmac4ag&h=PqA4VKBePZefi1QZ6VES9sy6v1-Ko4IPSayFoB-0Vx0
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:33:26 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644072453006&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=JPKZl2IYLz1Pmq5Ei3CDTTIGpicAajVqhN0djFOEDaoeKtemkzWaOwPV0ESdD4lgd5ZrEoeENn1WvcZdSOKSN29MA9Mih-Fz-x1FrLIc9gGQV8JCLTUmPpJXvE6h6Ah-y3_-TxPBQmrw4AjgFgZ4x1HRO6WUADxKzlmM1Y36BL7_JlPItFoAS1uMJQBNO0FhJ7LPyILjHKOXm6te-nnVGfVW1THyHKzhtrs76URDEJTV_8o7dZQU_-ziekYostbl79zE0I9GQUme9i87H9ccFoRALH4AYDFwxomSCRuMSBRkTe_Bfb1B3ErveMvs-lxJ_n7GPZC_mO1O0D1Pmac4ag&h=PqA4VKBePZefi1QZ6VES9sy6v1-Ko4IPSayFoB-0Vx0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 0A4AB0E3408D47BC8B1E5779C8BEFE73 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:33:27Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644375187353&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=142_wyKAyQrKFYNts8WET5zbcgscImtHaE8phDH5wu-_tJhz3oGdPgTGbj5xqMh0HDeSGxwNHSwX41MuAJMC9Ns3OIa4POOtD_JFKLtAhY7j3HJqb26RRp_o0uXcM-x8gIzFbqFpXyTu3VrFp-c6aa2v8SKpW3RbvUcO6X9E0XktxYXYHb5gW3NJ-4763L-gH949wxncX7SdIr5s3igrPtuaQt7d6_7EBRQqHT1dV2wYIH8FD29BVTyhO6k1HWDYczFfzEgLVspOap9U3eYliC4ypaWhI_Z3hqJnpPW4WiyN9HpkNpGBxjT88xIX-mye91-yW53j9HZekdpgCAcCPw&h=Byn4veGjkuDipg-pDHaunDLHLTZYaOdGxE6BoOyDJg0
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:33:57 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644375187353&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=142_wyKAyQrKFYNts8WET5zbcgscImtHaE8phDH5wu-_tJhz3oGdPgTGbj5xqMh0HDeSGxwNHSwX41MuAJMC9Ns3OIa4POOtD_JFKLtAhY7j3HJqb26RRp_o0uXcM-x8gIzFbqFpXyTu3VrFp-c6aa2v8SKpW3RbvUcO6X9E0XktxYXYHb5gW3NJ-4763L-gH949wxncX7SdIr5s3igrPtuaQt7d6_7EBRQqHT1dV2wYIH8FD29BVTyhO6k1HWDYczFfzEgLVspOap9U3eYliC4ypaWhI_Z3hqJnpPW4WiyN9HpkNpGBxjT88xIX-mye91-yW53j9HZekdpgCAcCPw&h=Byn4veGjkuDipg-pDHaunDLHLTZYaOdGxE6BoOyDJg0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 7CF9862CC1794EDB9B34E5C08A82A594 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:33:57Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644676021501&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=N-HsUX2XKud8zOd6jmtG3Jo_9L8jdfr4L2jEbtBBeP2FdyQmMGM8cjxEwxRvryajpJZmxzdQeClluQkSOSOoP1aKg3e5D8culb7pjyY0GJHHt2Jop17cwSUFB582cMGwawodxzBe7yEwyz8xB_K2qeiq0lKTb9qElPO0H0XeGo_q5Cdkxbsv9nwk9kAES4XYPdYh_QVUTi8M2TTGa00CR6_uTA_R7Ls2V_DhPiTk-E6E-wbN8kqGHLFjTRHwWeZucRnhu6MX_l3gzJwtZ1D8cMVJ3Z9s9aG8rS30YCD44H2DHU4KitO1XEJqcWX8FNN_epirijSstbzwgtp77SuTmw&h=4gIWhPwK4DJJuFrRYfhAGcBkrWq8kM3FiePnMbP9D6Q
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:34:27 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644676021501&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=N-HsUX2XKud8zOd6jmtG3Jo_9L8jdfr4L2jEbtBBeP2FdyQmMGM8cjxEwxRvryajpJZmxzdQeClluQkSOSOoP1aKg3e5D8culb7pjyY0GJHHt2Jop17cwSUFB582cMGwawodxzBe7yEwyz8xB_K2qeiq0lKTb9qElPO0H0XeGo_q5Cdkxbsv9nwk9kAES4XYPdYh_QVUTi8M2TTGa00CR6_uTA_R7Ls2V_DhPiTk-E6E-wbN8kqGHLFjTRHwWeZucRnhu6MX_l3gzJwtZ1D8cMVJ3Z9s9aG8rS30YCD44H2DHU4KitO1XEJqcWX8FNN_epirijSstbzwgtp77SuTmw&h=4gIWhPwK4DJJuFrRYfhAGcBkrWq8kM3FiePnMbP9D6Q
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 1AF5851294CB4099AC7018FCA3756DF8 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:34:27Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644977819750&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=4dwBmwLLVLktH5ztKnWMtjYDb-0rbfIf5aLlPjn3CqYqt4oky4IjylPUToE5vI0Dsys8Av7_-7xeYNRwJtVpTfGjB5rn_of0jpAqyg9XhwV63xZjrlgkSGPpA4AhxX8PGs200hBYkXb2hOLwZBrRPfK6QUUx2y90-8nV1yHvYIgBlcyQVey32GO_up5V2n7e5e_ce9PjSJAJ4dOzbBFRSoV5e3yrtoAg-I5gXdwpC6kZhoLLS0CtEHXPZNPL5J5-VZ_z38Ori3RJOv9Dgq9tSgmmuNdA62yvoO9P8OIjopphiGfoApkiUrRgob34UP7imFRH2OMbpTa6nI1O4bFb5w&h=LLHOA7sew7THxHJj9ioD7SJUEey0jKqrojzOYBwxJBg
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:34:57 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808644977976000&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=i3ks9AAlB-KpBObYLTx1_1Rm91yf7ZeIyixwgsythY_xI3lnDWLHgs_i9iM9oxWz11R2AB5Z9BKWWm4TQwoyLAvL-kG4SlsJ6yiPtN5_m3ZYpCPRAqC9u1AcnA5PzevO9OK0Pl4Dp8ou7Kl1paQpIuUiov1rAAw-rwyWVGbm2zsmRY3_B_orEW5HOq_-FPiSasHomANtx9VI1_SB7VD2FWlBeUM6Nd4vtvJfSFquS4QtYkm_QWIcZbbGbWOw7irzK-hDmj6WTbzAOHbfQmnSJiT6JyFoHzu5JgNi2A8qqFvfz44wABo3IywOgiXCYgHcCRQVseT9w8pW_i5YzZswxQ&h=TbkFrZ-fmumMUD15JrcFhVgfCdwxaK8jOtLIOR_NFdg
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 32B613CC53C94C51A6F9442B9FB912F6 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:34:57Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645278892608&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=PFp9pO4vQ2z31ozdurVFjEcCqpgcjFUQ28Pqsow9QHlNoepP2ERVXeQRTneIPC5T6I0jn_2OlPrAObEIAwd_uHPHXnjn0G0YFrvRDmynQnKRo7qQ6zVdC5QUyz_xjvADI-1e7Z_FcmBKy-RZeLsAi--qro7CPc7sUiz6EmkGiDC1ER09flQI3jiiDeLA_KXnmVbFxrPN4LyMobh4u3djhYH1Iet9giXzytVH_vExyFiCOOG5OLI3ehvihpgClWrKYPIPnUFSkJyBu3qjmYMcNX1CIb7iHAZuvvmt1C2z8xkS90w6YOIdcEaKngYuMuTJaaRhQXs0CAQtBEcu7EsqxA&h=BPk2GphaweSYZE39qqHoLSCnFjVaIZNI9cdgrIQ31iU
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:35:27 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645278892608&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=PFp9pO4vQ2z31ozdurVFjEcCqpgcjFUQ28Pqsow9QHlNoepP2ERVXeQRTneIPC5T6I0jn_2OlPrAObEIAwd_uHPHXnjn0G0YFrvRDmynQnKRo7qQ6zVdC5QUyz_xjvADI-1e7Z_FcmBKy-RZeLsAi--qro7CPc7sUiz6EmkGiDC1ER09flQI3jiiDeLA_KXnmVbFxrPN4LyMobh4u3djhYH1Iet9giXzytVH_vExyFiCOOG5OLI3ehvihpgClWrKYPIPnUFSkJyBu3qjmYMcNX1CIb7iHAZuvvmt1C2z8xkS90w6YOIdcEaKngYuMuTJaaRhQXs0CAQtBEcu7EsqxA&h=BPk2GphaweSYZE39qqHoLSCnFjVaIZNI9cdgrIQ31iU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: 5655BDC0C1374CBDAF1829BEBA6D7FEF Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:35:27Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645580139978&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=TCuJX9_iXQX5QNy2ZcMkxH2zSBAkmq0DlKSwxlcFRuE2O-f56tlOpeYV9XuwKxVvrLYYvUGdXoOrXcm40YMxVczhXV74ZBzLSpEmHgna_7IDLEWPI-MuS8-PgLbkuE6sdP6ZYN0QnSt8x4aul_3fFcwg2-ZW4GA9flTDu-sbSvfIweF54c3zZqkCCelNHEAHuwh8_SFcCp6fiuDqNoQpR66Oj4OkEKSxOcgx01XEJllCK_0U0uJGDDRTLx8wcwPSUf6ScJek13pYai8hPjr_5hhXIUZtFzK_0gVRt0P7jFT5qKbH_9XAvEN_zWV4YCr29fS3bMXjZzdBIakhzhM7Pg&h=lkTDu-dVXYnydV-Kyg7WuOficxIaIVkBUH7HplVV4q4
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:35:57 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645580139978&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=TCuJX9_iXQX5QNy2ZcMkxH2zSBAkmq0DlKSwxlcFRuE2O-f56tlOpeYV9XuwKxVvrLYYvUGdXoOrXcm40YMxVczhXV74ZBzLSpEmHgna_7IDLEWPI-MuS8-PgLbkuE6sdP6ZYN0QnSt8x4aul_3fFcwg2-ZW4GA9flTDu-sbSvfIweF54c3zZqkCCelNHEAHuwh8_SFcCp6fiuDqNoQpR66Oj4OkEKSxOcgx01XEJllCK_0U0uJGDDRTLx8wcwPSUf6ScJek13pYai8hPjr_5hhXIUZtFzK_0gVRt0P7jFT5qKbH_9XAvEN_zWV4YCr29fS3bMXjZzdBIakhzhM7Pg&h=lkTDu-dVXYnydV-Kyg7WuOficxIaIVkBUH7HplVV4q4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: A3DA2DF56DC8473C9F15943486119F58 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:35:57Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2025-04-21T20:31:56.1624629Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645881876526&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=RT54IzoCN1194VsdGbXOg6SSHSqwkJ84dTE5jzdtbHHHff2sC3-J_jeLhJ8chB2LRGuXMB1G-5FrLzG01_CBXErpp46ujL-0y_AXQrJWyKVFmlnkkWCfGwDMaH7VIkUOdaPcFOqc1p4c9R1pA4H5X4Sch-L_0SP93Pv41RbJ3h8QnZDK3IeAbviODr1j64knARXgWQymW-6jVqeyv4gAIzG1asZ1QhRkQ5v8D-VecTDp0ZMxt9uXt5DSu3QyvgmUxfSAQLcuJ4k2_A8Ya8EHIK3jMnCvImaXHhX4tZNSNPpTXWYltibuWMuHhkDxj1QqeZhU2-2QYRwAdvV1rU86HA&h=hB6YE9rumybFWsKN21mqwQWpSXAsk6sPE0iqOF4vrT4
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:36:27 GMT
      etag:
      - '"2d00c127-0000-0600-0000-6806ab3c0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808645881876526&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=RT54IzoCN1194VsdGbXOg6SSHSqwkJ84dTE5jzdtbHHHff2sC3-J_jeLhJ8chB2LRGuXMB1G-5FrLzG01_CBXErpp46ujL-0y_AXQrJWyKVFmlnkkWCfGwDMaH7VIkUOdaPcFOqc1p4c9R1pA4H5X4Sch-L_0SP93Pv41RbJ3h8QnZDK3IeAbviODr1j64knARXgWQymW-6jVqeyv4gAIzG1asZ1QhRkQ5v8D-VecTDp0ZMxt9uXt5DSu3QyvgmUxfSAQLcuJ4k2_A8Ya8EHIK3jMnCvImaXHhX4tZNSNPpTXWYltibuWMuHhkDxj1QqeZhU2-2QYRwAdvV1rU86HA&h=hB6YE9rumybFWsKN21mqwQWpSXAsk6sPE0iqOF4vrT4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: D669D0ADEB6442B79D92DABA647C0E68 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:36:28Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5?api-version=2023-09-01&t=638808643163268350&c=MIIHpTCCBo2gAwIBAgITOgWZuFmLREgOyTdeugAEBZm4WTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjUwNDE5MTQyMjI3WhcNMjUxMDE2MTQyMjI3WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxDlNdj6r6H0vTzKfz228nqLQPXYSxPqEGQSSSCczQcCX3f_Xtnvc-lFdoleay-OVQlgfbWiMkGazl2q7FVj9BZUHJ3KXFg833nlMDzzIkfrA17t4t3OW-6po21aPw9TdEBtH-GReYxdd8YmK-hHhKfpllLkKKn29Z8r3ecn-VJ1URRr4gV1Dnhd8h62eio4oVWmqq_9ITkiyfphE8gKB3n-2ZGTlftv1uEX4hpgnUbyhP4GBPp9Ni0RdYmpukMEr1-GI3W5OnXgKOvoCRB0HZQKU-5u630M-76UA_GFyALd1X_xQwHcCHKvtBzX5EEcQ4AOj_B540c3Mp0HnljQsECAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRgocSx-jjjSuZiJXHuNlAhZPhmbjAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAK5mT0Rrym5x1NF2yah7nxZLo1y0madgpRkCREZyGAoW02DZD68DX6wagq4RbcOr_MAlhvWOTjVB8J52ZIsydOGq5NSpxte9Cy10m7-zSXWMn0yNE8YUToarDNRzmshQ5pEBXhjU6kSMEvqeNG8Fr3KrDZEVieQc5By_ZV8F9vtuv90XjrjiLw1qOrPVVvUFOTx-JlUR4aErF4Jldd_YA0aWCiYbvu3Bd1vWtXdnrkJSX-natlKNqGimVnj86nKEao8ktK5pKaHq6C8vbOLeNreXRy5C2fC1tgiZ00V2pHuk1qbOdhlzTDv8G0HZLm_T7_s92OBqMAwBJ1uChKnQm6M&s=S4Tqj0fx51-6Lx6rQysG4wadvTksCP42UwEN9gVnEoGvxiqZP7QNYUsO3sfisivcJV4s_KwNMMcgC-9mOsAad8dgaZyR4wOZetbyL-Zn1P-i8gkv02yazBSjOv-lLFS8AMR0neNLXS4n7dyTeEYwmFir6kepfEvQ9-Ng7FzBYc-JHLvHf0Nxvtza4gCnVMUtr134ev5mpiIJz1yDAKOMwzNQCAFbZYOiPpge4MSXlUk-AytKv3_SqkGwd3zxxt49CVd-ODsC8lcyaTJAaPnSZT0YYd-A9yZt43rImPPrBi-iHo9YKrWe1NUlOYjH89qXBbBZBleH4wGpF4U-tdRFRA&h=jA0wEoRkuNwc9DOT5MAy6oMelAKRCx3Kbx_VYh3YwNM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","name":"2794f041-7fb7-4084-8304-d91515c9d383*F0E638AEB15C4622A0E4273DA586C505C65CFFEF3C34E808CCB2B9BF6AE204F5","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Succeeded","startTime":"2025-04-21T20:31:56.1624629Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '539'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:36:57 GMT
      etag:
      - '"2d008e2c-0000-0600-0000-6806ac4d0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - ''
      x-msedge-ref:
      - 'Ref A: E87F63413F2C4970970461ECF4FEDA87 Ref B: CO6AA3150219037 Ref C: 2025-04-21T20:36:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'227f3270-65b9-4121-90b0-6a60f34f8e8a'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:25:30.9691352Z","updatedOn":"2025-04-21T20:25:30.9691352Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:36:57 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/42ed06cd-d1ae-4eb5-a3cb-095552a2cb74
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 828451BEB83E468883023EA43668C521 Ref B: CO6AA3150218031 Ref C: 2025-04-21T20:36:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"227f3270-65b9-4121-90b0-6a60f34f8e8a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2025-04-21T20:25:30.9691352Z","updatedOn":"2025-04-21T20:36:58.6921784Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:37:00 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-operation-identifier:
      - tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47,objectId=953fd163-96b2-4789-8a83-9cfe693dd8d5/westus2/30f4f02d-95ba-4930-a5a9-77334784a882
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 6C583E0E65F844508AC352415807142C Ref B: CO6AA3150218031 Ref C: 2025-04-21T20:36:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana list
      Connection:
      - keep-alive
      User-Agent:
      - AZURECLI/2.71.0 azsdk-python-core/1.33.0 Python/3.9.13 (Windows-10-10.0.22621-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Dashboard/grafana?api-version=2023-09-01
  response:
    body:
      string: '{"value":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup","name":"clitestbackup","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:19:24.1324865Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:46:56.1449346Z"},"identity":{"principalId":"12826562-be7a-40a8-bb8c-8cafcdf3b096","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestbackup-gzccd3f9abdcese4.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup2","name":"clitestbackup2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:24:06.1205753Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:47:38.8988075Z"},"identity":{"principalId":"ddc1b197-af08-46fa-b011-288088e0fe9a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestbackup2-ekfbc4c4ekfec9f7.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amge6bdhbsxhkizkmk43l2azyfo7q4gksu4nnwaswrai4rd6px2qpiukibpan6pwr7/providers/Microsoft.Dashboard/grafana/clitestamgsvcacct7ixop3","name":"clitestamgsvcacct7ixop3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-01T23:02:00.8760036Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:44:51.4664037Z"},"identity":{"principalId":"ccdfa56d-9dd0-4c4f-93b6-fca21a04a4cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgsvcacct7ixop3-edgvgyeddcgvbcfv.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupewnvswl","name":"clitestamgbackupewnvswl","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:35:34.7525135Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:46:06.8109096Z"},"identity":{"principalId":"f27fa747-c40a-4d28-a135-27ed52022b3f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgbackupewnvswl-fwe4ehayded9g5bh.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupmg2uoml","name":"clitestamgbackupmg2uoml","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:38:16.2013451Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:45:27.1753893Z"},"identity":{"principalId":"7647d10d-8707-4e80-854a-0aa860b345da","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgbackupmg2uoml-akhgebdzgqdugtff.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgsv5g6p7zxqgkjlbo72aj74bwqmjgiffgln4ruqopvwvxzonno6aipwr5si5echs/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctg64ptv","name":"clitestamgsvcacctg64ptv","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T05:20:53.7781253Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:46:10.598648Z"},"identity":{"principalId":"88599c24-a779-4839-a6f2-70315755e1bf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgsvcacctg64ptv-fddkggenapdhage0.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgfkt5whmi6amop2w4gmudi43l3p6xzf4vikxgsvbu34x433r6gvnejgsx3igyx5t/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctq335hh","name":"clitestamgsvcacctq335hh","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-07T22:44:15.1741136Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:44:32.2561155Z"},"identity":{"principalId":"bd67b976-e219-4c8a-b86f-142576c8cbd6","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgsvcacctq335hh-aye2acc0h5dnhhat.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgil4gmtwhedenq6gclxyytdufekgx66dqh3hzzvvbvnr2qsevom64szqi6z57wrv/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctrqpmqu","name":"clitestamgsvcacctrqpmqu","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-10T00:26:40.0238772Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-03-29T06:44:33.1161875Z"},"identity":{"principalId":"b377cb57-6d8f-467b-a494-7e0a84456051","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://clitestamgsvcacctrqpmqu-cdawdqardqergje3.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgqkyvfj74arxvsb524ysxsxs6lxxrrxhy4vo6w2ddxfap3f4bdrmoefb75yczza6/providers/Microsoft.Dashboard/grafana/clitestamgmigrateejsr6t","name":"clitestamgmigrateejsr6t","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:21:53.5986247Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:21:53.5986247Z"},"identity":{"principalId":"f08ab6f6-22ba-4d51-897e-d265bacf517a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"11.2.2","endpoint":"https://clitestamgmigrateejsr6t-f2b2fkf8htbfgkdr.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg7enf4synlbfnpqjle45tlbh6i2ewoiqmacalndmdwag46mbvfhj6k3p43vknt6k/providers/Microsoft.Dashboard/grafana/clitestamgbackupkuctvuw","name":"clitestamgbackupkuctvuw","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:22:23.7040315Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:22:23.7040315Z"},"identity":{"principalId":"a626ceb3-f6f7-4b45-8da1-888049a0f7c6","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"11.2.2","endpoint":"https://clitestamgbackupkuctvuw-ffd0d0fucqdedyav.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnp2alrotmqiky6hkyjski7vlwrb44g3std53t3veiobk2vqn3wox54yoexcbtxw/providers/Microsoft.Dashboard/grafana/clitestamgmpeehr32j2k57","name":"clitestamgmpeehr32j2k57","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:36:32.692967Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:36:32.692967Z"},"identity":{"principalId":"e42f62ba-4d84-4287-a6bf-036a3f61c198","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","endpoint":"https://clitestamgmpeehr32j2k57-bshpdrbfdyewe4c8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test","name":"weu-pe-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westeurope","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-23T13:44:35.0549296Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-04T05:16:12.2345476Z"},"identity":{"principalId":"2daed4df-080b-4fdf-9bf2-d79d8c61a323","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.15","endpoint":"https://weu-pe-amg-test-a3dncdhgdveff5fn.weu.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test/privateEndpointConnections/weu-test-pe","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Network/privateEndpoints/weu-test-pe"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgyabx7siilyivfn65vmzmn5spp2pi27t3d3h5jbbrtxopidih3y7udlpjo5fgavu/providers/Microsoft.Dashboard/grafana/clitestamge2einqgluje5g","name":"clitestamge2einqgluje5g","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westeurope","tags":{"foo":"doo"},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-21T20:36:50.7610743Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-21T20:36:50.7610743Z"},"identity":{"principalId":"e2ec1c22-34c4-41da-bd60-76e511e097e2","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","endpoint":"https://clitestamge2einqgluje5g-cjfteph7djevbsgg.weu.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test","name":"private-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-20T06:53:36.9615663Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-02T03:38:02.7241188Z"},"identity":{"principalId":"4a80d00d-88f7-44db-a0a1-8c21e1583b83","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.15","endpoint":"https://private-amg-test-htgag0hfe6cdhabm.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test/privateEndpointConnections/private-amg-test-endpoint","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Network/privateEndpoints/private-amg-test-endpoint"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/amg-data-link-repro","name":"amg-data-link-repro","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-29T20:00:35.9442226Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-15T23:58:40.0994541Z"},"identity":{"principalId":"52f96334-1602-411a-8fbc-214e34b20534","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://amg-data-link-repro-hqe4audnhebda6cq.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Enabled","outboundIPs":["40.71.173.211","13.92.195.189"],"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":true,"host":"test.email.net:587","user":"testuser","fromAddress":"test@test.com","fromName":"AMG","startTLSPolicy":"OpportunisticStartTLS","skipVerify":false}},"grafanaPlugins":{"instana-datasource":{"pluginId":"instana-datasource"},"sni-thruk-datasource":{"pluginId":"sni-thruk-datasource"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/library-panel-sync-test","name":"library-panel-sync-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-15T23:45:04.5141055Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-02T02:45:49.9538275Z"},"identity":{"principalId":"1d9e49f5-2c11-452d-b1c0-2dd914e63cb3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://library-panel-sync-test-hjahf6gcfyb7d4ez.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-240606","name":"alanzhang-eus-240606","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-06-06T21:11:18.5196647Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-02T02:10:46.8295886Z"},"identity":{"principalId":"b5de2d86-50a5-4fb1-b8f3-cf3bfb5117c7","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://alanzhang-eus-240606-csaea7g7efgjama4.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"magnesium-wordcloud-panel":{"pluginId":"magnesium-wordcloud-panel"},"alexanderzobnin-zabbix-app":{"pluginId":"alexanderzobnin-zabbix-app"},"briangann-gauge-panel":{"pluginId":"briangann-gauge-panel"},"isovalent-hubbleprocessancestry-panel":{"pluginId":"isovalent-hubbleprocessancestry-panel"},"grafana-xyzchart-panel":{"pluginId":"grafana-xyzchart-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/aaz-sku-test-amg","name":"aaz-sku-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Essential"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-31T23:34:01.0602941Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-02T01:24:41.4818093Z"},"identity":{"principalId":"2c0a9014-afb2-4326-88c4-6fadf1eb8fc5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://aaz-sku-test-amg-g7c4bvb7bxbchaf2.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-241004","name":"alanzhang-eus-241004","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-04T23:00:02.5750276Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-02T00:01:30.6347213Z"},"identity":{"principalId":"f551afc3-0b14-4003-89db-3fab04bca539","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://alanzhang-eus-241004-dtdeh9cjfxajd5er.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/azcli-test-amg","name":"azcli-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-11-12T07:13:47.0602656Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-01T23:13:25.6922881Z"},"identity":{"principalId":"58b138f0-d282-46ad-9b6b-e526c93d251a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://azcli-test-amg-c5ayckcvc3bqhhat.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/az-dataproxylog-test","name":"az-dataproxylog-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-02-28T00:01:07.4133707Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-01T20:57:26.6094408Z"},"identity":{"principalId":"56a3be98-5ca2-4299-b267-1e3af338744f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://az-dataproxylog-test-ehebd0a7bbaxhcgb.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/alanzhang-eus-250415","name":"alanzhang-eus-250415","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2025-04-16T01:16:55.8801392Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2025-04-16T01:16:55.8801392Z"},"identity":{"principalId":"3f14b24d-8342-40c4-a57d-9820529f681a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"11.2.2+security-01","endpoint":"https://alanzhang-eus-250415-d4gnheaybeg8bdd5.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"11"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-restore-test-2","name":"azcli-restore-test-2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:46:17.9549073Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-04T01:11:17.3144208Z"},"identity":{"principalId":"0fe6d58b-7ee1-4937-ada4-e017555d8b3b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://azcli-restore-test-2-bcbfa3bfd2gpaxdz.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"grafana-redshift-datasource":{"pluginId":"grafana-redshift-datasource"},"grafana-astradb-datasource":{"pluginId":"grafana-astradb-datasource"},"volkovlabs-echarts-panel":{"pluginId":"volkovlabs-echarts-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/azcli-restore-test-3","name":"azcli-restore-test-3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:57:37.7954112Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2025-04-04T01:12:23.7523724Z"},"identity":{"principalId":"058eb720-b993-4ced-a359-c84388424c10","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.15","endpoint":"https://azcli-restore-test-3-f0gcbvhfdddxe7fb.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '30158'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Apr 2025 20:37:01 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-original-request-ids:
      - 497d46da-0787-4724-b3c6-dbc8c0a51088
      - 242f9f72-5213-43a7-84fd-c77d1d95a558
      - 56cb41d3-c394-483a-8906-6508d62513c6
      - d932aac7-24d0-4bac-9558-e784b3b1e6a0
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 10125EC848B24422ADC48675B552EDD8 Ref B: CO6AA3150220047 Ref C: 2025-04-21T20:37:01Z'
    status:
      code: 200
      message: OK
version: 1
