interactions:
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:44:26.4877514Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:44:26.4877514Z"},"identity":{"principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
      cache-control:
      - no-cache
      content-length:
      - '1227'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:44:27 GMT
      etag:
      - '"0700414d-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
      mise-correlation-id:
      - 335aeaa3-618a-4500-8b86-2a6f98b519b0
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 4C8FAC12F9FE4B359B6FE6387F2F09E1 Ref B: CO6AA3150219011 Ref C: 2024-10-21T21:44:25Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2024-10-21T21:44:27.2905565Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:44:27 GMT
      etag:
      - '"050032bb-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: FD9877EED8954A32A3A28F2E987AE50D Ref B: CO6AA3150217039 Ref C: 2024-10-21T21:44:27Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2024-10-21T21:44:27.2905565Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:44:57 GMT
      etag:
      - '"050032bb-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B318F67A2E454374949B55929E9E26D9 Ref B: CO6AA3150218047 Ref C: 2024-10-21T21:44:57Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2024-10-21T21:44:27.2905565Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:45:27 GMT
      etag:
      - '"050032bb-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3E616A9F99934060AF047B920AA50054 Ref B: CO6AA3150218053 Ref C: 2024-10-21T21:45:28Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2024-10-21T21:44:27.2905565Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:45:58 GMT
      etag:
      - '"050032bb-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1D7A4ECEF45845DDBA6C3B657F3DD9A1 Ref B: CO6AA3150217019 Ref C: 2024-10-21T21:45:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Accepted","startTime":"2024-10-21T21:44:27.2905565Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:46:28 GMT
      etag:
      - '"050032bb-0000-0600-0000-6716cb3b0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 6466DD6C3577468589FE1D1465CF337D Ref B: CO6AA3150217053 Ref C: 2024-10-21T21:46:28Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651438675973043&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Bnw2qlCtV63qoIUd-39mTvgvbZWJzzSTqhhbJE6OC98VISfLF8zpiou5fV0cehj-wJ6mSnJQ1kg_i6xElVZz_QgAVbBXxBTyF6u__YkLwKa40ZOF-iO25Ca9Vca9396YUEBYC3-vFsDQ4JIVmJBUqZIBVA4HhTPvU4Qe3uxJ-u7TH1I_3ryqyYp7WR8MYTNssIJm0km1MJ3-62gLtE5zUbNntlBShn1zZ9mdUNzdmoOU3pHYezPwVKHiTDPfiVvIMRHcjPIEn1CSpEidOVTMUQUSmj7HmAxmL3-W0MrZGmZewIMhquZOo46taJeC8_xNU5fs8oyJvAFhHNelpU475w&h=30c1pI0cv5d7ZkL74y3zAz5LzPboGutKs9H8ZLXuMAE
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"75a976ba-b982-4e20-bef0-59d6e00d525e*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Succeeded","startTime":"2024-10-21T21:44:27.2905565Z","endTime":"2024-10-21T21:46:55.0849192Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '591'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:46:58 GMT
      etag:
      - '"05008cbb-0000-0600-0000-6716cbcf0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 045ECDC241EA4591A771FFCF4430B997 Ref B: CO6AA3150218017 Ref C: 2024-10-21T21:46:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:44:26.4877514Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:44:26.4877514Z"},"identity":{"principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:46:58 GMT
      etag:
      - '"31009f9e-0000-0800-0000-6716cbcf0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: B846DF2909E5493F805CA4306404C48B Ref B: CO6AA3150218019 Ref C: 2024-10-21T21:46:59Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.26100-SP0) AZURECLI/2.65.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:46:59 GMT
      odata-version:
      - '4.0'
      request-id:
      - d4906739-10f5-4eea-b083-4bb7977d1627
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"003","RoleInstance":"CO1PEPF00004BE8"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:46:59 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 2495B80A4A9546EBABEEC7C8F2D4CA84 Ref B: CO6AA3150220017 Ref C: 2024-10-21T21:46:59Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:47:00.6449663Z","updatedOn":"2024-10-21T21:47:01.1389808Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000001"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1003'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: DE6CC117FFA949279D2C5A8E8AB53BE7 Ref B: CO6AA3150218025 Ref C: 2024-10-21T21:47:00Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: E31385586EDA436186E833522789C212 Ref B: CO6AA3150217031 Ref C: 2024-10-21T21:47:03Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "15db41bb-3119-41e1-82e2-cfb8c88e314a", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:47:03.3389289Z","updatedOn":"2024-10-21T21:47:03.7659324Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:04 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 31A2F745CE86449AA4DC7C2BB2FC24ED Ref B: CO6AA3150218025 Ref C: 2024-10-21T21:47:03Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:47:06.2059344Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:47:06.2059344Z"},"identity":{"principalId":"76588162-9082-4d9f-803f-0f45624616cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
      cache-control:
      - no-cache
      content-length:
      - '1227'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:07 GMT
      etag:
      - '"0700754d-0000-0600-0000-6716cbdb0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
      mise-correlation-id:
      - 12b30542-a3a1-4d11-a6b6-f48f80cf027b
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: F3D768C5BCBF42F0ABF0BA454ED55EB3 Ref B: CO6AA3150219053 Ref C: 2024-10-21T21:47:05Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2024-10-21T21:47:07.2127218Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:07 GMT
      etag:
      - '"050096bb-0000-0600-0000-6716cbdb0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 311C00E0F8CE49F3A306301A5FB13528 Ref B: CO6AA3150219037 Ref C: 2024-10-21T21:47:07Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2024-10-21T21:47:07.2127218Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:47:37 GMT
      etag:
      - '"050096bb-0000-0600-0000-6716cbdb0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B1103E12316A4238B1B5724E1D98974C Ref B: CO6AA3150220021 Ref C: 2024-10-21T21:47:38Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2024-10-21T21:47:07.2127218Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:48:07 GMT
      etag:
      - '"050096bb-0000-0600-0000-6716cbdb0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E74B603457744023B671694AD7B8CFD5 Ref B: CO6AA3150220019 Ref C: 2024-10-21T21:48:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Accepted","startTime":"2024-10-21T21:47:07.2127218Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:48:38 GMT
      etag:
      - '"050096bb-0000-0600-0000-6716cbdb0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B7F2268EE7BA40C2BE76A5D9659C1326 Ref B: CO6AA3150219049 Ref C: 2024-10-21T21:48:38Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651440275966184&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rv1dfO_YOh49-4TjqUJjeZ5fhkNX6ZIDN7TN4T4KyMOsEfx-zjATMQcw3wtFZD54HdmtYWapCjV7UuIHgsN_3udEnlCtoImRsx7_a-xuMszvPBgry7uGo_8_Uu89WJCU6kJhyf_5ETEVXWCFr07BwjjlstOAdfIlOjHWXz7B-g0KAGs2NEttPtBNBjvGRytEYSxXFTc_V1IJN8xd4hEmZ6o4EdxRTY4Ck1wTpE_KabnVMDa3P8NfM2TcQ_TY44WA1TvhCNnAevkGO5wDC3E0J0UN9JFTbnCoLd1qmkQIzs7AVhLYAgLH8Sd67fLzJaigFBhEsgW7pc2rR9CgOidK3g&h=gmRHr5Z5IzWIYvmQlwlixUT9VLTfD1dI8Do06YfaIFU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"2a3c79e4-c14d-4e66-98b0-862a1decb7c9*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Succeeded","startTime":"2024-10-21T21:47:07.2127218Z","endTime":"2024-10-21T21:49:03.0086702Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '591'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:08 GMT
      etag:
      - '"0500d1bb-0000-0600-0000-6716cc4f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: A7AC08A26D76409D814102E8F164AD3E Ref B: CO6AA3150219027 Ref C: 2024-10-21T21:49:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:47:06.2059344Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:47:06.2059344Z"},"identity":{"principalId":"76588162-9082-4d9f-803f-0f45624616cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:08 GMT
      etag:
      - '"310024a8-0000-0800-0000-6716cc4f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 539A81FD299244D49E54D56BD9B68C8B Ref B: CO6AA3150217009 Ref C: 2024-10-21T21:49:09Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.26100-SP0) AZURECLI/2.65.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:08 GMT
      odata-version:
      - '4.0'
      request-id:
      - d4676317-c143-4053-9b8c-0a35b30dc889
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"003","RoleInstance":"CO1PEPF0000A705"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 5BD57595E19B40938FD2D13D51CE149E Ref B: CO6AA3150219045 Ref C: 2024-10-21T21:49:09Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:49:10.3186718Z","updatedOn":"2024-10-21T21:49:10.8736769Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000003"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1003'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:10 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 93B25D412EC945EDB50EB16982B9E1A1 Ref B: CO6AA3150217027 Ref C: 2024-10-21T21:49:10Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:10 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 61A1E43EF8FE4E329F5B488210E5A183 Ref B: CO6AA3150218037 Ref C: 2024-10-21T21:49:11Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "76588162-9082-4d9f-803f-0f45624616cf", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"76588162-9082-4d9f-803f-0f45624616cf","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:49:11.3599514Z","updatedOn":"2024-10-21T21:49:11.7979552Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:49:13 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 52F0FB5BB3544D4FB2174AB8F54B8EC1 Ref B: CO6AA3150219011 Ref C: 2024-10-21T21:49:11Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"properties": {"apiKey": "Enabled"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana update
      Connection:
      - keep-alive
      Content-Length:
      - '37'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n --service-account
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PATCH
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:44:26.4877514Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:51:14.4114812Z"},"identity":{"principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:14 GMT
      etag:
      - '"0700e34e-0000-0600-0000-6716ccd20000"'
      expires:
      - '-1'
      mise-correlation-id:
      - 4c9d9596-3ee3-42b3-a5fa-2fac80c6ae55
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 6136A85BE351463FA17F3FDA2BC04045 Ref B: CO6AA3150220047 Ref C: 2024-10-21T21:51:13Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana folder create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --title
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:44:26.4877514Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:51:14.4114812Z"},"identity":{"principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:14 GMT
      etag:
      - '"0700e34e-0000-0600-0000-6716ccd20000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: DF9ADF837E874BCF9FD286288511E0F6 Ref B: CO6AA3150218027 Ref C: 2024-10-21T21:51:14Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '24'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-10-21T21:51:17.33123873Z","updatedBy":"example@example.com","updated":"2024-10-21T21:51:17.33123873Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '355'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FZnm6csxwWnH+jxA8nRMWg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:17 GMT
      grafana-trace-id:
      - 52c96c6c4f7d670e298e92c443dc5501
      mise-correlation-id:
      - aa434a5c-c741-4a0f-aa1f-9804aeac931f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547476.271.28.229812|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fe1kvtm790rggc","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ce1kvtjydb4e8d","title":"Azure Monitor"},{"id":14,"uid":"be1kvtlgr3jeob","title":"Geneva"},{"id":12,"uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ce1kw99ho7qwwa","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-LpUefiV5MdfQLEb4HG9ZpQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:17 GMT
      grafana-trace-id:
      - 5659104a8e53e3601094e00d3c088020
      mise-correlation-id:
      - c2bfbf2d-a8cf-4cf8-913f-1a3f189ed007
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547478.759.27.835354|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"access": "proxy", "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "jsonData":
      {"azureAuthType": "msi", "subscriptionId": ""}, "name": "Test Azure Monitor
      Data Source", "type": "grafana-azure-monitor-datasource"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '212'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":5,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VbABne9g+F1EW0SG8pdgPQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:18 GMT
      grafana-trace-id:
      - c4df6f64a9c83ac44c5db99caae8074f
      mise-correlation-id:
      - e662cc10-80fd-4348-9d25-39bbcf3ca96b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547479.163.29.58983|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-eP0Bk+yFfpmF6vDGRhphKA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:19 GMT
      grafana-trace-id:
      - f3eddde93fce15cc60fea92453be7e00
      mise-correlation-id:
      - b16e409b-a876-4d49-9101-b69d4492dd36
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547480.328.29.71472|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fe1kvtm790rggc","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ce1kvtjydb4e8d","title":"Azure Monitor"},{"id":14,"uid":"be1kvtlgr3jeob","title":"Geneva"},{"id":12,"uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ce1kw99ho7qwwa","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FDtXa9nimG7e5VxdQSY7/w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:20 GMT
      grafana-trace-id:
      - 96c60be6b3bdae50c11d3b3b813448f8
      mise-correlation-id:
      - 28983202-4fd2-4aae-8bb6-f973e1a8794c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547481.106.27.3338|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVa"},
      "folderUid": "ce1kw99ho7qwwa", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '127'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ORpCsX4eZ3qX6OykxOHDrA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:20 GMT
      grafana-trace-id:
      - f3799db4ec11a788dc9a5a5f4ed9ea94
      mise-correlation-id:
      - 4980f5ae-be2c-4c25-b09c-2ec85d5b4b63
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547481.314.27.117978|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard2", "panels": [], "uid": "mg2OAlTVb"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '97'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '135'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-z5qeBlsxAp1CdCdv3cHaSw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:20 GMT
      grafana-trace-id:
      - 28fc4bd20947a7a0ff8fa8ced5b1ed03
      mise-correlation-id:
      - 209336be-6b28-4608-af56-2780820b5d70
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547481.798.29.617028|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-upLjObitf7TU/asAITTSnA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:21 GMT
      grafana-trace-id:
      - c660dbb0c7aa7609135197ab73827b1a
      mise-correlation-id:
      - eea1b087-a60e-42fe-a155-595f44e30b0e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547482.316.29.132394|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fe1kvtm790rggc","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ce1kvtjydb4e8d","title":"Azure Monitor"},{"id":14,"uid":"be1kvtlgr3jeob","title":"Geneva"},{"id":12,"uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ce1kw99ho7qwwa","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0TBkfLpsLObqXzVfaEs2jA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:21 GMT
      grafana-trace-id:
      - f499cc238181dcfc2bd81dc520e803aa
      mise-correlation-id:
      - 4ece8941-a1c5-469f-ba35-d96656f7c161
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547482.501.27.204723|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard3", "panels": [], "uid": "mg2OAlTVc"},
      "folderUid": "ce1kw99ho7qwwa", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '128'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":35,"slug":"test-dashboard3","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard3","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-gINrteVLILyzVGZrcVxK2g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:21 GMT
      grafana-trace-id:
      - c5e5feed758535897eb5787cae636237
      mise-correlation-id:
      - bd762902-47c3-4e8f-930a-6b0f039208e4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547482.794.29.124565|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana dashboard create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --definition --title
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:47:06.2059344Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:47:06.2059344Z"},"identity":{"principalId":"76588162-9082-4d9f-803f-0f45624616cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:21 GMT
      etag:
      - '"310024a8-0000-0800-0000-6716cc4f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: B8617B70AEC34EB6BA0053BC75A609B3 Ref B: CO6AA3150218017 Ref C: 2024-10-21T21:51:22Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard2_amg", "panels": [], "uid": "mg2OAlTVb"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '101'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":32,"slug":"test-dashboard2-amg","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard2-amg","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '143'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TIKCpLa9zbwQmm+kaDyNjw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:24 GMT
      grafana-trace-id:
      - a9f4bb48efb8af23480a2a0bbf5c3317
      mise-correlation-id:
      - 56b55fa0-63ba-4fc1-a35b-869dddc5cb72
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547483.743.26.143104|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"name": "clitestamgmigrate000004", "role": "Admin"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '52'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/serviceaccounts
  response:
    body:
      string: '{"id":3,"name":"clitestamgmigrate000004","login":"sa-1-clitestamgmigrate000004","orgId":1,"isDisabled":false,"role":"Admin","tokens":0,"avatarUrl":""}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '150'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nTMsvtN1G3sQBs7szuZpzA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:24 GMT
      grafana-trace-id:
      - 88d60149ecdcdd6db7bfad30566499df
      mise-correlation-id:
      - 575d4335-a4ca-4b60-b8d2-a49ce67a7b46
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547485.44.30.791821|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/serviceaccounts/search
  response:
    body:
      string: '{"totalCount":1,"serviceAccounts":[{"id":3,"name":"clitestamgmigrate000004","login":"sa-1-clitestamgmigrate000004","orgId":1,"isDisabled":false,"role":"Admin","tokens":0,"avatarUrl":"/avatar/1891e2d1893d1e284110e722b544a2b2"}],"page":1,"perPage":1000}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '251'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-P9wVL1Uew8Fz5zI6gGmUDw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:24 GMT
      grafana-trace-id:
      - 3078892c47182b18c80ad391e50fada5
      mise-correlation-id:
      - 2a822944-49dc-498c-ada8-260afc1ca28c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547485.878.28.576849|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"name": "clitestamgmigrate000004_token", "secondsToLive": 86400}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '65'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/serviceaccounts/3/tokens
  response:
    body:
      string: '{"id":1,"name":"clitestamgmigrate000004_token","key":"fakeApiKeyOrServiceAccountToken"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '87'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FjGoR2DRmXKV/XUHhsKztw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:25 GMT
      grafana-trace-id:
      - 46feb61b914f0b7756fd0da0222b8eb0
      mise-correlation-id:
      - dc47fc94-e8dd-442d-b654-ae22dea532fc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547486.108.27.623881|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2-amg","url":"/d/mg2OAlTVb/test-dashboard2-amg","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:24Z","updated":"2024-10-21T21:51:24Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":32,"panels":[],"title":"Test
        Dashboard2_amg","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '739'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lBaJbOk3or4PQ6BlW6Xjuw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:25 GMT
      grafana-trace-id:
      - 467544311cb1c555a81be06ec71b5540
      mise-correlation-id:
      - 466bb1d5-ecdb-4508-aa7a-3e6ee9443fdc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547486.595.30.12323|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:26 GMT
      grafana-trace-id:
      - 12621a110f80373a0b01d583916fe080
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547487.016.28.946579|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:26 GMT
      grafana-trace-id:
      - ac1228cfeb8dbfbfdadfe3f0421b2fa8
      mise-correlation-id:
      - 619a1d5f-0106-49d5-a446-3503e0f8ab5a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547487.211.27.60702|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5kdCVuyl+stbSjfV5ToGPA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:26 GMT
      grafana-trace-id:
      - 69c5815434cd84ed82b618153c487db1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547487.408.28.19284|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VGiYLvI9UPmFrI+/xt+Tqw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:26 GMT
      grafana-trace-id:
      - c2bf4df995b25017e4a98a2a0a547e78
      mise-correlation-id:
      - fdc904dc-dfc6-4f7a-99b4-587df71b83af
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547487.631.30.26516|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 5, "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "orgId": 1, "name":
      "Test Azure Monitor Data Source", "type": "grafana-azure-monitor-datasource",
      "typeName": "Azure Monitor", "typeLogoUrl": "public/app/plugins/datasource/azuremonitor/img/logo.jpg",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureAuthType": "msi", "subscriptionId": ""},
      "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '434'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":5,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-bOl1rFMCOwApo+6UFXi38Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:27 GMT
      grafana-trace-id:
      - aa30282b60018fc7cd8dc3d0c15a21db
      mise-correlation-id:
      - c0e2f894-f11f-4422-99b0-0216205d2c20
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547487.792.27.661300|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"fe1kvtm790rggc","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"be1kvtlgr3jeob","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/be1kvtlgr3jeob/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":32,"uid":"ce1kw99ho7qwwa","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IfveQcxHkx1bZSU2FkgtkQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:27 GMT
      grafana-trace-id:
      - 5fdf05595154139d095f017ceb981e39
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547488.225.27.399054|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc
  response:
    body:
      string: '{"id":28,"uid":"fe1kvtm790rggc","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.99596Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.99596Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '377'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Q5Mcfa2kePY7ZdbaJ+4wEA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:27 GMT
      grafana-trace-id:
      - dd44a87bc08e160e99ce7a6999991cc9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547488.409.27.590388|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kvtm790rggc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kvtm790rggc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZOqA1AwdgWH8sV1eAz7+Pg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:27 GMT
      grafana-trace-id:
      - d02116aa3f9547296d5be414c79d45a9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547488.633.29.901495|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d
  response:
    body:
      string: '{"id":1,"uid":"ce1kvtjydb4e8d","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:23.830765Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:23.830765Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '334'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hl157RbmnSZUk+BBGIXR9Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:27 GMT
      grafana-trace-id:
      - 08d95bf63f160234de30c5aaa5ee2351
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547488.848.30.894810|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","inherited":false},{"folderId":1,"created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mt0evlR08VrXpkTpxs4eHA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:28 GMT
      grafana-trace-id:
      - d3f5a5ceac35d5906ba4acdfbf8ab6cc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547489.105.29.556363|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob
  response:
    body:
      string: '{"id":14,"uid":"be1kvtlgr3jeob","orgId":0,"title":"Geneva","url":"/dashboards/f/be1kvtlgr3jeob/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.613449Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.613449Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '321'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-YNzUQr6oNo8b2CfUJkb4+g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:28 GMT
      grafana-trace-id:
      - e756cb1d8605c0ce8fffe3a5a1f25e78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547489.339.27.134832|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"be1kvtlgr3jeob","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/be1kvtlgr3jeob/geneva","inherited":false},{"folderId":14,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"be1kvtlgr3jeob","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/be1kvtlgr3jeob/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZwE83PSx/g4YY75y3gkLPA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:28 GMT
      grafana-trace-id:
      - 666c07603fc89c977b674466627a1acb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547489.575.30.927928|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa
  response:
    body:
      string: '{"id":12,"uid":"fe1kvtlbhb94wa","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.538616Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.538616Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8e0cxC0HbpsVovC62HKoUg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:28 GMT
      grafana-trace-id:
      - f939cd7ee949030d7f8aee47488ca70b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547489.811.30.69769|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-+FfjjuqFNK8Ns2By4UsuiA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:29 GMT
      grafana-trace-id:
      - 6c0433f9988f387910df10dfe7d86f4b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547490.043.26.994667|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":32,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:17.33526Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:17.33526Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '329'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Yc9bH9NCq80LAAfAnZGBAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:29 GMT
      grafana-trace-id:
      - b0dc8261e2530dfeaa89d76e4d97c8b5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547490.311.30.752318|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa/permissions
  response:
    body:
      string: '[{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-udBcWfOH1zF6+aLQal4yAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:29 GMT
      grafana-trace-id:
      - c2925f4cad3766900d06a88d0e14a593
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547490.539.28.134698|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"ee1kw1kbmwtmof","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"fe1kw1jhlmry8a","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/fe1kw1jhlmry8a/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '910'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zyU0m2LA39mpXitrQS7Rzw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:29 GMT
      grafana-trace-id:
      - 5c49e891091c4161ce2a61405cf5e6df
      mise-correlation-id:
      - 70dadbaa-5367-45f6-8b83-0c548d774c2c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547490.781.26.907291|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ee1kw1kbmwtmof
  response:
    body:
      string: '{"id":28,"uid":"ee1kw1kbmwtmof","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:53.489694Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:53.489694Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '379'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fJWK5HMsJS20UJMCqBWgXQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:30 GMT
      grafana-trace-id:
      - ab6afb85c593c7d5f80f50d5813fac79
      mise-correlation-id:
      - b25e8570-379f-43b8-8b25-5f8c8b3fa872
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547491.084.28.527257|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ee1kw1kbmwtmof/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ee1kw1kbmwtmof","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ee1kw1kbmwtmof","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5GqdOapEP+orn+uHPcXM+g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:30 GMT
      grafana-trace-id:
      - d97282e8b4807352ca69295ed5f3558a
      mise-correlation-id:
      - b387063a-6780-4712-8984-5b0bf7b9661f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547491.275.28.910072|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kw1i0jafi8a
  response:
    body:
      string: '{"id":1,"uid":"be1kw1i0jafi8a","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:52.294016Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:52Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '327'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-XyYEpJUeUEv4w9z6t0k9hw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:30 GMT
      grafana-trace-id:
      - f2621346aef9dba9818f21a420294077
      mise-correlation-id:
      - 5c2b9ab7-2221-4001-a5e9-1772b26c5137
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547491.659.28.125346|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kw1i0jafi8a/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","inherited":false},{"folderId":1,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FoU9dZBf+3znK5nn/hCjjg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:30 GMT
      grafana-trace-id:
      - 01144d56128c267902652b5c3c4ae974
      mise-correlation-id:
      - 8c4e4179-85c6-4f7d-9903-50447061b73b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547491.874.29.73028|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jhlmry8a
  response:
    body:
      string: '{"id":14,"uid":"fe1kw1jhlmry8a","orgId":0,"title":"Geneva","url":"/dashboards/f/fe1kw1jhlmry8a/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:53.05714Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:53.05714Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '319'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Qsr9AQx66qNlOss2FBRFyQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:31 GMT
      grafana-trace-id:
      - eed5f3e1a95c1dd9f1ec28379375be21
      mise-correlation-id:
      - 2dd2d7bf-0f20-4949-b1ca-82f3ceebe62f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547492.054.29.435990|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jhlmry8a/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kw1jhlmry8a","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jhlmry8a/geneva","inherited":false},{"folderId":14,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kw1jhlmry8a","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jhlmry8a/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wX1gCWGfJM0I3Avn1fPrmw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:31 GMT
      grafana-trace-id:
      - 6d7cfb48305be3d8014a0960eacfac01
      mise-correlation-id:
      - db853326-4184-48d8-bb9b-9acb907d55f4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547492.285.26.779040|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jbrvawwc
  response:
    body:
      string: '{"id":12,"uid":"fe1kw1jbrvawwc","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:52.972514Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:52.972514Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VsdWw9OP1JxZ0nvN8Z1Rew';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:31 GMT
      grafana-trace-id:
      - 8afb80649c66fcfe5c9b3d7e2db25d61
      mise-correlation-id:
      - ebeb4927-9e4b-4c46-9e33-71a5b0619ab6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547492.502.29.200525|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jbrvawwc/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tDfSHzXeTlH83PU87Yn+XQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:31 GMT
      grafana-trace-id:
      - 1f435ef3fa75f5805a7e82ef95b68996
      mise-correlation-id:
      - 08887850-8892-46dc-a0b7-036cce79628e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547492.718.27.280477|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-M0sOCm67skK/z+m4WNuWOg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:31 GMT
      grafana-trace-id:
      - 16ea86d70e865139ec882fbef10c7c47
      mise-correlation-id:
      - 69af79b3-d78d-4209-a64d-42ccd8de6a10
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547492.938.29.358990|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 28, "uid": "fe1kvtm790rggc", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T21:46:24.99596Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T21:46:24.99596Z", "version": 1, "overwrite":
      false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '426'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vhBBaoIN9kSQk7iEOearpg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:32 GMT
      grafana-trace-id:
      - eda5f39e71b5629f37e4841e52b158cb
      mise-correlation-id:
      - 62e2d0ae-3391-4b5e-a24e-0c1e68f5937c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547493.166.28.814474|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FmU3FVIX6hsInokKvfamjQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:32 GMT
      grafana-trace-id:
      - d9c84348920d2eb7ca2f2cc1c792559a
      mise-correlation-id:
      - e9396b24-04f7-44ef-b1ad-959cedabd113
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547493.415.29.70500|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 1, "uid": "ce1kvtjydb4e8d", "orgId": 0, "title": "Azure Monitor",
      "url": "/dashboards/f/ce1kvtjydb4e8d/azure-monitor", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T21:46:23.830765Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T21:46:23.830765Z", "version": 1, "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '383'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-l5EiuyNV0NmUXJWS7xCNwg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:32 GMT
      grafana-trace-id:
      - 7344a60cd86a0ff3389198df76e0c597
      mise-correlation-id:
      - b655cc51-5718-489b-bf9e-be5e0adc263f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547493.625.29.961356|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BalFpNJyuQiMDlL7B48MSg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:32 GMT
      grafana-trace-id:
      - f5a7d35a0d619858fe621386e5632e52
      mise-correlation-id:
      - 8d5fe7fb-7dfd-4b24-b147-e70ab62f318a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547493.843.29.186020|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 14, "uid": "be1kvtlgr3jeob", "orgId": 0, "title": "Geneva", "url":
      "/dashboards/f/be1kvtlgr3jeob/geneva", "hasAcl": false, "canSave": true, "canEdit":
      true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous", "created":
      "2024-10-21T21:46:24.613449Z", "updatedBy": "Anonymous", "updated": "2024-10-21T21:46:24.613449Z",
      "version": 1, "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '370'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ANxAcPD3miud7BzfPLebhQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:33 GMT
      grafana-trace-id:
      - 029b453a25db4d787aa55cb36fb608ff
      mise-correlation-id:
      - 48014fc3-4ace-4388-a6bd-76564e3363ac
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547494.057.30.915227|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1vavRr5HuaTNIz/ltLbasQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:33 GMT
      grafana-trace-id:
      - 0993353765a6fc8cb30ec6f564c85df3
      mise-correlation-id:
      - 22c4f2e3-c478-420a-9694-ca92ce2d2048
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547494.292.26.784976|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 12, "uid": "fe1kvtlbhb94wa", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T21:46:24.538616Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T21:46:24.538616Z", "version": 1, "overwrite":
      false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '414'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BMdAY/b+S8rLg9Hbpt6sOQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:33 GMT
      grafana-trace-id:
      - 0d7d28d84d421e555acc158e74035438
      mise-correlation-id:
      - 23877d37-5034-478b-929a-edc14ae7697a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547494.49.28.413179|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rBUljkMSAc/xIHTUsubtpg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:33 GMT
      grafana-trace-id:
      - 73f7f31cd48a7e1a8b969aa0166f043d
      mise-correlation-id:
      - 310a679f-e644-44e7-ba45-f8fb74d62c43
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547494.652.30.785393|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 32, "uid": "ce1kw99ho7qwwa", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ce1kw99ho7qwwa/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T21:51:17.33526Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T21:51:17.33526Z", "version": 1, "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '378'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-10-21T21:51:33.860429879Z","updatedBy":"example@example.com","updated":"2024-10-21T21:51:33.860429979Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dPWi0/YJitK6zr8fWUKOrQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:33 GMT
      grafana-trace-id:
      - f342953af5ab664c981dc4967e53b606
      mise-correlation-id:
      - eb54d1de-2eba-4e5c-9acb-da7e410e0738
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547494.835.28.754543|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":20,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":21,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":15,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":10,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":3,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":4,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":9,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":11,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":22,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"fe1kvtlbhb94wa","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/fe1kvtlbhb94wa/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":23,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":27,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":16,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":24,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":26,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":19,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":25,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":33,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/Test Folder","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":35,"uid":"mg2OAlTVc","title":"Test
        Dashboard3","uri":"db/test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/Test Folder","sortMeta":0},{"id":18,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10523'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jE22Bap27biKNHQcXlvBCw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:34 GMT
      grafana-trace-id:
      - 84310799fb8a546a82eb3b03690c3d17
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.065.29.732880|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"be1kvtlgr3jeob\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/be1kvtlgr3jeob/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":20,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Guw9uWcqKJkJCL0CYUNZDA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:34 GMT
      grafana-trace-id:
      - c6c60a8920e08223587feacc1c2d361b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.241.30.221895|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":21,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-i9ajylrZwUGq70KUCZ8RnQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:34 GMT
      grafana-trace-id:
      - 26e0fc057a862380063c26babac2ab9e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.434.29.599560|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":15,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-somiaNlNpfDD4qj8uno2tA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:34 GMT
      grafana-trace-id:
      - 919663855ef9459c64875db139c28e67
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.615.29.479990|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":10,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18654'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-97FTeQH9Pv4LVggaDivYag';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:34 GMT
      grafana-trace-id:
      - f916dacb22f17c6d8b73b3c78a9209a4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.782.30.59106|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/0eesJX/nO+XxjUyIKLg3w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:35 GMT
      grafana-trace-id:
      - dd3ae33ca7916e341e0f8949e9d910f5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547495.972.28.222498|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":2,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-L86WqJVU0UHvDKDl87K73Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:35 GMT
      grafana-trace-id:
      - 043c9eba9fcdfbc5d841cb29953dbc53
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547496.174.28.52073|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":8,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-H+Qgaa6yh3pBIZJD4vDGkQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:35 GMT
      grafana-trace-id:
      - 668009d91d97033f92d41fa6b8fbae62
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547496.347.28.366445|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":3,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-R0P8GFdOJXo2MMKLeM353g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:35 GMT
      grafana-trace-id:
      - 7784df20e41821df1a89a5407548ca81
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547496.545.27.629319|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"ce1kvtjydb4e8d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/ce1kvtjydb4e8d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":4,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37722'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-T7obX11mA9uEcSh6tkyZKQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:35 GMT
      grafana-trace-id:
      - 909c16d9e2e29fba628b099b864ff333
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547496.802.28.307126|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"ce1kvtjydb4e8d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/ce1kvtjydb4e8d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":9,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123789'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BEbh7sbE1+Py5TUDCeoVIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:36 GMT
      grafana-trace-id:
      - 448f87a365878320c2285d366f376dfa
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547496.986.27.912323|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BEJxOxpftPxCiUoZJowr0w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:36 GMT
      grafana-trace-id:
      - ffae73bfd5c629ae56ee01399de40989
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547497.208.29.68811|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":11,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117798'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-512rz88o5tnHo0uRtO4uog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:36 GMT
      grafana-trace-id:
      - 2b30de69bfbf556322ad3b4afad12538
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547497.403.29.788492|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":7,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8ztmI39c4McP8+pXQ8SK7A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:36 GMT
      grafana-trace-id:
      - a3b2664723f70049ef1d000296f70ef2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547497.63.28.837499|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":22,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fZeiA/hlAM4GnwZvfndxxA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:36 GMT
      grafana-trace-id:
      - 5c0d7b95f295145ed5587979381c7582
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547497.864.28.797341|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"fe1kvtlbhb94wa\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tOyjU8aSJ5aSuXdbFe7NqA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:37 GMT
      grafana-trace-id:
      - 4dd04b8d253ff832fc2f62282be53904
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547498.087.30.168541|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:25Z\",\"updated\":\"2024-10-21T21:46:25Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"fe1kvtm790rggc\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IBw4tNI2e2xyF18yiHPw1Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:37 GMT
      grafana-trace-id:
      - 00b7d9eea6e9fd9d7a95c3fdf3fd1317
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547498.308.29.779131|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":23,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MlUhJ+SyOsNefmWVfF4V8w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:37 GMT
      grafana-trace-id:
      - e5dd14ee013835d305cb979edc87efc6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547498.565.27.479274|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":27,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PmtEADPrNTFaOWky4pu+oA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:37 GMT
      grafana-trace-id:
      - f16b8670a0e4ca7bf1d9101afe6febde
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547498.803.29.442043|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-La1YD3mZpIDrJ3EUprcauA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:38 GMT
      grafana-trace-id:
      - 8752f1e9d77745ecb7e98a7f2b7b7d6b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547499.003.30.101370|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Bh7Fxu0pd7BIpbt779Zkxw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:38 GMT
      grafana-trace-id:
      - 14b010bf99766e0c51911c8e26f208af
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547499.203.26.631548|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ckshglK3bHowf5HCIo18YA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:38 GMT
      grafana-trace-id:
      - 6a80785b2a6e008672529c00a250c928
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547499.433.29.449416|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-NsgpV5xBcs06Dak/p9Hyhg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:38 GMT
      grafana-trace-id:
      - 8accb154f4d2ad16f89673e55fbda47e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547499.62.29.288405|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9t5Tsjqq400MH6oqF2rx2w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:38 GMT
      grafana-trace-id:
      - 30695823557310980b9a3533c2b3cdaa
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547499.827.27.164151|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"be1kvtlgr3jeob\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/be1kvtlgr3jeob/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":26,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-x9n7iiV6/ioZ2ut9R8HIwA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:39 GMT
      grafana-trace-id:
      - 40faf4d836b4d17aede3b6d540199b84
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547500.058.26.387801|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":19,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WsbH1ye3nvPz7RrQW7fKgg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:39 GMT
      grafana-trace-id:
      - 68aa762bd88715cf70d805c8b358e6e8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547500.288.30.20988|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":25,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-v1BHtGJ8iFGWsRo5Gw5lKg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:39 GMT
      grafana-trace-id:
      - 8da42c0c24075e962ff5af66b11d6832
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547500.499.27.306260|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:20Z","updated":"2024-10-21T21:51:20Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OaWyLk3U2KRrFGNP0+sKIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:39 GMT
      grafana-trace-id:
      - 8ccaa9e49d3f424a2cc21b5056055b9b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547500.747.27.478156|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:20Z","updated":"2024-10-21T21:51:20Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '727'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fTMwvOu1nnMaPI1HZNUBIg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:39 GMT
      grafana-trace-id:
      - fd8eacfe17e77aa73ab1a72c5d6ee91a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547500.954.27.148961|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:21Z","updated":"2024-10-21T21:51:21Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard3","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-seNpDCrUaOc5MYR+uyIFAw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:40 GMT
      grafana-trace-id:
      - 40c1829c19a513f20240b31681868bd8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547501.161.29.111187|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7DPLXHD/B0lW8BEmW/vd2A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:40 GMT
      grafana-trace-id:
      - 17dd149a50130cbee56f2706727ab98a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547501.386.29.426651|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Tmq4piLCv6CCQsK56IebIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:40 GMT
      grafana-trace-id:
      - 6cd271825e0eb5eb6f8a08d587e9e0ed
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547501.622.28.231916|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-No5Qy69bXEHDn3DN1u3ysA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:40 GMT
      grafana-trace-id:
      - 132a04a2222f02060df23dbf11f36f7b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547501.821.27.438357|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"ed9ec5a498368aea8472da35a2c6cf5d"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-eY+yQtp3GCKpnhnkqYrWEg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:41 GMT
      grafana-trace-id:
      - ed9ec5a498368aea8472da35a2c6cf5d
      mise-correlation-id:
      - c48ec847-eb6f-4c45-86ca-f99eb51a14e9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547502.049.29.703083|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:33.865377Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-m17Zl7KOy5CmkYRRgto2PQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:41 GMT
      grafana-trace-id:
      - a013ceb3e70f864ec60c5b10b453e537
      mise-correlation-id:
      - 369ec4f3-d8f7-4198-9f9e-ccd8b5f0b92f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547502.225.30.113421|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 33, "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pfn+xBiT6V3HzC4n+0tZcg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:41 GMT
      grafana-trace-id:
      - 31485d4c61c8b1e5d97b5c22d7f02729
      mise-correlation-id:
      - aca9a542-4586-4bcd-8192-9308c01128b2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547502.402.28.963818|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2-amg","url":"/d/mg2OAlTVb/test-dashboard2-amg","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:24Z","updated":"2024-10-21T21:51:24Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":32,"panels":[],"title":"Test
        Dashboard2_amg","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '739'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xmwkGZlZNj9O5HGTyz0UDw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:41 GMT
      grafana-trace-id:
      - f9d489d379dbfa95cf274ce57ead2e7b
      mise-correlation-id:
      - 8a03edd6-4eed-40aa-985b-c6b9ac69d080
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547502.63.28.274426|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"df49959d6076614324b84601542a1910"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-iB0O7MOXP0cyaMSmInHI8A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:41 GMT
      grafana-trace-id:
      - df49959d6076614324b84601542a1910
      mise-correlation-id:
      - 41ec7d8e-6a91-44be-92fb-a097f49d5146
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547502.84.30.402539|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:33.865377Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5QzN2AzoScPDys45HKa0Ow';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:42 GMT
      grafana-trace-id:
      - d73f0c4c01aa23e77a1b16190d43122a
      mise-correlation-id:
      - 0eb00db1-60bb-4f4d-aa52-9b93a830ced3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547503.032.26.483016|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard3", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 33, "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '139'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":35,"slug":"test-dashboard3","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard3","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-kJbmenQzLLInj1ArraMRSw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:42 GMT
      grafana-trace-id:
      - 51c49af6acd554ba4230729f2db8fafb
      mise-correlation-id:
      - ceedca37-25f7-4acb-9cde-de13e929a6aa
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547503.226.30.775437|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboard/snapshots
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8I8IJHy7DsABxXhJd/8NOA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:42 GMT
      grafana-trace-id:
      - 21de3e554e95f21f17ab469b50dd6cd9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547503.451.27.139576|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2-amg","url":"/d/mg2OAlTVb/test-dashboard2-amg","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:24Z","updated":"2024-10-21T21:51:24Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":32,"panels":[],"title":"Test
        Dashboard2_amg","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '739'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0oixEuFnNLPRVpo1tMYbcw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:42 GMT
      grafana-trace-id:
      - a9f3216742bf9d96413f88571ee0d9fd
      mise-correlation-id:
      - 13cccb26-ebf3-4f89-98e5-1c5f2710b57c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547503.906.28.528318|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:43 GMT
      grafana-trace-id:
      - e4060a2778855bde068bb759567aebf6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547504.393.29.810133|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:43 GMT
      grafana-trace-id:
      - b5115674f11e6a7c2ceaff6958eedf33
      mise-correlation-id:
      - 2c2f1800-ba50-4d2e-af95-f275f61c1dee
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547504.591.28.743393|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vlIJ+sFqziijes7VFHiVbQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:43 GMT
      grafana-trace-id:
      - 0c1a2af826c8fdef7b562d02405611d3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547504.761.30.684114|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-skMQF6UmFU7cstxowDDt1g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:43 GMT
      grafana-trace-id:
      - a07ed15c4d0e245516f23cec30624392
      mise-correlation-id:
      - 0a3c96ef-2ab5-4183-aa66-2b3433669cf8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547504.915.27.790697|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"fe1kvtm790rggc","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"be1kvtlgr3jeob","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/be1kvtlgr3jeob/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":32,"uid":"ce1kw99ho7qwwa","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-poeON3WVrYNvF8lr5kwmpQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:44 GMT
      grafana-trace-id:
      - f964a34e752314b95d8a6528d65c284d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.101.26.619100|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc
  response:
    body:
      string: '{"id":28,"uid":"fe1kvtm790rggc","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.99596Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.99596Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '377'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OBNUDxfD+R5CpFXmlXw9eA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:44 GMT
      grafana-trace-id:
      - f88923c3ae252c5a3a40eb8a4003a3ab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.282.30.9471|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kvtm790rggc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kvtm790rggc","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xnYgYslv8GhVACvUjSVylw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:44 GMT
      grafana-trace-id:
      - 54654e7c5d46491ceee81dcd0e5f6244
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.447.30.707725|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d
  response:
    body:
      string: '{"id":1,"uid":"ce1kvtjydb4e8d","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:23.830765Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:23.830765Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '334'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PZvH6MWluso/DfqaqzPfVg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:44 GMT
      grafana-trace-id:
      - 2931f338a416133a52d9af8d96fee242
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.632.26.610348|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","inherited":false},{"folderId":1,"created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ce1kvtjydb4e8d","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-cMYPZkxs+thjG5YZZudsVw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:44 GMT
      grafana-trace-id:
      - 3d11a76cb54be0b8b654c39c22baf962
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.813.27.749262|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob
  response:
    body:
      string: '{"id":14,"uid":"be1kvtlgr3jeob","orgId":0,"title":"Geneva","url":"/dashboards/f/be1kvtlgr3jeob/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.613449Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.613449Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '321'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3grj5vI6N2YSs/DoAorX0w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - 8f65d85586580e2dc9eabdca6e356807
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547505.989.29.259759|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"be1kvtlgr3jeob","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/be1kvtlgr3jeob/geneva","inherited":false},{"folderId":14,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"be1kvtlgr3jeob","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/be1kvtlgr3jeob/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6xnAIHKCv87wLo44Oob0DA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - a3c4614b6fcecd48c7eda5ae472827de
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547506.173.29.546539|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa
  response:
    body:
      string: '{"id":12,"uid":"fe1kvtlbhb94wa","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:46:24.538616Z","updatedBy":"Anonymous","updated":"2024-10-21T21:46:24.538616Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-a6rK+fPeeSeRWViG0kmDjA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - e240d1ce8722648a3673c3050f9358c5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547506.368.28.406765|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kvtlbhb94wa","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IWOO6CuzsF0LVlJ5cIqGZw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - d72c388a46182824978f1e96e90e243e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547506.533.30.148160|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":32,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:17.33526Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:17.33526Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '329'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-shSBtuxAdrIhNmPWyDMELQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - 9d8012c6410d9d08b191eae942d7216f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547506.714.28.388948|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa/permissions
  response:
    body:
      string: '[{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T21:51:17Z","updated":"2024-10-21T21:51:17Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QKfdz/fvxX3sts10Ia5yYg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:45 GMT
      grafana-trace-id:
      - 1fd2f11d578a8b22c284d3b8b7058e98
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547506.894.30.312274|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"ee1kw1kbmwtmof","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"fe1kw1jhlmry8a","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/fe1kw1jhlmry8a/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":33,"uid":"ce1kw99ho7qwwa","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mIV91FgOnTLs6M+ZNBdv4Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - e93cb69be57651a3bb5836e8c8bf40d4
      mise-correlation-id:
      - 21522210-2c91-42d7-b84b-0a51c89a240d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.076.27.652731|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ee1kw1kbmwtmof
  response:
    body:
      string: '{"id":28,"uid":"ee1kw1kbmwtmof","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:53.489694Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:53.489694Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '379'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-U+qRUnOqcl7Lxs63nuZwuQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - c65bb0b4fe261ea3a35b29c6d9299a95
      mise-correlation-id:
      - 12182fbb-51df-48c1-b5fb-64d42ae29102
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.249.27.275328|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ee1kw1kbmwtmof/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ee1kw1kbmwtmof","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ee1kw1kbmwtmof","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/ee1kw1kbmwtmof/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-NY0wkXb7N3g/63h5Sw+3Yg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - 9a1f373919358ab908f92abb184e532d
      mise-correlation-id:
      - dbd853fa-3f03-482d-8bf3-8ff2130abca8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.439.27.352617|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kw1i0jafi8a
  response:
    body:
      string: '{"id":1,"uid":"be1kw1i0jafi8a","orgId":0,"title":"Azure Monitor","url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:52.294016Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:52Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '327'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-r7z1qqhcxmGAzcx6GwBElg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - 3ab49786b1ee740d5d1194e9ecdf633d
      mise-correlation-id:
      - 3758e96f-faf9-4499-89e9-ef2c23863da2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.616.30.529766|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kw1i0jafi8a/permissions
  response:
    body:
      string: '[{"folderId":1,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","inherited":false},{"folderId":1,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"be1kw1i0jafi8a","title":"Azure
        Monitor","slug":"","isFolder":true,"url":"/dashboards/f/be1kw1i0jafi8a/azure-monitor","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '787'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-qLXNWXhnHrQoWHjjoBUBSA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - 4cef41ddad1b526903b84e21994ba461
      mise-correlation-id:
      - bdca25d8-6758-4976-87b7-838e4e1d7fb0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.777.28.875184|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jhlmry8a
  response:
    body:
      string: '{"id":14,"uid":"fe1kw1jhlmry8a","orgId":0,"title":"Geneva","url":"/dashboards/f/fe1kw1jhlmry8a/geneva","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:53.05714Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:53.05714Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '319'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WDvmD3XRcRqNjKhy/Awy9w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:46 GMT
      grafana-trace-id:
      - 0508569629bf7440c189479331be9524
      mise-correlation-id:
      - 7dec9e3b-c7e6-48e4-871c-58f7e7a91d11
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547507.965.27.389966|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jhlmry8a/permissions
  response:
    body:
      string: '[{"folderId":14,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kw1jhlmry8a","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jhlmry8a/geneva","inherited":false},{"folderId":14,"created":"2024-10-21T21:48:53Z","updated":"2024-10-21T21:48:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kw1jhlmry8a","title":"Geneva","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jhlmry8a/geneva","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '761'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PYBUEVMX3BQj0floToFaIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:47 GMT
      grafana-trace-id:
      - b68d989d65a96eb85d702cc647c2b4e3
      mise-correlation-id:
      - eb507411-649e-4e8d-bfdb-93dc3af8b337
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547508.124.30.663543|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jbrvawwc
  response:
    body:
      string: '{"id":12,"uid":"fe1kw1jbrvawwc","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:48:52.972514Z","updatedBy":"Anonymous","updated":"2024-10-21T21:48:52.972514Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dEzTgQ3KUAmi9cInfIuQEA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:47 GMT
      grafana-trace-id:
      - e140bba28f03b5e156a6d0f61dfcf11e
      mise-correlation-id:
      - e9d71316-617b-4621-bce5-7b9750aaf057
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547508.326.26.346064|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kw1jbrvawwc/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-10-21T21:48:52Z","updated":"2024-10-21T21:48:52Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fe1kw1jbrvawwc","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/fe1kw1jbrvawwc/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MOGltFRRpATK3Mn0D0KqnA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:47 GMT
      grafana-trace-id:
      - 9a90c197f28ae36c8af89d19b581a11c
      mise-correlation-id:
      - d05b2c3b-e5a4-4ffa-a924-2e38864ed7c3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547508.511.30.725005|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:33.865377Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-v11JzpBxt45U8pwQZ612dA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:47 GMT
      grafana-trace-id:
      - fae190a3f3ab5956c8fe1418ac704013
      mise-correlation-id:
      - e9e06185-ca97-4c4c-be29-9f84eab71493
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547508.702.27.454212|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa/permissions
  response:
    body:
      string: '[{"folderId":33,"created":"2024-10-21T21:51:33Z","updated":"2024-10-21T21:51:33Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":33,"created":"2024-10-21T21:51:33Z","updated":"2024-10-21T21:51:33Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false},{"folderId":33,"created":"2024-10-21T21:51:33Z","updated":"2024-10-21T21:51:33Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ce1kw99ho7qwwa","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-DpL+iesaGAtwvUKs2yFUPg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:47 GMT
      grafana-trace-id:
      - f635635b0ef6109b935c705acfa49a4c
      mise-correlation-id:
      - eb13510e-2d36-4e4c-8e04-7d807b85959c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547508.921.26.744786|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kvtm790rggc
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-oIawwawozuh3hOZIWcWBvQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - 4fb246d648e6a96b13f41b19b81eada8
      mise-correlation-id:
      - 65b7b950-c5fb-4229-b730-f9c8b7af015e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.129.28.651027|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 28, "uid": "fe1kvtm790rggc", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T21:46:24.99596Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T21:46:24.99596Z", "version": 1, "overwrite":
      true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '425'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-cci5SQK9T8Edd74P0qbHiQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - 76600566b3cd27929ba3d20a475219bb
      mise-correlation-id:
      - 5b5be3d1-b60a-4fe6-a24d-ac436c675e8b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.284.29.368363|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kvtjydb4e8d
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MFfk11cLN5qsIXNw8ur7RA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - 0c35464d4eccf94284c563d8bd883c30
      mise-correlation-id:
      - 4edc0ffc-2447-4fc9-8c76-a15306a5fb07
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.453.27.114665|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 1, "uid": "ce1kvtjydb4e8d", "orgId": 0, "title": "Azure Monitor",
      "url": "/dashboards/f/ce1kvtjydb4e8d/azure-monitor", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T21:46:23.830765Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T21:46:23.830765Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '382'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZKq4ZYyosRRRo3nO3kctUA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - 46d61ba6eac7eddf852a215e61cfbc4e
      mise-correlation-id:
      - 7d02960f-c1e2-44cf-a83f-d2e07028e399
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.63.28.827804|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/be1kvtlgr3jeob
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FMqeUFAqUz5sGIhJu3okMg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - a47f4e2d4be4a453bd06e17b531b234c
      mise-correlation-id:
      - f458334a-b530-4f4a-8b0f-0768f2318be8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.777.27.746065|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 14, "uid": "be1kvtlgr3jeob", "orgId": 0, "title": "Geneva", "url":
      "/dashboards/f/be1kvtlgr3jeob/geneva", "hasAcl": false, "canSave": true, "canEdit":
      true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous", "created":
      "2024-10-21T21:46:24.613449Z", "updatedBy": "Anonymous", "updated": "2024-10-21T21:46:24.613449Z",
      "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '369'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-szcjVqKqw0Lp8iEUDJvkKg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:48 GMT
      grafana-trace-id:
      - ce0c8d4e524a793df352f6aec308709a
      mise-correlation-id:
      - 48a54f0f-18f6-47a3-9a01-a72fc691829a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547509.951.29.859356|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/fe1kvtlbhb94wa
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-CFO6c+rXQ0i9v4jHJ8fiPA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:49 GMT
      grafana-trace-id:
      - 372712719b07c4f844ef4df1063f0fdd
      mise-correlation-id:
      - 515b1498-4832-4dc2-875a-3538411046e6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.136.28.861096|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"id": 12, "uid": "fe1kvtlbhb94wa", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T21:46:24.538616Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T21:46:24.538616Z", "version": 1, "overwrite":
      true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '413'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"a folder with the same name already exists in the current
        location"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '80'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZnruEZVl6yDCfpYGycAWXA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:49 GMT
      grafana-trace-id:
      - f7e368421cc53af3f9dc74e6a593ea75
      mise-correlation-id:
      - 1a4e940e-4d57-406f-a38f-06debd9173d8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.292.29.725813|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:33.865377Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vMiUxgryvhfRdkMNI+ntpg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:49 GMT
      grafana-trace-id:
      - 1d5b1344ee3936133a21f80824e8dba0
      mise-correlation-id:
      - 29b31b44-ee6d-4013-b52c-6cb3816b1418
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.451.29.706559|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 32, "uid": "ce1kw99ho7qwwa", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ce1kw99ho7qwwa/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T21:51:17.33526Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T21:51:17.33526Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '377'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-DxpC2AN0abObwOiOK7HNnQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:49 GMT
      grafana-trace-id:
      - b709ac7b18e1b4214fe59c5c50c2910d
      mise-correlation-id:
      - b913b150-306d-4f6b-9419-b27e25a22305
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.623.30.135819|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 32, "uid": "ce1kw99ho7qwwa", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ce1kw99ho7qwwa/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T21:51:17.33526Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T21:51:17.33526Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '377'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:49.833001Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-N/dnITS2FNcbhwC3nsu9dQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:49 GMT
      grafana-trace-id:
      - 7add3dc32a3bf3b8264fda5074bf692c
      mise-correlation-id:
      - 3336dcf6-7f97-45f6-8dda-ffe6a8252954
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.787.30.947550|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":20,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":21,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":15,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":10,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":3,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":4,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":9,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":11,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/Azure Monitor","sortMeta":0},{"id":22,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"fe1kvtlbhb94wa","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/fe1kvtlbhb94wa/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":23,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":27,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":16,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":24,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":26,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":19,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":25,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0},{"id":33,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/Test Folder","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":35,"uid":"mg2OAlTVc","title":"Test
        Dashboard3","uri":"db/test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/Test Folder","sortMeta":0},{"id":18,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10523'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1o3olNFewl9JgQ2eqWiARA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - 48a93a23fc4e7a2618824c3f3919a5fa
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547510.984.29.980201|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"be1kvtlgr3jeob\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/be1kvtlgr3jeob/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":20,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hJpWr5jrajptI1ixTy4m2w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - fd1658a2008e41f5cec82bd927bb0541
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547511.195.30.77151|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":21,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-iKw4DQLbWsr0g9Sm2JksNQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - 31d1ee42b0fa9a6e4be339d4e5d9ed62
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547511.395.28.796017|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":15,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IvjiMlJ+ifM8TYABP+VLvw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - 3e13f4be7011e9060dbb47658c6fd94a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547511.57.26.212145|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":10,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18654'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-G2oEv6q64qf4l9r0zB1Fyw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - 2e86494b1c7a936cce02b2a2555f1b3a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547511.743.27.58875|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-sv/vQAv3HPFX8TzTTUJNkg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:50 GMT
      grafana-trace-id:
      - ac95a50b09240b1f1878df6b179bcce4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547511.906.27.251029|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:23Z","updated":"2024-10-21T21:46:23Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":2,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1Dta8wotliMZdnWMQn12pw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:51 GMT
      grafana-trace-id:
      - d15bc56b4d8c29041f359b59b355c73a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547512.093.27.235801|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":8,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-X1oIrCUg+fFZMAPC1C4A7g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:51 GMT
      grafana-trace-id:
      - e5617eda66ec0686a4e4d988147b7491
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547512.277.30.807834|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":3,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lmqYzX+3oKTtWvNuYMG+zA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:51 GMT
      grafana-trace-id:
      - 3e2f534dcab47faddc8e2143cb7ea122
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547512.488.28.909602|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"ce1kvtjydb4e8d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/ce1kvtjydb4e8d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":4,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37722'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-auOai9EvUZpF9D/j33uRAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:51 GMT
      grafana-trace-id:
      - 6cdc38ba5d34dd1943cc5df4f8e9a482
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547512.75.29.372031|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"ce1kvtjydb4e8d\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/ce1kvtjydb4e8d/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":9,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123789'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-bHcSL30ekhuW62SOF1P2IA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:51 GMT
      grafana-trace-id:
      - f3d0d5e62febef29ea634abfcdbaa8dd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547512.954.28.987474|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lgpyQldDxp//2eVhT11rCg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:52 GMT
      grafana-trace-id:
      - f570dd0e6c6383180e607534cdc75bcc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547513.2.30.60342|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":11,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117798'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-l6rSj8sotjrG+AzT92qg/w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:52 GMT
      grafana-trace-id:
      - 9f17570ee6e3b729c6ec8dbd13d583d0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547513.424.26.773667|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"ce1kvtjydb4e8d","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ce1kvtjydb4e8d/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":7,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-KO9GBGFdP3tc6twciKVJRA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:52 GMT
      grafana-trace-id:
      - 6a76895029a3a939dccab5a9df021a59
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547513.664.27.838138|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":22,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FQ2rLbQhNqGK7/kaWM6/1Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:52 GMT
      grafana-trace-id:
      - bfb45422803778b9b05b9adf97845933
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547513.86.27.837414|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"fe1kvtlbhb94wa\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/fe1kvtlbhb94wa/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-syYAVh0LQR0hu8jeICr1Rw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:53 GMT
      grafana-trace-id:
      - f49ee04224aa921359f09acf90f33a9c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.082.26.870154|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:25Z\",\"updated\":\"2024-10-21T21:46:25Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"fe1kvtm790rggc\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-GiFcSxKisFQQymQyi72uvQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:53 GMT
      grafana-trace-id:
      - 41abb5526e808df7ae337e2b96d0a370
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.271.29.800106|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":23,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-bsD8PDYs63QD2ssWRfQdFg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:53 GMT
      grafana-trace-id:
      - 67d8a007049677cb29ccd76a7b9bd966
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.456.27.210140|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":27,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-LmCZUlRORSAz/MAhLOFc6Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:53 GMT
      grafana-trace-id:
      - 474a29f0668bfa7a8dbb3ee64f0b878a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.628.28.754541|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BHmM4oW2D0fJjKcfqvEP2Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:53 GMT
      grafana-trace-id:
      - 42b21c5d7d8af357fb7a7dd97481ac4a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.816.28.602469|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0cNKti4j4qMtw/i8p6F3RA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:54 GMT
      grafana-trace-id:
      - 0c8f58330d8838796cc51c6af7664984
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547514.985.30.788244|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:25Z","updated":"2024-10-21T21:46:25Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fe1kvtm790rggc","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fe1kvtm790rggc/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Ia7NYGtsINsB6hXcrGIIYg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:54 GMT
      grafana-trace-id:
      - 9173fd37377953da5a29c5f3de172996
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547515.164.28.555053|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7GyAhCTFxKAJM2b73pEE8w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:54 GMT
      grafana-trace-id:
      - 8563c8f119d6a3e8e8c3b3beeb99b820
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547515.39.29.195309|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IjmrPHxvfudEYUr6WWV5RQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:54 GMT
      grafana-trace-id:
      - 99e9a42a1e5dffc4da96cad621f53332
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547515.607.28.207617|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T21:46:24Z\",\"updated\":\"2024-10-21T21:46:24Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"be1kvtlgr3jeob\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/be1kvtlgr3jeob/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":26,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-d7fx1Mi2Zs/n7GXTWC8cPg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:54 GMT
      grafana-trace-id:
      - 7884bf2f2ecb10d852e7f83750cdcda0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547515.84.28.29485|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":19,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-suzJxvURhdj6uC5gYmgxWA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - d769148219cd65ed359eb553fa76c5c6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.04.27.35846|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":25,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fqbFqAOB0SmHjb0o9NG+4g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - 9e34aa576d680bbde480470dfa657465
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.223.29.848678|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:20Z","updated":"2024-10-21T21:51:20Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-y3MBd4tfu2PPbie6Ej8dNg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - f02f9106c089acbe1c20e0ef42c252a5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.41.28.959728|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:20Z","updated":"2024-10-21T21:51:20Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '727'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3IsTY6BFYRALnhbxW6+3BQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - f7f4c24ba7cc4e005550e65d3343e578
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.614.29.28873|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:21Z","updated":"2024-10-21T21:51:21Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard3","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-CUC/AUDkUE6tAy6SZr1cqQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - f2c2dfcfb9253d87fa0aaf37642c8995
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.787.29.682782|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:46:24Z","updated":"2024-10-21T21:46:24Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"be1kvtlgr3jeob","folderTitle":"Geneva","folderUrl":"/dashboards/f/be1kvtlgr3jeob/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1dtFA2dDBPW4CKKpxwB8Qg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:55 GMT
      grafana-trace-id:
      - 71ac3e8af9eafaad6660bd3633de6632
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547516.963.27.439731|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/4Ais1/veeYjF1iIEBdbCg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:56 GMT
      grafana-trace-id:
      - 13f57a56dfb61f5d05e9abfb64994181
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547517.151.28.114544|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-M0K5L5DpytcKX2BmWSNq7A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:56 GMT
      grafana-trace-id:
      - eed61fe5e595fd8670de3b00878b7f0a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547517.309.27.978213|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:41Z","updated":"2024-10-21T21:51:41Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":33,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TNWaeRDk4hnFjDmHn2wxJw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:56 GMT
      grafana-trace-id:
      - ef5327cce02931adeb16c11a0000018a
      mise-correlation-id:
      - 4574c89e-9077-494a-88be-0ba7615f5e5e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547517.555.26.157|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:49.833001Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-D6bPHlw2XmTUlg7Fl30JxQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:56 GMT
      grafana-trace-id:
      - 93edf89b60b3704e47f0c10851b6f583
      mise-correlation-id:
      - de471ab1-9df6-44fb-adcb-47339203981e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547517.756.29.894109|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 33, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-K+AMzWE7HZuqGWlhMnySdQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:56 GMT
      grafana-trace-id:
      - fd07931881f211a93c1f083c5b01f734
      mise-correlation-id:
      - 48b4f2f6-1f14-4a46-b48a-bc45e0a6afd1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547517.938.27.174775|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2-amg","url":"/d/mg2OAlTVb/test-dashboard2-amg","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:24Z","updated":"2024-10-21T21:51:24Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":32,"panels":[],"title":"Test
        Dashboard2_amg","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '739'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ejv7C6aUmUwAkkJZOK9LoA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:57 GMT
      grafana-trace-id:
      - 084e07ac977a09dce577b561683ea51b
      mise-correlation-id:
      - 3be095d8-8896-4f05-83a0-62efa0981c5a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547518.145.27.116119|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard2", "uid":
      "mg2OAlTVb", "version": 1}, "folderId": 0, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":32,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard2","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '135'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-g+NuzaEk+Cimn/R+v2UsqQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:57 GMT
      grafana-trace-id:
      - 4719f6e7241c1e4604ea906646336a61
      mise-correlation-id:
      - afc6ab14-7cd2-4ca1-8103-a17085118391
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547518.346.30.874587|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard3","url":"/d/mg2OAlTVc/test-dashboard3","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:42Z","updated":"2024-10-21T21:51:42Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":33,"folderUid":"ce1kw99ho7qwwa","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ce1kw99ho7qwwa/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard3","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7Ci21Ys0nhNyWrTntj0dXQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:57 GMT
      grafana-trace-id:
      - 0244c86179455eeb7a0ff0b5f4ca46fd
      mise-correlation-id:
      - 2ff6371a-dec8-48d9-817a-43711cd2376d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547518.533.29.49170|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/folders/ce1kw99ho7qwwa
  response:
    body:
      string: '{"id":33,"uid":"ce1kw99ho7qwwa","orgId":0,"title":"Test Folder","url":"/dashboards/f/ce1kw99ho7qwwa/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T21:51:33.865377Z","updatedBy":"Anonymous","updated":"2024-10-21T21:51:49.833001Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5LG14SssCAYMr3kUsNqjhQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:57 GMT
      grafana-trace-id:
      - dd4bf87b69d516d69a28944f39e4bba1
      mise-correlation-id:
      - 180c3644-41a6-4baa-a89e-3adedc38c0b2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547518.723.27.727994|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard3", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 33, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ce1kw99ho7qwwa","id":35,"slug":"test-dashboard3","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard3","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0+C88s6VVDO0gpk7BJfKdw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:57 GMT
      grafana-trace-id:
      - 4bb41429beb54921a5ea04b785fbd59a
      mise-correlation-id:
      - 78d15a88-9c10-452c-a0b6-d941250d28ec
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547518.909.28.496485|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com/api/dashboard/snapshots
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fOLT0gDjK+lf8JZcVzDf6A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:58 GMT
      grafana-trace-id:
      - 57b41701e17195f7b2ffa6fd9bffa584
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547519.138.29.45978|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVb/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T21:51:24Z","updated":"2024-10-21T21:51:57Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":32,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVb","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '727'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PiUYye0GSsn6zMcjnj4hKQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 21:51:58 GMT
      grafana-trace-id:
      - 0b9e27b5e7eeff6df97e6eb1a11c22bc
      mise-correlation-id:
      - 0a63fddd-34b8-4469-b43c-343af9c5cd8e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729547519.521.26.162960|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","name":"clitestamgmigrate000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:44:26.4877514Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:51:14.4114812Z"},"identity":{"principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000002-c5bgdfbdbhdzhhbk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","provisioningState":"Succeeded","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Enabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1231'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:58 GMT
      etag:
      - '"0700e34e-0000-0600-0000-6716ccd20000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: E3A3AB19BD54402F8774A25532C18414 Ref B: CO6AA3150220051 Ref C: 2024-10-21T21:51:58Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:59 GMT
      etag:
      - '"0700464f-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200646273&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Wvz0hnbHwFTCD_rGW2_wZomM6R4NELVkCJh-N9gkfZzD4l66f0i-AoDeatejc7wnr-5NCM3HdJOvBhsK8IvFzAY97RxbFqXNbpQPqzgs9opsNHzXCDTmQ8kgolSxRqtwooKr2OSHvAySmPcWLU8TvipdG8-MOSaYYWQMolavJ5-wsS6WFx4aA0QzLXubKDjrpeOk6OHmG1PYkh8iPgUKuBpI_uB-FGzC3R53AFDNy1vpJiRGxA7_FhXQsLxKTJBXxS47j0Elx9lDTTr6WdTIsKvU6Z-OUpXEsl3pXUozTJJmTDqsNkmKW_3oUYsxCgmYWapQNFa0HBXpm0GFec-nHw&h=Y8Fj6yXR2g9YdTkbYCQ7WsbRoMoUKYb3rma7IBIm15k
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 1644413099EB450897D34C0E30C7BFCF Ref B: CO6AA3150218023 Ref C: 2024-10-21T21:51:59Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443203226614&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=31uPu5Otso3V97MOXIzlIIdxtGFvuSestVseka670CZi2ngDPAXb7hm7wrLbJRtlGO7ErEU3sMkavJM65i6p_q1iCiYBn7HqEUPhIA4tR6e2hkTcmLtOJV1PnrGdOMLOdatg3PA-cJTnVUsJZdzUYbf_J67MM-tSzq-iCyqqe1gVXW3u5cC1UlQi2GrPBF2gazH9ZcqmNUl_oPx9kZoomcbCIi_pq8YEynXpo8vJZTEA0PxmVqvh06XwHtbwWb_yaClpVaZwmt03p_-zvyhMfAbwXoSGFyomzM9-NtJsQVliake0zG4pmsRJyG9pRkeFKk3Ezk06IZBfElp9duqrPg&h=kP9UpyQ_qe17Z2sobSImr2SQkrj4JcUBJiPsMaFwwPU
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:51:59 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443203226614&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=31uPu5Otso3V97MOXIzlIIdxtGFvuSestVseka670CZi2ngDPAXb7hm7wrLbJRtlGO7ErEU3sMkavJM65i6p_q1iCiYBn7HqEUPhIA4tR6e2hkTcmLtOJV1PnrGdOMLOdatg3PA-cJTnVUsJZdzUYbf_J67MM-tSzq-iCyqqe1gVXW3u5cC1UlQi2GrPBF2gazH9ZcqmNUl_oPx9kZoomcbCIi_pq8YEynXpo8vJZTEA0PxmVqvh06XwHtbwWb_yaClpVaZwmt03p_-zvyhMfAbwXoSGFyomzM9-NtJsQVliake0zG4pmsRJyG9pRkeFKk3Ezk06IZBfElp9duqrPg&h=kP9UpyQ_qe17Z2sobSImr2SQkrj4JcUBJiPsMaFwwPU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 24599BED59A44B73B297DFC4920A7942 Ref B: CO6AA3150219039 Ref C: 2024-10-21T21:52:00Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443506064691&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=ig2LWBLbQp7IBE-eTqfsWD429ygnFtZS98PVD-rJdG9rHgC63DbgGHTdPfP2ug_lIT5za4buaRPEiDmdrdtQ6cVpGQ80y0fgMy_zF0bxVlEi3M9HhY8ajukAPqJfMuT5PpnySLAjgXfh5XmbM9w8M1BA1NKDTPvSBUpnx47-H7Sfrc9Pv6PrER-WkmLnaoW03cG1egZBBfH1EQOszbyz7sJ0muEfrXrmtBDxYYKXskn3FpjGREG4f75ngmBglRTZHjchFnkvYsu04mh7XTenyST_1EfaKsEowxii8uGvszOq5vP68fOA7aiJc-gbKe-AUN0lmwlfmHK72xpqL0cj7w&h=y4MI5eq3HftBN75VqQEyFCPH-G5qY1rKVTqo30lDJvo
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:52:30 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443506064691&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=ig2LWBLbQp7IBE-eTqfsWD429ygnFtZS98PVD-rJdG9rHgC63DbgGHTdPfP2ug_lIT5za4buaRPEiDmdrdtQ6cVpGQ80y0fgMy_zF0bxVlEi3M9HhY8ajukAPqJfMuT5PpnySLAjgXfh5XmbM9w8M1BA1NKDTPvSBUpnx47-H7Sfrc9Pv6PrER-WkmLnaoW03cG1egZBBfH1EQOszbyz7sJ0muEfrXrmtBDxYYKXskn3FpjGREG4f75ngmBglRTZHjchFnkvYsu04mh7XTenyST_1EfaKsEowxii8uGvszOq5vP68fOA7aiJc-gbKe-AUN0lmwlfmHK72xpqL0cj7w&h=y4MI5eq3HftBN75VqQEyFCPH-G5qY1rKVTqo30lDJvo
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 440A3EC3A3284C73AD9623D64C643CE1 Ref B: CO6AA3150219017 Ref C: 2024-10-21T21:52:30Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443808742084&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=jbV45ou1CqqYyjMTlxY68yD4DbUidqUwOFAGKZLP8O3AzJNnEVkEXcc1xYJ6DlGDtkChVeGD1WMm9hrfjtTXmF-Nyf01srb5qGKVxhv2fe974JxE1_t5v2W2YvKl1UputbfrUH5zfsQT3mLPgd3gESVVrSWEokScfYCeOhWNHfwcO8PknS_U8zMLJc0EEsuUgjx5uZc4RSH-L_hqfIsNeqzMOqvWKhsZHCMIN92G_TYgHoi3-ZGMuXQ_T5_1ini6b4Q0otxqBJMBl815A86nxA-l0WdfDPEyypKFd3u_GX0Y36Yud2luFOKZzIsyP_Xl-T54xHS7lI9xJkaroGv8eA&h=rfnVnaP7d6Q_rZWZ63pVxS5lnO1TQRzv6UoSkKO5AzI
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:53:00 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443808742084&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=jbV45ou1CqqYyjMTlxY68yD4DbUidqUwOFAGKZLP8O3AzJNnEVkEXcc1xYJ6DlGDtkChVeGD1WMm9hrfjtTXmF-Nyf01srb5qGKVxhv2fe974JxE1_t5v2W2YvKl1UputbfrUH5zfsQT3mLPgd3gESVVrSWEokScfYCeOhWNHfwcO8PknS_U8zMLJc0EEsuUgjx5uZc4RSH-L_hqfIsNeqzMOqvWKhsZHCMIN92G_TYgHoi3-ZGMuXQ_T5_1ini6b4Q0otxqBJMBl815A86nxA-l0WdfDPEyypKFd3u_GX0Y36Yud2luFOKZzIsyP_Xl-T54xHS7lI9xJkaroGv8eA&h=rfnVnaP7d6Q_rZWZ63pVxS5lnO1TQRzv6UoSkKO5AzI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: DC0604DDF2A3448EB8BA6CAF1BC64300 Ref B: CO6AA3150218029 Ref C: 2024-10-21T21:53:00Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444111338114&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=IuyZlKD0R2KmEFJJ2VEBwyHqSHzo6Kv1pgLexqGr5FuzCPxJEttX5hrDhOjqRCUE9qXybJJ_ia9v9er1vyoCq57V6X2jlb8-v3vexGQw5FMBOGCSih-ntO-YlGQztOWnRj6PLKk9tYJJOs4yphF34JWMKZNREEL_nn7Q0l_53UwIP0X_pTrja0RTffYGaICnn0RcEEzijzMDZ2gZzFDIfJvjVfsi-Wgy-Sfltmz7kbJgx_Ys0QhZH6HBWyI3-M3ENl0jT8It3Wan82kHIpSReCAc2EOzPGfpuroUJfvA6KuT7QJjB5r48E0opWhoq5cEIAuJaJ_MyLhXVRuuYoL_Xw&h=52TIW-9Fr1AoVZs-qsKBFqe_uCteqY_9zqgpHU7qplE
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:53:30 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444111338114&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=IuyZlKD0R2KmEFJJ2VEBwyHqSHzo6Kv1pgLexqGr5FuzCPxJEttX5hrDhOjqRCUE9qXybJJ_ia9v9er1vyoCq57V6X2jlb8-v3vexGQw5FMBOGCSih-ntO-YlGQztOWnRj6PLKk9tYJJOs4yphF34JWMKZNREEL_nn7Q0l_53UwIP0X_pTrja0RTffYGaICnn0RcEEzijzMDZ2gZzFDIfJvjVfsi-Wgy-Sfltmz7kbJgx_Ys0QhZH6HBWyI3-M3ENl0jT8It3Wan82kHIpSReCAc2EOzPGfpuroUJfvA6KuT7QJjB5r48E0opWhoq5cEIAuJaJ_MyLhXVRuuYoL_Xw&h=52TIW-9Fr1AoVZs-qsKBFqe_uCteqY_9zqgpHU7qplE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 7A298ECA9E1B449CA91830D554886B92 Ref B: CO6AA3150220025 Ref C: 2024-10-21T21:53:31Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444414300142&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=iCNM6Qw9HBQwJLzJKg8kx2nsvjJ3D2sHL6Y7LHPAlIcdonQzjnhi2ES0rkNLAdWxpyvTQkKm2ShF4n3V-B1tkYR5NCaXo6uORpZxlN_5bYtzJ9xWnWt1mo1mu33a0B-m_Hc1p47PAbsGmvVXcxwnTN19odBmnxFGWUGT2IDLXMUptmfUnFow5V9PxWd9eEpZahs1L8ur3tT2leulAd_gi5jC9cxYAAducvKrmTAFAGrdffpmxxn8YyTeKk9WP8zBsagR1gIFfSbWFOXFdjJjixW6BmXvGrQsra6QIS07UeI_ZFeLl7M9JJUOSaFmj5QQuIcVkY3tSxIy5VtbfHzhAA&h=SPD7cQ0tBpgRTcSJBXixNY4WbJ6u0evu7Pbx6PwNWIM
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:54:00 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444414300142&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=iCNM6Qw9HBQwJLzJKg8kx2nsvjJ3D2sHL6Y7LHPAlIcdonQzjnhi2ES0rkNLAdWxpyvTQkKm2ShF4n3V-B1tkYR5NCaXo6uORpZxlN_5bYtzJ9xWnWt1mo1mu33a0B-m_Hc1p47PAbsGmvVXcxwnTN19odBmnxFGWUGT2IDLXMUptmfUnFow5V9PxWd9eEpZahs1L8ur3tT2leulAd_gi5jC9cxYAAducvKrmTAFAGrdffpmxxn8YyTeKk9WP8zBsagR1gIFfSbWFOXFdjJjixW6BmXvGrQsra6QIS07UeI_ZFeLl7M9JJUOSaFmj5QQuIcVkY3tSxIy5VtbfHzhAA&h=SPD7cQ0tBpgRTcSJBXixNY4WbJ6u0evu7Pbx6PwNWIM
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 87D35C140BA3480B8C94CFB08823EC03 Ref B: CO6AA3150220045 Ref C: 2024-10-21T21:54:01Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444717845879&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=azXE-EkUG5y47K9kmHhNQxVCuYUigUFc3J1Popc36mt1g_p4VibM4kVB-oCkJw1p2DrpgkGbJknvf_yGR1c5fkE-Y9MZKjPAowew2LB4hwaY62Q-VmNVX3TBUNOk08ZgeV0MldmT4wQNd3G4UbcDi7QBDt_i2RXjA3NcVIF9l2pYTer8Sq3Cbi2gepRKPPR93wul5j_hz9c7B_YQYwfVNe4F9ie_1WcG-1g9WN8wtMEDAUmHxudpPH5V42GSwoX3st2wFxRXjrBHX3iNQ6APAd0qTqCuVIkjLmWIUxi1khZs0Y-1bFPKGOVRh6vxSwXg286m4FJZ9gUzYopn_uAHnw&h=G_2fi7hCckmXtw-vjS2nJNMhtpUNqKgvdEt2HfBBfCg
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:54:31 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651444718002124&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=vkcbE5ILbUvWCnY5evDIPVHM4pHFkW0yQOS5CXUPm_SkQTdcOy-rfWtW68C-duZsqXsKrHhT3YMmWjqYWUMkpxQAMpQ85hYKDgGBlUn2xU2viW-2AvVCtRjCWWid1C6cLCjeqGnebwEJON00KhZofjgzNNYf4kY76U__vgwR_b3-u8srQ1xddfXDSVCKjew-j7ljA3F0R0Vbuz5YC6JBEPkcS4nhDBAZ4gtX-4LyZvK3EtD32si31_SlvpQPyfTSdvozwpzaQc583IX2tUSJoLzSCfIQ5K5B2rjcjmtKLiap233Ul56eHT3ccUXdIxnsEQCDfFafMTwjkKGhthfHoA&h=zlrVfh3lu2k6dlMCEWClxRjQk5qu8cAq0fkjSojf3ts
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 8CB1F11257C94E89A4107A2B6F9EF198 Ref B: CO6AA3150217049 Ref C: 2024-10-21T21:54:31Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445021367850&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=JGxZ_8rU-7vNi-s2Wir_JEU6pu4ro6U_RREswbVHaDSeQl61JChmpQz7vEOf_vRsSCo_OkiA_BLor-98QFHDgv_gmJLkFSFykh4gQrSBGatvJHmb97fH-BRjY7_0nDypgC1z3B0jgTx19U_gQMxk4tAgtpC0sSRdKJRemnigPzqWwhgRzv_Pbf3PsfFSaTnEqmhDSPgVKQv5QL82fsSdFdn36dFEVkNzsWZDZQHfgMqGQbmK2XtiYV_xtU7xQ4ysIpR3Xy8EmVisCaCT__sPN42EcmIPR-jerKEMZJyajGxIKlcU5aeOiU4dmG57t20kLxHxoEtum9Gt515_cBGqGQ&h=EEjT_WYCi14woBT055fUyqHHzFpL8086x_JbKSqV2T8
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:55:02 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445021367850&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=JGxZ_8rU-7vNi-s2Wir_JEU6pu4ro6U_RREswbVHaDSeQl61JChmpQz7vEOf_vRsSCo_OkiA_BLor-98QFHDgv_gmJLkFSFykh4gQrSBGatvJHmb97fH-BRjY7_0nDypgC1z3B0jgTx19U_gQMxk4tAgtpC0sSRdKJRemnigPzqWwhgRzv_Pbf3PsfFSaTnEqmhDSPgVKQv5QL82fsSdFdn36dFEVkNzsWZDZQHfgMqGQbmK2XtiYV_xtU7xQ4ysIpR3Xy8EmVisCaCT__sPN42EcmIPR-jerKEMZJyajGxIKlcU5aeOiU4dmG57t20kLxHxoEtum9Gt515_cBGqGQ&h=EEjT_WYCi14woBT055fUyqHHzFpL8086x_JbKSqV2T8
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 9B35FAD9DAA14901BEE286995DB6E32F Ref B: CO6AA3150217035 Ref C: 2024-10-21T21:55:01Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445324757653&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UcOl4Oucz-PTKVHu-CSV0T2Twcz3TRlPkfxGd3f1xC8P_aPqCvJUIqBadmZbNhW-JgKsgRGy9M7DwO8Xqhi44Lq8LvXtyWVNXTII77E74uzZS25aJLy_Y-pi8DdThuQfGFIyIIcePvye_Y3i8EPtBxis44Ifwv41SOr6ZOsHu4amAIX24jGVwSHwPNk7ApmZ-Qap0iIN5MCCJVijS658lhrVa37C5K4zrErUfrVRDN_S8G53SZI7DPQS8SLr_GEuVo4t-zy5ByMF-tsSP6z1vjkqXQcZMiAaqLPDNy2kCPi0Kjqv9wTXylHoM65_BTcWEe2SFQ8I9q-lSoZl77P83g&h=W8RoWlKF9nAqRtHCeGuEfgET3aSqQbS72HlzNMu6qrk
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:55:31 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445324757653&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UcOl4Oucz-PTKVHu-CSV0T2Twcz3TRlPkfxGd3f1xC8P_aPqCvJUIqBadmZbNhW-JgKsgRGy9M7DwO8Xqhi44Lq8LvXtyWVNXTII77E74uzZS25aJLy_Y-pi8DdThuQfGFIyIIcePvye_Y3i8EPtBxis44Ifwv41SOr6ZOsHu4amAIX24jGVwSHwPNk7ApmZ-Qap0iIN5MCCJVijS658lhrVa37C5K4zrErUfrVRDN_S8G53SZI7DPQS8SLr_GEuVo4t-zy5ByMF-tsSP6z1vjkqXQcZMiAaqLPDNy2kCPi0Kjqv9wTXylHoM65_BTcWEe2SFQ8I9q-lSoZl77P83g&h=W8RoWlKF9nAqRtHCeGuEfgET3aSqQbS72HlzNMu6qrk
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 11E00E272C94405BA6D203FFA59B4AF7 Ref B: CO6AA3150217009 Ref C: 2024-10-21T21:55:32Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445627929052&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=ijmHs5YaF_wZktXSc_rGz-r3VELDKkkc2IlgWd22hQLPILN_e9Fz4o028P4o63kZkrDAYDO8Ew3zuoUDdYTkjepQd1OOTdCKYxadZqxlyJcIXAi0mDSrz1NLrbQdEXKqdoEeHlnO3MDnYbKUXTldw9TfJsegUlnkXGWkucYBEMlgyo6gZRZgj6G20WjaicoLtTQbJW91Tdg3p4oExEZKlMOdFIxsr4VJ72_BbaECPt6cqczfG-jBWW5lHlc2Fnfrqb0erEsMbu1hoRnKMAxlOuCoCbe6XLS4jWLSgCXMZSFmM-iGrzw2Dqu3hYUVw6S7RntsJkmSSZFtDzh7Mj7djg&h=o7xqVq94arlUBR-lA6ahd6pkZULrb7Yne25ta_rURUk
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:56:02 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445628085303&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=b1VVH4xU3x0yDFH6xZhId6D1bfUj0tKK0SFCNDSW70LJSZCxVQhlgoh1gK6od0DmQRDAH1KOidpUTKtq3O_uALOQ1qpwGIe2KLMfVxSLYk66hVKPTFO6C8Ac_DvGpC9zomyTtXgkJ0DeE2vj3sDtsiNRiZVFWeHqBo11kqY1D3I78xqeTrRgg42H7mTURGw2or59AuJLXYtO3ly_trOp7UyD46nWd3KHXljDH8nBkAX_CKCX80TZGAmdRHsmH5bbNNIAKe_a8YEpeU5VhA6XmWdVJif9xnVYhrEiB6_csiRPyoS4pVT0KH8Wrcs6PWPKH7z-onAE8dOPa957sAopAw&h=8Z46fOomnFqwST3f_kCU_16AOReCZlnofP-VPRYbcoM
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2D7E5D0E53D748AF832F0069211EB9FC Ref B: CO6AA3150220017 Ref C: 2024-10-21T21:56:02Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Deleting","startTime":"2024-10-21T21:51:59.8873302Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445931337517&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=BfyB6Dx3cxmFIxEaTuFVaUD-E4jp7fPmipWhq0tHWfrhTCfd_oLa131c94z__7WXjIg_yDKVAeETzi2UPc71znM3BfflJbISEL0aS3KACddBHyiCD4Joud-sIiFve1IsYx-AjqrozkH5jK7EGOeAopgca8YuyKp53w4ngD96ZbsW6Kc16faDZyLfYDpWCBKZDM9DPuHaZazxtaVRkYxUpBWz0GVe78JhVPm-voIRdMhoivwSaXoi9-x6OLED1F4MyYj_wzwy0v8GG-fxIbzYROIZTnURVRX8HRHM-3dWnyRCGpEV3BEn3pvKPiuuUjvxWPO8tDZROZaX9k4hGQDR2A&h=NLpbjE3-prP0zr8E9aBdKWFUR9kuYgUE9puTQoRL07w
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:56:32 GMT
      etag:
      - '"050060bc-0000-0600-0000-6716ccff0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651445931493360&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=U37jxKWLM7ii5Wot_B-eIE2RFpmzi50mCDXyP4zAGuQPofba58Z5t2q9mUr4pnb4QqYPsAEAAoH9oFzY6yOLeD28m1OmiF9MMnKVrboScRnnsBsaqq7FAv-7ZapfL9twjry_RJaMOI5Fen2CVMABsM6QRwsiz_9EXwVRGY1B-ZRHWnmQABMXo-W0rNjJc0gbRucF3uGuXeVhBDplgSuSFwveoY2P09BuRfOE8fpzWrXj5kn1nONU6Uyfbdk3aYa79gtlkcP9fdYahGxiaBuoNRUt169A2n4TWfzJOjhMJGK-Jdu9uWr2ujS90ofCVSRJm_H0kUOAXah8yuWStz_Xrw&h=fr8OMUeKKGBCCMJV_wjKz7oXfMB8z5p8z-Ql5hYz64g
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 355DAF24872544BE911E33AE2A755B08 Ref B: CO6AA3150218039 Ref C: 2024-10-21T21:56:32Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D?api-version=2023-09-01&t=638651443200489974&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=W3y7Lu6ZcIbYyAc68_ljo6ps-Hr-yaTvdgUgki3lnYJw5qgw-P-MYg1Y95xQyHZhxm0Y8Nn6g-VC3vbFEVpNdOodipGhQNgGeznOvyF6IsmtmRBVFHHi8v4jljv_3D0u_6aZ2DSAPtfe1vfR-XG5SwQSjCsMP0S0EihoXu5lfKkni97FW1Vr6hahlGMgaPnnv2yyv00-I0iVUf8x5X45JAmjc3Icp8cvgtOeuTw9o3bPbD5z0LfBfj-GW5z-rZuUPoaYKO4ruN0xg_hpGVnQA8yJc0k9RrCxZ5y8GREe87bgv0ciLiaHvcbMJ6C8i9fpTSDxeOzL8PUnJ-MMwJimIA&h=u-L6dcRDGNK1Mb6dNfg_1lfRhybOarUS60E0kR26Fgw
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","name":"b879bba6-9cb4-4396-b53d-e7159bad9a98*4E9CE8FADEA8ABA6FCFD4F07B43D63139F9ACDC973C838F885B9C5D30DF62A2D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000002","status":"Succeeded","startTime":"2024-10-21T21:51:59.8873302Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '539'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:02 GMT
      etag:
      - '"23003ad8-0000-4d00-0000-6716ce200000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BBD0EB1B5FBE46B58B6A7862900A454C Ref B: CO6AA3150220019 Ref C: 2024-10-21T21:57:03Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'15db41bb-3119-41e1-82e2-cfb8c88e314a'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:47:03.7659324Z","updatedOn":"2024-10-21T21:47:03.7659324Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: DD615C909482471092F8C67C31220EBA Ref B: CO6AA3150218021 Ref C: 2024-10-21T21:57:03Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Cookie:
      - x-ms-gateway-slice=Production
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"15db41bb-3119-41e1-82e2-cfb8c88e314a","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:47:03.7659324Z","updatedOn":"2024-10-21T21:57:04.0231109Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:05 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 4345091C53BE4E50A3E3E6676D2CF503 Ref B: CO6AA3150217047 Ref C: 2024-10-21T21:57:03Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","name":"clitestamgmigrate000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T21:47:06.2059344Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T21:47:06.2059344Z"},"identity":{"principalId":"76588162-9082-4d9f-803f-0f45624616cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate000003-g4e9gcgmcvgrg6cz.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1125'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:06 GMT
      etag:
      - '"310024a8-0000-0800-0000-6716cc4f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 7CB78D9B26C24F64824DB8A1AC2B13F6 Ref B: CO6AA3150220037 Ref C: 2024-10-21T21:57:06Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:06 GMT
      etag:
      - '"07006051-0000-0600-0000-6716ce330000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 6D700B517E324621A2BB89B13479B48A Ref B: CO6AA3150217037 Ref C: 2024-10-21T21:57:06Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446273987302&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=2oPj6I6Dh8kASU125qjgy9y_ML2wU9VOHxE0wAQqpu41U01dGfpxKAUGzxPeLaZArC3l2tBxFXCbAI-whs5dI_FJHbkZx7YhF-T3Aje4nU6FuBT-BGOA5nAcJS1HWCSMrzWok0EobfqVWnGpvuNkO5Bg6kUI7-5r8gFuiposJALpagSh_3V_S7Icx9uGijGlMriEMy1FlCmvACWEk--SIYLRpnjePRKiFdQsKxBTcvK38p2peOVRQmuyyUOaZ0Ro8bECwqJB8LvDhlzWnQOoETTGxXtwyb7dSxkMDpI26dFH_58MNYW8rN60VlBgI0uezF9lmBWJguqUjNPuG_ZF_g&h=Ag09qjvSv7RpsSP4E1LjQLtapKqS4Rbh3JyHz3MV3qg
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:06 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446273987302&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=2oPj6I6Dh8kASU125qjgy9y_ML2wU9VOHxE0wAQqpu41U01dGfpxKAUGzxPeLaZArC3l2tBxFXCbAI-whs5dI_FJHbkZx7YhF-T3Aje4nU6FuBT-BGOA5nAcJS1HWCSMrzWok0EobfqVWnGpvuNkO5Bg6kUI7-5r8gFuiposJALpagSh_3V_S7Icx9uGijGlMriEMy1FlCmvACWEk--SIYLRpnjePRKiFdQsKxBTcvK38p2peOVRQmuyyUOaZ0Ro8bECwqJB8LvDhlzWnQOoETTGxXtwyb7dSxkMDpI26dFH_58MNYW8rN60VlBgI0uezF9lmBWJguqUjNPuG_ZF_g&h=Ag09qjvSv7RpsSP4E1LjQLtapKqS4Rbh3JyHz3MV3qg
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 5E297022B0644046B2D20A23BC00394A Ref B: CO6AA3150219047 Ref C: 2024-10-21T21:57:07Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446576483398&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=C4CrUWTxp34XNv8IRq6BGJdDcSlrhac4ut9Lli3YY1nu-M-b0KLoxsaa5u67EiGqYkimT5rQbkD5HsRUtDPYuERUK7ZpEBehuW9NUKQ5sOhV10wSP2cws5QcvYSl2v6sWIV_QXEGSx83Uty-uh9CejtrKTMUDz4jyN4CD2cG-pujhLyb8XCM7YHor9_7_b8BE8rE-xsl5j2kr69KSDz_ScNenEOxh8FFInoUH_LNYPYnenh1amD-rr4AKwY7gCT49SBvBl6p_Mk4HEfx-Z7T51-sh7QyTQK5xegppU9ZOYolAUlEvgfaLhXN_fkg6tuH1eTDyFJWTYY24k9WKwPw0g&h=-kyDVyAF1pl6qlmHe8VGeEM2sPHVubSWQAZEdHnZSUM
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:57:36 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446576639639&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=Rm1vBQDFxrIvUaOqdN_WYMoBYIqm5PG74eMjWm8zFCOOrNoDJmBwxU415ncQqlAb49ga0HHKBrvHdPaH00gz_VOVd7mFAoCPRkSNIHHkhxWV7KO0FBqBwR2W9-pgwqWFkSPy6o8oS6uS0itk9XjqnqtRqQNUxQ3-SHlIR89Dd5L1-EeuZoJw999Pzu6WeeT-etpmVWJvw09R-REcgWUIDmbG8GIcPNPydfJp0Syz8zM5pjLAKZy4YERSYAyYR7ZHYPSYHeWLzHl5DPhtloCMTtdtCAPPQjICOo7B60WpIZEFNVt6xV4HfOFr6GACoGjIvXLzjssEr8S0SAOvKEQ6Nw&h=3ZNQnNBA8H9VvVDydASRFTCpuj2hEl5RMqU54IpLkxI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3B29A2658C9744EEB94DB83CBB719B6D Ref B: CO6AA3150219019 Ref C: 2024-10-21T21:57:37Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446879385703&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=aka7ofQe4DQTUNW0fb-O8VwQcja7tEY_3bk_gAS_6oZ1stOYCmcMGYwpKe7lL7kS_2MbHRPZrxhDHNgaGQ9xj6V0zbl21mw9GojQhRh6VcPXYDxVoxIDyThx4XqtDGioExNq2Ue4qijZpHlu1Jfm9nOnzpE4Rh71lost5E7oXUnmFtDJYvWcgas-CWZrHbOUiZ_73oHqH7mUhneXlrKjxB78rLeIjpk6CyyrtbjkJB1KlZPzYnzdyG0FgMS3l3LTFgUXajJ7dgu7p2g5jwKGMwQZ_NRhHK1b-KofDECrl0UymUCArzSirimk90D4K8RWzA1hhrjFFFX1TIURz_gyWA&h=SaZr43v3J2wu3jd_HxvYCp6T55Z5Nm_a6QKkMRNupLA
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:58:07 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446879385703&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=aka7ofQe4DQTUNW0fb-O8VwQcja7tEY_3bk_gAS_6oZ1stOYCmcMGYwpKe7lL7kS_2MbHRPZrxhDHNgaGQ9xj6V0zbl21mw9GojQhRh6VcPXYDxVoxIDyThx4XqtDGioExNq2Ue4qijZpHlu1Jfm9nOnzpE4Rh71lost5E7oXUnmFtDJYvWcgas-CWZrHbOUiZ_73oHqH7mUhneXlrKjxB78rLeIjpk6CyyrtbjkJB1KlZPzYnzdyG0FgMS3l3LTFgUXajJ7dgu7p2g5jwKGMwQZ_NRhHK1b-KofDECrl0UymUCArzSirimk90D4K8RWzA1hhrjFFFX1TIURz_gyWA&h=SaZr43v3J2wu3jd_HxvYCp6T55Z5Nm_a6QKkMRNupLA
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B0978E4A7D674EF6B1060017C863937B Ref B: CO6AA3150219045 Ref C: 2024-10-21T21:58:07Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447181542328&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=kQ0MjFcyzCL6D6kCUcWqnVZ-AnpmwMLS-EbR5gUMrFvChvCm1tFK-_sm8hmiKaxF7NdVKdRGlghl5AOLb7ZrV_wllhb68Tf3AGzgGRh9eB89v3_lu3uhNIXrxzt55p78QW_2y0w7w0uTEMwmv3cnBzErwiO5iit-IsBTnIyPhjHZwfWYw5Mr_ZgeXS1M0o8r_89f9b1NvBPoTuj_HvAcp820YhI5gP7YFInWUfMBSZQg-h62efa9Y-A64wjuKGGQHib7MbNHM4q2atJRX9arh-F5H2ee6X3DRMaQn1SmG8XpK4FyunQPZVm6cGJqVpzgwfjkbruYBFsQvrHTO0GIKA&h=L_uD1bkDwEliPgYWanK_OP98_UEL3K3d4DNei4xYoEo
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:58:37 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447181542328&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=kQ0MjFcyzCL6D6kCUcWqnVZ-AnpmwMLS-EbR5gUMrFvChvCm1tFK-_sm8hmiKaxF7NdVKdRGlghl5AOLb7ZrV_wllhb68Tf3AGzgGRh9eB89v3_lu3uhNIXrxzt55p78QW_2y0w7w0uTEMwmv3cnBzErwiO5iit-IsBTnIyPhjHZwfWYw5Mr_ZgeXS1M0o8r_89f9b1NvBPoTuj_HvAcp820YhI5gP7YFInWUfMBSZQg-h62efa9Y-A64wjuKGGQHib7MbNHM4q2atJRX9arh-F5H2ee6X3DRMaQn1SmG8XpK4FyunQPZVm6cGJqVpzgwfjkbruYBFsQvrHTO0GIKA&h=L_uD1bkDwEliPgYWanK_OP98_UEL3K3d4DNei4xYoEo
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 96943023D77042C588224E47DFD70602 Ref B: CO6AA3150217035 Ref C: 2024-10-21T21:58:38Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447484212169&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=TAUFMj0IBLNXRJgcNbAlU8dcZiwPofRZOiYG523SC3JyVb3bAeq_8eumNnkTtWyKKmXw2tfefvqdhZ7V8WBmkW410K6W7TT-S-Fzl2etunMGQTiPb-mOrzKO5LrtzFBJvGMaVLKbxUBnv9FzgFDZtuZ1lnnWNSD4T6d64wpLI1E4WSuzxvC2PmNAPpV0Hb8V5HYeQ9JquaQOQkyuquM8AeVo3I3cTUsKFazjQkwyASHSD516D7tKbo1InAomExdf-nryS1QQLVWZQj-Vr5EuKMO2B9iKMfPemzvXPOx37aFy_KFhNgu2y7gm2sn4-oqU9HWyScts7x9HTEkV_p_c9g&h=KVVWbTSzYMo8fZSCz38tdymlV5ijKKzdZLFxvfHB_0I
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:59:07 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447484212169&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=TAUFMj0IBLNXRJgcNbAlU8dcZiwPofRZOiYG523SC3JyVb3bAeq_8eumNnkTtWyKKmXw2tfefvqdhZ7V8WBmkW410K6W7TT-S-Fzl2etunMGQTiPb-mOrzKO5LrtzFBJvGMaVLKbxUBnv9FzgFDZtuZ1lnnWNSD4T6d64wpLI1E4WSuzxvC2PmNAPpV0Hb8V5HYeQ9JquaQOQkyuquM8AeVo3I3cTUsKFazjQkwyASHSD516D7tKbo1InAomExdf-nryS1QQLVWZQj-Vr5EuKMO2B9iKMfPemzvXPOx37aFy_KFhNgu2y7gm2sn4-oqU9HWyScts7x9HTEkV_p_c9g&h=KVVWbTSzYMo8fZSCz38tdymlV5ijKKzdZLFxvfHB_0I
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 91662E3E027D4F8297C5652AB23B21F3 Ref B: CO6AA3150219025 Ref C: 2024-10-21T21:59:08Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447787653591&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=oeNu3mgNqE9dw8uwewKV8uMUgDUJsJXF9bUWc-fvNaFxN8AKJRnLKhyLxnbPfJpIhKjNCIkyemXCFOMz3ul8l-uUAt_OkQ1eTn7t8Y4vpQDwZ6jTWWmhXi9NDc-YpsvcERJ7-y6RqPc75IO0B5EM-5SIFNhD2mZo0pOqbxD_JKEJpEECZebBzrpiYo4-GqDA6H3Kz9CVECoPu5Q75BQfniHHYRzTRAK3a5i8-LdSvlJH_x9Q7OunGG1rJGvC-U53yCzpRVxc8C2pDoApRhp1bVvnKqqD1pX6FpruUoI256vno1FrAF_xkiG7s7ySmb6QlWUelk-cfgzi390kl0Ngrg&h=nmvIgz_O87jM-dZ4SI4zyez3fjEG-APXtDSykouJXjQ
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 21:59:38 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651447787653591&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=oeNu3mgNqE9dw8uwewKV8uMUgDUJsJXF9bUWc-fvNaFxN8AKJRnLKhyLxnbPfJpIhKjNCIkyemXCFOMz3ul8l-uUAt_OkQ1eTn7t8Y4vpQDwZ6jTWWmhXi9NDc-YpsvcERJ7-y6RqPc75IO0B5EM-5SIFNhD2mZo0pOqbxD_JKEJpEECZebBzrpiYo4-GqDA6H3Kz9CVECoPu5Q75BQfniHHYRzTRAK3a5i8-LdSvlJH_x9Q7OunGG1rJGvC-U53yCzpRVxc8C2pDoApRhp1bVvnKqqD1pX6FpruUoI256vno1FrAF_xkiG7s7ySmb6QlWUelk-cfgzi390kl0Ngrg&h=nmvIgz_O87jM-dZ4SI4zyez3fjEG-APXtDSykouJXjQ
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 19923368683E4BFA8A6F9F28B849A570 Ref B: CO6AA3150219037 Ref C: 2024-10-21T21:59:38Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448090466805&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=nwIvxGnakQq_3Pj3vUsndjvS6ckMMChN4rzsQwRNltMqTu3kcKd2sT5kZBWwA7QJryZJkjRjd4nVS_4Tj0MeEsMFuIpxmID9V0ol1F2Zs5QtGLwi95v2LzTZKHNChWCY_n_8LC9YLxE44N0xN2Ja_q7UHdsi6oicpWzLKFOox38HohvepTlsjh79HjoF5tK00k0vKin08ScWv6SFQ2awWwbx7ihOQt8jtyVl2NuXpdq6hg_ArzpBbod6XUrBK6iQoLn688et_7bgucC-uZKTQNsaWl6J3_A_uyCqSCpNkHCW02Nl_4Kbh8ZB9OZIeeNNvdIJscI5uzX1O9OLbymkBw&h=hlj43T_KURFp-7l8O0FRsHzfhtXe6xmbfgbHMHZV6jo
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:00:08 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448090466805&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=nwIvxGnakQq_3Pj3vUsndjvS6ckMMChN4rzsQwRNltMqTu3kcKd2sT5kZBWwA7QJryZJkjRjd4nVS_4Tj0MeEsMFuIpxmID9V0ol1F2Zs5QtGLwi95v2LzTZKHNChWCY_n_8LC9YLxE44N0xN2Ja_q7UHdsi6oicpWzLKFOox38HohvepTlsjh79HjoF5tK00k0vKin08ScWv6SFQ2awWwbx7ihOQt8jtyVl2NuXpdq6hg_ArzpBbod6XUrBK6iQoLn688et_7bgucC-uZKTQNsaWl6J3_A_uyCqSCpNkHCW02Nl_4Kbh8ZB9OZIeeNNvdIJscI5uzX1O9OLbymkBw&h=hlj43T_KURFp-7l8O0FRsHzfhtXe6xmbfgbHMHZV6jo
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: C696A84E4E85433B973A1A59CE7C8F43 Ref B: CO6AA3150217049 Ref C: 2024-10-21T22:00:08Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448393376414&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=jvKOZVB1blDZ-c0gAXqT8WPVRlvcERtCiBCwvmVKwTSlWUVJsj6XoyP7_KP6nEIWLL7iubdIRk-_IQ28VGBHpqbe9GwQEXOO1B9wgl3WnsURCO_3ZyXFwguaqN7E1aIPzHfbn4aSDVCxTMxoD_wsRHgvhNGHWLu-NYSs341VOpd9g4xcdl7d3GcInoX5xAfzLZs3_eX6ZCiGbRfhCgV6iHJKgKpjgxLbl_ELOYlQi5LTrtfbEu1E9XNJ6Hk_Eo1Er_io5dO_aWV0Tc4VxSX4wRxotuhA_T0HhY7toadWjwPmnPfaK6j5RXYSTsyKu-ogdONISwuB6PpyO0gdOhxWBA&h=ppoxiZmWJ1UA87f8cXEmlhFsEGaH5Ieelhe7tIw0hYU
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:00:38 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448393532540&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=N8qCSWr1nEouurinKESH77lOk2R1VjxkmO7fgKowolL4yQBAjeG3nPKIyCZWBYwKgLj2tJ1fP_YWcUY9oQxMnlL3m9nm3ZSvgqTaOg3s9rRn4NmUlO6YJ3CzhB22VBqybus2HmGqGLSShx-gfF20fTVYvrLEtO0S9x8nLsMMUfugl6euRPdtulv41DL2HkZ6P0gsPcbcZVMmvvsKnbNqMdTbaNzDWB9BJ2Y4x8WnfLMUaU06YGe9e0WPx4Nl54C-Pq-vyRp2Xuuikm8xSj9oB61lxCBRApM71HIli67INg83ZdAiswZEZ_f1AdgeChEwrEDXi8pNtfph3S2aua-HgA&h=eR1nlKpUstgUZiApKjk8u3GVtFpp_NMACsVrXb9ppQ0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 4E3172AFC9EF4EE9BE74CB869408C167 Ref B: CO6AA3150220031 Ref C: 2024-10-21T22:00:39Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448695580987&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=w8dYWc92ayKJTgRoaAwKjHOhMbkV28uGVCFTA9fsYYQC7GWamvL0QeGJ48s1KvARdVIVLQCk95LapMqGdI8_NY7IcRw5jomy9_yOGXUyEIIRxXI6M-yCyoXywviMtcT3KymXGMfCc_gbob0ZNN97aJkVJZ9XqwFUZu33ONhA6iBSt1kAm79JSUKI2Fs402Iq3-LFqL5rIo3hNm4NKVW4g4_v2KriBvp-XxPRoS4sswPyB_bnQ3JuEwran6TCRJTNdB_sycn0QMxVv_VB9J-oc6oywuPrzADoVv_0hvEdBwnVnoQnB7H7NA_VzD5urBDLegi2bMp2e1DwcJT2EG7hwA&h=O-ZxrH9u8inad776n8O2dMmlIDebdQvmQVuGLkn2N0M
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:01:08 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448695580987&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=w8dYWc92ayKJTgRoaAwKjHOhMbkV28uGVCFTA9fsYYQC7GWamvL0QeGJ48s1KvARdVIVLQCk95LapMqGdI8_NY7IcRw5jomy9_yOGXUyEIIRxXI6M-yCyoXywviMtcT3KymXGMfCc_gbob0ZNN97aJkVJZ9XqwFUZu33ONhA6iBSt1kAm79JSUKI2Fs402Iq3-LFqL5rIo3hNm4NKVW4g4_v2KriBvp-XxPRoS4sswPyB_bnQ3JuEwran6TCRJTNdB_sycn0QMxVv_VB9J-oc6oywuPrzADoVv_0hvEdBwnVnoQnB7H7NA_VzD5urBDLegi2bMp2e1DwcJT2EG7hwA&h=O-ZxrH9u8inad776n8O2dMmlIDebdQvmQVuGLkn2N0M
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 892982CEE957432EA9CD7478CA22CE19 Ref B: CO6AA3150218053 Ref C: 2024-10-21T22:01:09Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Deleting","startTime":"2024-10-21T21:57:06.9776714Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448998956755&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=OEu63wBG1yDsjznwl74XoWKd9__Yro9qdSQFu2JlVB9paWp_XFpbHWJOGXUJXLUyDyB2FszIuAXa3zBtMWPFc3JwLEQLL2CyUtbvPCAOeQOLdKI-3gNMzghKeBaA2cnSJaU-H87LnTpD6c08AwWtd7OC-29yewToQOglrJ9_A_d3P-X_twC2GfEQESphIap0jjEDSfZcIR4olnKBFHDc9-sPMJnluMiaje6q-bJ4CFd5JKQsMpKyZ0QhcphW8uBGNAorBuRmh9qJ5tFTDqQ3ZTha3-vwIeRgiAbT525xcX7Y-2YozUs49hB2wOGCiu7HV54IlUB_VevkyIjdZYrdyQ&h=yaTjn_baH7XjYgff_u6aU1DJ2M_5ytExlKd7O_0b3Js
      cache-control:
      - no-cache
      content-length:
      - '520'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:01:39 GMT
      etag:
      - '"05000fbd-0000-0600-0000-6716ce320000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651448998956755&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=OEu63wBG1yDsjznwl74XoWKd9__Yro9qdSQFu2JlVB9paWp_XFpbHWJOGXUJXLUyDyB2FszIuAXa3zBtMWPFc3JwLEQLL2CyUtbvPCAOeQOLdKI-3gNMzghKeBaA2cnSJaU-H87LnTpD6c08AwWtd7OC-29yewToQOglrJ9_A_d3P-X_twC2GfEQESphIap0jjEDSfZcIR4olnKBFHDc9-sPMJnluMiaje6q-bJ4CFd5JKQsMpKyZ0QhcphW8uBGNAorBuRmh9qJ5tFTDqQ3ZTha3-vwIeRgiAbT525xcX7Y-2YozUs49hB2wOGCiu7HV54IlUB_VevkyIjdZYrdyQ&h=yaTjn_baH7XjYgff_u6aU1DJ2M_5ytExlKd7O_0b3Js
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1623D7A6C8784B17BF994EF5A01EBC10 Ref B: CO6AA3150217033 Ref C: 2024-10-21T22:01:39Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D?api-version=2023-09-01&t=638651446271381992&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sY5QU6FfxIK4PFE7-jdR0zpD16dKxMAz2b_bj7zo90piixuzoAEAkQ6rXodORguyex3xtYYs1Hmw0TU4KU1lii2To4jSQkuhpw-rmEA7FsK2v2j8tdelwM7t6sVDSpnlSlV_Ntu4YDspYHwgkk4zKS9MQRQ9qsKy8PInxjG7Pw3uesiT01zCqI6nOpLw2ydCD5JNQMkQq00BSYYwfBee2BOoah1Ez7ucCjNRNRYBHjwvasPUsWwdx2ov0mMG4GLlJ0haA9lBt37-hk2mME1G1lpgGBXJQ417LPNVXVloCJyCipi9Weeq1yEC7SbaByfaVCKFAoFfvz_JC5up1N4kow&h=b8jphX1qGKTcn218VAJEHbWcMK0Jp0pGNEYXM8AffMU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","name":"322b67e4-6a44-4977-94fa-327af2804fb4*5CAE1429FEFFBFA4F8BA0D13A2AB0EEDE0F1F866882CA81920139FF45CF5D15D","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgmigrate000003","status":"Succeeded","startTime":"2024-10-21T21:57:06.9776714Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '539'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:02:09 GMT
      etag:
      - '"3b00ae58-0000-0500-0000-6716cf540000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BA2B9EEAF90147C48F0A9E10143957C5 Ref B: CO6AA3150217049 Ref C: 2024-10-21T22:02:10Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'76588162-9082-4d9f-803f-0f45624616cf'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"76588162-9082-4d9f-803f-0f45624616cf","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:49:11.7979552Z","updatedOn":"2024-10-21T21:49:11.7979552Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:02:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: A3B5D20C8CA34646913D45A76718F35E Ref B: CO6AA3150219011 Ref C: 2024-10-21T22:02:10Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Cookie:
      - x-ms-gateway-slice=Production
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"76588162-9082-4d9f-803f-0f45624616cf","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T21:49:11.7979552Z","updatedOn":"2024-10-21T22:02:11.0543328Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:02:10 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 4EA36305734948E2BCDF82DEA81F0AEE Ref B: CO6AA3150220053 Ref C: 2024-10-21T22:02:10Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana list
      Connection:
      - keep-alive
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Dashboard/grafana?api-version=2023-09-01
  response:
    body:
      string: '{"value":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup","name":"clitestbackup","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:19:24.1324865Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:49:39.1311084Z"},"identity":{"principalId":"12826562-be7a-40a8-bb8c-8cafcdf3b096","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestbackup-gzccd3f9abdcese4.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup2","name":"clitestbackup2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:24:06.1205753Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:48:35.7577341Z"},"identity":{"principalId":"ddc1b197-af08-46fa-b011-288088e0fe9a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestbackup2-ekfbc4c4ekfec9f7.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amge6bdhbsxhkizkmk43l2azyfo7q4gksu4nnwaswrai4rd6px2qpiukibpan6pwr7/providers/Microsoft.Dashboard/grafana/clitestamgsvcacct7ixop3","name":"clitestamgsvcacct7ixop3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-01T23:02:00.8760036Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:26.3887224Z"},"identity":{"principalId":"ccdfa56d-9dd0-4c4f-93b6-fca21a04a4cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacct7ixop3-edgvgyeddcgvbcfv.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupewnvswl","name":"clitestamgbackupewnvswl","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:35:34.7525135Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:30.4534227Z"},"identity":{"principalId":"f27fa747-c40a-4d28-a135-27ed52022b3f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackupewnvswl-fwe4ehayded9g5bh.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupmg2uoml","name":"clitestamgbackupmg2uoml","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:38:16.2013451Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:33.6019566Z"},"identity":{"principalId":"7647d10d-8707-4e80-854a-0aa860b345da","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackupmg2uoml-akhgebdzgqdugtff.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgsv5g6p7zxqgkjlbo72aj74bwqmjgiffgln4ruqopvwvxzonno6aipwr5si5echs/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctg64ptv","name":"clitestamgsvcacctg64ptv","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T05:20:53.7781253Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:46:25.2353953Z"},"identity":{"principalId":"88599c24-a779-4839-a6f2-70315755e1bf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctg64ptv-fddkggenapdhage0.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgfkt5whmi6amop2w4gmudi43l3p6xzf4vikxgsvbu34x433r6gvnejgsx3igyx5t/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctq335hh","name":"clitestamgsvcacctq335hh","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-07T22:44:15.1741136Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:49:39.1540901Z"},"identity":{"principalId":"bd67b976-e219-4c8a-b86f-142576c8cbd6","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctq335hh-aye2acc0h5dnhhat.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgil4gmtwhedenq6gclxyytdufekgx66dqh3hzzvvbvnr2qsevom64szqi6z57wrv/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctrqpmqu","name":"clitestamgsvcacctrqpmqu","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-10T00:26:40.0238772Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:51:23.1405421Z"},"identity":{"principalId":"b377cb57-6d8f-467b-a494-7e0a84456051","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctrqpmqu-cdawdqardqergje3.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test","name":"weu-pe-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westeurope","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-23T13:44:35.0549296Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:44:21.8809774Z"},"identity":{"principalId":"2daed4df-080b-4fdf-9bf2-d79d8c61a323","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://weu-pe-amg-test-a3dncdhgdveff5fn.weu.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test/privateEndpointConnections/weu-test-pe","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Network/privateEndpoints/weu-test-pe"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-g10-upgrade-test","name":"azcli-g10-upgrade-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-20T22:09:18.3852512Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T07:56:51.0191235Z"},"identity":{"principalId":"6cfbef2a-f419-4483-b689-a5343ccb189b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://azcli-g10-upgrade-test-arfthweuh5e6bxcb.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Enabled","outboundIPs":["13.90.103.154","40.121.255.60"],"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test","name":"private-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-20T06:53:36.9615663Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T07:21:18.8409793Z"},"identity":{"principalId":"4a80d00d-88f7-44db-a0a1-8c21e1583b83","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://private-amg-test-htgag0hfe6cdhabm.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test/privateEndpointConnections/private-amg-test-endpoint","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Network/privateEndpoints/private-amg-test-endpoint"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/amg-data-link-repro","name":"amg-data-link-repro","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-29T20:00:35.9442226Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-12T02:05:28.4772589Z"},"identity":{"principalId":"f67a012c-6eb5-459c-bf60-7e19266b3f39","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://amg-data-link-repro-hqe4audnhebda6cq.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Enabled","outboundIPs":["40.71.173.211","13.92.195.189"],"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"instana-datasource":{"pluginId":"instana-datasource"},"sni-thruk-datasource":{"pluginId":"sni-thruk-datasource"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/library-panel-sync-test","name":"library-panel-sync-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-15T23:45:04.5141055Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T06:01:54.4518359Z"},"identity":{"principalId":"1d9e49f5-2c11-452d-b1c0-2dd914e63cb3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://library-panel-sync-test-hjahf6gcfyb7d4ez.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-backup-test","name":"azcli-backup-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-28T21:57:35.8421227Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:28:04.851063Z"},"identity":{"principalId":"cea30572-cd9a-401a-9c8f-6f3504d0030c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-backup-test-epfnh3eug4g3czb5.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-240606","name":"alanzhang-eus-240606","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-06-06T21:11:18.5196647Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:25:56.8909807Z"},"identity":{"principalId":"b5de2d86-50a5-4fb1-b8f3-cf3bfb5117c7","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://alanzhang-eus-240606-csaea7g7efgjama4.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"magnesium-wordcloud-panel":{"pluginId":"magnesium-wordcloud-panel"},"alexanderzobnin-zabbix-app":{"pluginId":"alexanderzobnin-zabbix-app"},"briangann-gauge-panel":{"pluginId":"briangann-gauge-panel"},"isovalent-hubbleprocessancestry-panel":{"pluginId":"isovalent-hubbleprocessancestry-panel"},"grafana-xyzchart-panel":{"pluginId":"grafana-xyzchart-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-pip2-test","name":"azcli-pip2-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-06-07T01:28:59.47761Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:27:03.3804856Z"},"identity":{"principalId":"aa621030-7ba4-49ca-90be-e867bfbea5c5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-pip2-test-g5hearbpbkgpg3fs.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/aaz-test-amg","name":"aaz-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-31T23:26:29.7399342Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-16T20:46:34.4837716Z"},"identity":{"type":"None"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://aaz-test-amg-ebguaqhpbwd9cgdr.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"grafana-athena-datasource":{"pluginId":"grafana-athena-datasource"},"grafana-opensearch-datasource":{"pluginId":"grafana-opensearch-datasource"},"briangann-datatable-panel":{"pluginId":"briangann-datatable-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/aaz-sku-test-amg","name":"aaz-sku-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Essential"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-31T23:34:01.0602941Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T03:52:53.64761Z"},"identity":{"principalId":"2c0a9014-afb2-4326-88c4-6fadf1eb8fc5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://aaz-sku-test-amg-g7c4bvb7bxbchaf2.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-241004","name":"alanzhang-eus-241004","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-04T23:00:02.5750276Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-04T23:00:02.5750276Z"},"identity":{"principalId":"f551afc3-0b14-4003-89db-3fab04bca539","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://alanzhang-eus-241004-dtdeh9cjfxajd5er.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-restore-test-2","name":"azcli-restore-test-2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:46:17.9549073Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:44:33.3871763Z"},"identity":{"principalId":"0fe6d58b-7ee1-4937-ada4-e017555d8b3b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-restore-test-2-bcbfa3bfd2gpaxdz.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"grafana-redshift-datasource":{"pluginId":"grafana-redshift-datasource"},"grafana-astradb-datasource":{"pluginId":"grafana-astradb-datasource"},"volkovlabs-echarts-panel":{"pluginId":"volkovlabs-echarts-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/azcli-restore-test-3","name":"azcli-restore-test-3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:57:37.7954112Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:45:43.2296983Z"},"identity":{"principalId":"058eb720-b993-4ced-a359-c84388424c10","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-restore-test-3-f0gcbvhfdddxe7fb.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '26617'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 22:02:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-original-request-ids:
      - d620ea01-39d6-42ad-b84e-456b6b9c0b81
      - 05a41ee5-e232-42bc-a091-a493bf6fb230
      - d6d9bc8d-93c4-4fa0-b194-460dc8b90fbb
      - fdcf294d-2c65-423f-8690-6c1962ef1c3e
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 0F0E27017109486F8813D17A97D230DD Ref B: CO6AA3150217039 Ref C: 2024-10-21T22:02:11Z'
    status:
      code: 200
      message: OK
version: 1
