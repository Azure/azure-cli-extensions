interactions:
- request:
    body: '{"sku": {"name": "Standard"}, "properties": {}, "identity": {"type": "SystemAssigned"},
      "location": "westcentralus"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '116'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:03:52.9901929Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:03:52.9901929Z"},"identity":{"principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
      cache-control:
      - no-cache
      content-length:
      - '1224'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:03:54 GMT
      etag:
      - '"0200cbbb-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870344122936&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=h7Y7nLXhClYAvEMS2Z6MarwA6-3IMpwn95eJ5CXD5RmP7_qMPtNiD6WTi_CGCXbOU9l_KSZRnrVXwtYX5wm8oB8NWZDbk_-6OaGHoXRvhCA6tqE4EDGIxdG6V6U7WGBztJJINlKvwkyxP7CsxTHdYFnwtSxGOeNshyZ7jwt3hOn1tyxPAmmXC1H_8YcYv9sLur6aDd2rQ9wCKYTIsPZfRxu8a1JXTcn_kYEvzE5mmvclvfZoxRm6tekEZQHBHzJ95YUfnSA0apfLxujaRHNuf_GreJIlosbpJT_2oqe1QktkXOI1W_ZwjIU-L7UFLTFk4HVbv35RxypBbsahxBiBIA&h=rotwKHh0hqK9Vey0wElBOALitf0Yr06BSXXElyrkx_s
      mise-correlation-id:
      - 0bbdb92a-5ef7-485c-b2ab-711eadd73156
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: F2EABBC5CC844D0488AB08087B989519 Ref B: SJC211051205019 Ref C: 2024-08-13T23:03:52Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:03:54 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 0FEACCFD437F4374BF0688CF99BF433C Ref B: SJC211051205019 Ref C: 2024-08-13T23:03:54Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:04:24 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B8EC124C4A8B477180BF87B19F7F39A1 Ref B: SJC211051205019 Ref C: 2024-08-13T23:04:24Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:04:55 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2BE49A860083471C9FB1D8B5A3CBFD18 Ref B: SJC211051205019 Ref C: 2024-08-13T23:04:55Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:05:25 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2DF46898F11745B99D708D9B20CF135E Ref B: SJC211051205019 Ref C: 2024-08-13T23:05:25Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:05:56 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2E5026FFC0724D13876A1348585047CF Ref B: SJC211051205019 Ref C: 2024-08-13T23:05:56Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-08-13T23:03:54.1284791Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:06:26 GMT
      etag:
      - '"020036bf-0000-0600-0000-66bbe65a0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1BF183E7BDFF44DFA63FF8732B19C499 Ref B: SJC211051205019 Ref C: 2024-08-13T23:06:26Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591870343964550&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=QqNN_N13edSmctZsJmp6c0gLMNNGfEMmUIJOdzJezM7d88oL4Caq7w_HHvU92f8Jfp6OneH43u_MgBgcDEPBFqL8SFN5sA1xc2UnjZAaZWFeR3K0pTEHx2cnn4IH7D8h1aU8b34UMAeBlcr9WMi4EaMc3uGhVNvizqU3J1_vkN3eV2MMYO9EpRsWAIxZmtX20hJ_FWgxnfIKmzyD3RxVgYdstK2oZimZgshnqs4r84PKNyGIBgsBuSPhcPz7XOLTGDHfi08CwLZI1TqB0QAEWhgUDhYHlHn62U97YUNLXKvko9fj1MbQ3hMzAP7r4OWPcHsx5cUykWrjBqmOXGx6Ag&h=dFd-WQEXmwT3ahuRKis5RMMKRM8eTCyiOcWgB9g93QY
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"3c14a0c9-b4e9-4d8a-b110-7cdfa3dc27b0*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Succeeded","startTime":"2024-08-13T23:03:54.1284791Z","endTime":"2024-08-13T23:06:34.3152074Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '590'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:06:56 GMT
      etag:
      - '"020066bf-0000-0600-0000-66bbe6fa0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 72F10AACC4FB45D0B3C6BC08F9487BD4 Ref B: SJC211051205019 Ref C: 2024-08-13T23:06:57Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:03:52.9901929Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:03:52.9901929Z"},"identity":{"principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:06:56 GMT
      etag:
      - '"3900f0d8-0000-0800-0000-66bbe6fa0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: 0F646EC150AF409D8CA25281DC8D1FC1 Ref B: SJC211051205019 Ref C: 2024-08-13T23:06:57Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.22631-SP0) msrest/0.7.1 msrest_azure/0.6.4
        azure-graphrbac/0.60.0 Azure-SDK-For-Python
      accept-language:
      - en-US
    method: GET
    uri: https://graph.windows.net/00000000-0000-0000-0000-000000000000/me?api-version=1.6
  response:
    body:
      string: '{"odata.metadata":"https://graph.windows.net/00000000-0000-0000-0000-000000000000/$metadata#directoryObjects/@Element","odata.type":"Microsoft.DirectoryServices.User","objectType":"User","objectId":"fd6cf4a7-1446-4922-962d-4d208514f7fc","deletionTimestamp":null,"accountEnabled":true,"ageGroup":null,"assignedLicenses":[{"disabledPlans":["ab2d4fb5-f80a-4bf1-a11d-7f1da254041b","acbca54f-c771-423b-a476-6d7a98cbbcec"],"skuId":"36a0f3b3-adb5-49ea-bf66-762134cf063a"},{"disabledPlans":["75317150-0539-40a7-a034-ec352928e568","b74d57b2-58e9-484a-9731-aeccbba954f0"],"skuId":"61902246-d7cb-453e-85cd-53ee28eec138"},{"disabledPlans":[],"skuId":"639dec6b-bb19-468b-871c-c5c441c4b0cb"},{"disabledPlans":["795f6fe0-cc4d-4773-b050-5dde4dc704c9"],"skuId":"99cc8282-2f74-4954-83b7-c6a9a1999067"},{"disabledPlans":["f0ff6ac6-297d-49cd-be34-6dfef97f0c28","c948ea65-2053-4a5a-8a62-9eaaaf11b522","3ec18638-bd4c-4d3b-8905-479ed636b83e","3efbd4ed-8958-4824-8389-1321f8730af8","dcf9d2f4-772e-4434-b757-77a453cfbc02","b76fb638-6ba6-402a-b9f9-83d28acb3d86","cd31b152-6326-4d1b-ae1b-997b625182e6","a413a9ff-720c-4822-98ef-2f37c2a21f4c","a6520331-d7d4-4276-95f5-15c0933bc757","ded3d325-1bdc-453e-8432-5bac26d7a014","afa73018-811e-46e9-988f-f75d2b1b8430","b21a6b06-1988-436e-a07b-51ec6d9f52ad","531ee2f8-b1cb-453b-9c21-d2180d014ca5","bf28f719-7844-4079-9c78-c1307898e192","28b0fa46-c39a-4188-89e2-58e979a6b014","199a5c09-e0ca-4e37-8f7c-b05d533e1ea2","65cc641f-cccd-4643-97e0-a17e3045e541","e26c2fcc-ab91-4a61-b35c-03cdc8dddf66","46129a58-a698-46f0-aa5b-17f6586297d9","6db1f1db-2b46-403f-be40-e39395f08dbb","6dc145d6-95dd-4191-b9c3-185575ee6f6b","41fcdd7d-4733-4863-9cf4-c65b83ce2df4","c4801e8a-cb58-4c35-aca6-f2dcc106f287","0898bdbb-73b0-471a-81e5-20f1fe4dd66e","617b097b-4b93-4ede-83de-5f075bb5fb2f","33c4f319-9bdd-48d6-9c4d-410b750a4a5a","8e0c0a52-6a6c-4d40-8370-dd62790dcd70","4828c8ec-dc2e-4779-b502-87ac9ce28ab7","3e26ee1f-8a5f-4d52-aee2-b81ce45c8f40","7547a3fe-08ee-4ccb-b430-5077c5041653"],"skuId":"c7df2760-2c81-4ef7-b578-5b5392b571df"},{"disabledPlans":["a6e407da-7411-4397-8a2e-d9b52780849e","d9923fe3-a2de-4d29-a5be-e3e83bb786be","2a4baa0e-5e99-4c38-b1f2-6864960f1bd1"],"skuId":"a929cd4d-8672-47c9-8664-159c1f322ba8"},{"disabledPlans":[],"skuId":"c5928f49-12ba-48f7-ada3-0d743a3601d5"},{"disabledPlans":["e95bec33-7c88-4a70-8e19-b10bd9d0c014","5dbe027f-2339-4123-9542-606e4d348a72"],"skuId":"09015f9f-377f-4538-bbb5-f75ceb09358a"},{"disabledPlans":[],"skuId":"b05e124f-c7cc-45a0-a6aa-8cf78c946968"},{"disabledPlans":["57ff2da0-773e-42df-b2af-ffb7a2317929","0b03f40b-c404-40c3-8651-2aceb74365fa","b650d915-9886-424b-a08d-633cede56f57","03acaee3-9492-4f40-aed4-bcb6b32981b6","e95bec33-7c88-4a70-8e19-b10bd9d0c014","5dbe027f-2339-4123-9542-606e4d348a72","fe71d6c3-a2ea-4499-9778-da042bf08063","fafd7243-e5c1-4a3a-9e40-495efcb1d3c3"],"skuId":"ea126fc5-a19e-42e2-a731-da9d437bffcf"},{"disabledPlans":[],"skuId":"b30411f5-fea1-4a59-9ad9-3db7c7ead579"},{"disabledPlans":["39b5c996-467e-4e60-bd62-46066f572726"],"skuId":"90d8b3f8-712e-4f7b-aa1e-62e7ae6cbe96"},{"disabledPlans":[],"skuId":"4a51bf65-409c-4a91-b845-1121b571cc9d"},{"disabledPlans":[],"skuId":"9f3d9c1d-25a5-4aaa-8e59-23a1e6450a67"},{"disabledPlans":[],"skuId":"488ba24a-39a9-4473-8ee5-19291e71b002"}],"assignedPlans":[{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MicrosoftPrint","servicePlanId":"795f6fe0-cc4d-4773-b050-5dde4dc704c9"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"fe71d6c3-a2ea-4499-9778-da042bf08063"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"CustomerLockbox","servicePlanId":"3ec18638-bd4c-4d3b-8905-479ed636b83e"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"3efbd4ed-8958-4824-8389-1321f8730af8"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"Microsoft.ProjectBabylon","servicePlanId":"c948ea65-2053-4a5a-8a62-9eaaaf11b522"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"57ff2da0-773e-42df-b2af-ffb7a2317929"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"199a5c09-e0ca-4e37-8f7c-b05d533e1ea2"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"e95bec33-7c88-4a70-8e19-b10bd9d0c014"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"5dbe027f-2339-4123-9542-606e4d348a72"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"f0ff6ac6-297d-49cd-be34-6dfef97f0c28"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"dcf9d2f4-772e-4434-b757-77a453cfbc02"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"fafd7243-e5c1-4a3a-9e40-495efcb1d3c3"},{"assignedTimestamp":"2024-06-22T07:44:06Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"b622badb-1b45-48d5-920f-4b27a2c0996c"},{"assignedTimestamp":"2024-06-21T07:33:07Z","capabilityStatus":"Deleted","service":"exchange","servicePlanId":"b74d57b2-58e9-484a-9731-aeccbba954f0"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"a62f8878-de10-42f3-b68f-6149a25ceb97"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"0aedf20c-091d-420b-aadf-30c042609612"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"ccibotsprod","servicePlanId":"fe6c28b3-d468-44ea-bbd0-a10a5167435c"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"931e4a88-a67f-48b5-814f-16a5f1e6028d"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"b95945de-b3bd-46db-8437-f2beb6ea2347"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"3f30311c-6b1e-48a4-ab79-725b469da960"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"82d30987-df9b-4486-b146-198b21d164c7"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"89f1c4c8-0878-40f7-804d-869c9128ab5d"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"Viva-Goals","servicePlanId":"b44c6eaf-5c9f-478c-8f16-8cea26353bfb"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"VivaPulsePROD","servicePlanId":"b29b2eba-821a-4a32-8a5e-791f430a88d5"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"OrgExplorer","servicePlanId":"a8564d77-48d8-4eb3-bfad-2e14bbe05a69"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"43304c6a-1d4e-4e0b-9b06-5b2a2ff58a90"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"LearningAppServiceInTeams","servicePlanId":"7162bd38-edae-4022-83a7-c5837f951759"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"c244cc9e-622f-4576-92ea-82e233e44e36"},{"assignedTimestamp":"2024-06-15T21:04:24Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"a82fbf69-b4d7-49f4-83a6-915b2cf354f4"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"Bing","servicePlanId":"0d0c0d31-fae7-41f2-b909-eaf4d7f26dba"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"e6afcc4a-2eb2-4bc7-8345-ca02bb7a367f"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"f022b139-a6f0-4193-aa7f-5e6b86f4aaf6"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"c815c93d-0759-4bb8-b857-bc921a71be83"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"4a2cc7a8-4c0f-4740-ae0b-70cdc445bb9b"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"3eeb8536-fecf-41bf-a3f8-d6f17a9f3efc"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"bb73f429-78ef-4ff2-83c8-722b04c3e7d1"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"3afa0b92-83ef-41c1-8d64-586ab882a951"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"a4c6cf29-1168-4076-ba5c-e8fe0e62b17e"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"795aec3a-93a2-45be-92c4-47b9a76340ca"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"a1ace008-72f3-4ea0-8dac-33b3a23a2472"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftCommunicationsOnline","servicePlanId":"711413d0-b36e-4cd4-93db-0a50a4ab7ea3"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"DefenderforIoT","servicePlanId":"99cd49a9-0e54-4e07-aea1-d8d9f5f704f5"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"Chapter5FluidApp","servicePlanId":"c4b8c31a-fb44-4c65-9837-a21f55fcabda"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftEndpointDLP","servicePlanId":"64bfac92-2b17-4482-b5e5-a0304429de3e"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"ProjectProgramsAndPortfolios","servicePlanId":"818523f5-016b-4355-9be8-ed6944946ea7"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"2bdbaf8f-738f-4ac7-9234-3c3ee2ce7d0f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"663a804f-1c30-4ff0-9915-9db84f0d1cea"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"bf6f5520-59e3-4f82-974b-7dbbc4fd27c7"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"f8b44f54-18bb-46a3-9658-44ab58712968"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"0504111f-feb8-4a3c-992a-70280f9a2869"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"da792a53-cbc0-4184-a10d-e544dd34b3c1"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"cc8c0802-a325-43df-8cba-995d0c6cb373"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"fa200448-008c-4acb-abd4-ea106ed2199d"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"9104f592-f2a7-4f77-904c-ca5a5715883f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"78b58230-ec7e-4309-913c-93a45cc4735b"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"Office365InsiderRisk","servicePlanId":"d587c7a3-bda9-4f99-8776-9bcf59c84f75"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"d2d51368-76c9-4317-ada2-a12c004c432f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"50554c47-71d9-49fd-bc54-42a2765c555c"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AADPremiumService","servicePlanId":"41781fb2-bc02-4b7c-bd55-b576c07bb09d"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AADPremiumService","servicePlanId":"eec0eb4f-6444-4f95-aba0-50c24d67f998"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"c1ec4a95-1f05-45b3-a911-aa3fa01094f5"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AzureAdvancedThreatAnalytics","servicePlanId":"14ab5db5-e6c4-4b20-b4bc-13e36fd2227f"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"6c57d4b6-3b23-47a5-9bc9-69f17b4947b3"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"MultiFactorService","servicePlanId":"8a256a2b-b617-496d-b51b-e76466e88db0"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"f6de4823-28fa-440b-b886-4783fa86ddba"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"5689bec4-755d-4753-8b61-40975025187c"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"Adallom","servicePlanId":"2e2ddb96-6af9-4b1d-a3f0-d6ecfd22edb2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"9f431833-0334-42de-a7dc-70aa40db46db"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"6ea4c1ef-c259-46df-bce2-943342cd3cb2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftCommunicationsOnline","servicePlanId":"0feaeb32-d00e-4d66-bd5a-43b5b83db82c"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"07699545-9485-468e-95b6-2fca3738be01"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Adallom","servicePlanId":"8c098270-9dd4-4350-9b30-ba4703f3b36b"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"b1188c4c-1b36-4018-b48b-ee07604f6feb"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftStream","servicePlanId":"6c6042f5-6f01-4d67-b8c1-eb99d36eed3e"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"74d93933-6f22-436e-9441-66d205435abb"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"1315ade1-0410-450d-b8e3-8050e6da320f"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"816971f4-37c5-424a-b12b-b56881f402e7"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Sway","servicePlanId":"a23b959c-7ce8-4e57-9140-b90eb88a9e97"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"5136a095-5cf0-4aff-bec3-e84448b38ea5"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerBI","servicePlanId":"70d33638-9c74-4d01-bfd3-562de28bd4ba"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProjectWorkManagement","servicePlanId":"b737dad2-2f6c-4c65-90e3-ca563267e8b9"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"bea4c11e-220a-4e6d-8eb8-8ea15d019f90"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"91f50f7b-2204-4803-acac-5cf5668b8b39"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MSRemoteAssist","servicePlanId":"4f4c7800-298a-4e22-8867-96b17850d4dd"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"efb87545-963c-4e0d-99df-69c6916d9eb0"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"18fa3aba-b085-4105-87d7-55617b8585e6"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"OfficeForms","servicePlanId":"e212cbc7-0961-4c40-9825-01117710dcb1"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"4de31727-a228-4ec3-a5bf-8e45b5ca48cc"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"2f442157-a11c-46b9-ae5b-6e39ff4e5849"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"9c0dab89-a30c-4117-86e7-97bda240acd2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"efb0351d-3b08-4503-993d-383af8de41e3"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"DYN365AISERVICEINSIGHTS","servicePlanId":"1412cdc1-d593-4ad1-9050-40c30ad0b023"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Deskless","servicePlanId":"8c7d2df8-86f0-4902-b2ed-a0458298f3b3"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"7e6d7d78-73de-46ba-83b1-6d25117334ba"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ERP","servicePlanId":"69f07c66-bee4-4222-b051-195095efee5b"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftDynamics365MRGuidesCoreClient","servicePlanId":"0b2c029c-dca0-454a-a336-887285d6ef07"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"To-Do","servicePlanId":"3fb82609-8c27-4f7b-bd51-30634711ee67"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"60bf28f9-2b70-4522-96f7-335f5e06c941"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"dc789ed8-0170-4b65-a415-eb77d5bb350a"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"d56f3deb-50d8-465a-bedb-f079817ccac1"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftFormsProTest","servicePlanId":"97f29a83-1a20-44ff-bf48-5e4ad11f3e51"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"ea2cf03b-ac60-46ae-9c1d-eeaeb63cec86"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"34c0d7a0-a70f-4668-9238-47f9fc208882"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"WhiteboardServices","servicePlanId":"4a51bca5-1eff-43f5-878c-177680f191af"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"43de0ff5-c92c-492b-9116-175376d08c38"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"c5002c70-f725-4367-b409-f0eff4fee6c0"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"8c66ef8a-177f-4c0d-853c-d4f219331d09"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProjectProgramsAndPortfolios","servicePlanId":"0a05d977-a21a-45b2-91ce-61c240dbafa2"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"WindowsUpdateforBusinessCloudExtensions","servicePlanId":"7bf960f6-2cd9-443a-8046-5dbff9558365"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"WindowsDefenderATP","servicePlanId":"871d91ec-ec1a-452b-a83f-bd76c7d770ef"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"59231cdf-b40d-4534-a93e-14d0cd31d27e"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"Windows","servicePlanId":"e7c91390-7625-45be-94e0-e16907e03118"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"2d589a15-b171-4e61-9b5f-31d15eeb2872"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"Modern-Workplace-Core-ITaas","servicePlanId":"9a6eeb79-0b4b-4bf0-9808-39d99a2cd5a3"}],"city":"Palo
        Alto","companyName":"Microsoft","consentProvidedForMinor":null,"country":null,"createdDateTime":"2024-06-15T08:01:16Z","creationType":null,"department":"DevDiv
        Interns","dirSyncEnabled":true,"displayName":"Leo Zhang","employeeId":"6299077","facsimileTelephoneNumber":null,"givenName":"Leo","immutableId":"6299077","isCompromised":null,"jobTitle":"Software
        Engineer Intern","lastDirSyncTime":"2024-06-19T13:46:49Z","legalAgeGroupClassification":null,"mail":"example@example.com","mailNickname":"t-zhangleo","mobile":null,"onPremisesDistinguishedName":"CN=Leo
        Zhang (6299077),OU=MSE,OU=Users,OU=CoreIdentity,DC=redmond,DC=corp,DC=microsoft,DC=com","onPremisesSecurityIdentifier":"S-1-5-21-2127521184-1604012920-1887927527-77568008","otherMails":[],"passwordPolicies":"DisablePasswordExpiration","passwordProfile":null,"physicalDeliveryOfficeName":"Home
        Office","postalCode":null,"preferredLanguage":null,"provisionedPlans":[{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Deleted","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"MicrosoftCommunicationsOnline"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"MicrosoftCommunicationsOnline"}],"provisioningErrors":[],"proxyAddresses":["x500:/o=ExchangeLabs/ou=Exchange
        Administrative Group (FYDIBOHF23SPDLT)/cn=Recipients/cn=86e499a5cc3e47a19b6aa6d010bee75d-fd6cf4a7-14","smtp:t-zhangleo@microsoft.onmicrosoft.com","smtp:t-zhangleo@service.microsoft.com","SMTP:example@example.com"],"refreshTokensValidFromDateTime":"2024-06-17T16:59:35Z","showInAddressList":null,"signInNames":[],"sipProxyAddress":"example@example.com","state":null,"streetAddress":null,"surname":"Zhang","telephoneNumber":null,"thumbnailPhoto@odata.mediaEditLink":"directoryObjects/fd6cf4a7-1446-4922-962d-4d208514f7fc/Microsoft.DirectoryServices.User/thumbnailPhoto","usageLocation":"US","userIdentities":[],"userPrincipalName":"example@example.com","userState":null,"userStateChangedOn":null,"userType":"Member","extension_18e31482d3fb4a8ea958aa96b662f508_SupervisorInd":"N","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToPersonnelNbr":"144840","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToFullName":"Brahmnes
        Fung","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToEmailName":"BFUNG","extension_18e31482d3fb4a8ea958aa96b662f508_ProfitCenterCode":"P15105","extension_18e31482d3fb4a8ea958aa96b662f508_PositionNumber":"72810338","extension_18e31482d3fb4a8ea958aa96b662f508_LocationAreaCode":"US","extension_18e31482d3fb4a8ea958aa96b662f508_CostCenterCode":"15105","extension_18e31482d3fb4a8ea958aa96b662f508_CompanyCode":"1010","extension_18e31482d3fb4a8ea958aa96b662f508_BuildingName":"HOME
        OFFICE","extension_18e31482d3fb4a8ea958aa96b662f508_BuildingID":"99999","extension_18e31482d3fb4a8ea958aa96b662f508_PersonnelNumber":"6299077"}'
    headers:
      access-control-allow-origin:
      - '*'
      cache-control:
      - no-cache
      content-length:
      - '25220'
      content-type:
      - application/json; odata=minimalmetadata; streaming=true; charset=utf-8
      dataserviceversion:
      - 3.0;
      date:
      - Tue, 13 Aug 2024 23:06:57 GMT
      duration:
      - '3946020'
      expires:
      - '-1'
      ocp-aad-diagnostics-server-name:
      - WHnikbq/bB0ch6tRQS0EnoIxmhr4sWUFsorJrvCFBV8=
      ocp-aad-session-key:
      - d_HPLCCc0BlYvCn1coi-UELeSCR1OnTMMdzVk6ahodkwrvuHT3OIBf4bOPd_eVFCCsR5h4vX7abVif3SU3D3D2sTcclFSqP-WjHFAUwHZQ50_Lz8dSYh6mIfxz4jBqD2.MDI0_gaN0yClillVxcrntPh_xbzEN14x_avtE0LolKA
      pragma:
      - no-cache
      request-id:
      - 139c41ec-ca11-489b-81a2-690a8913de58
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-ms-dirapi-data-contract-version:
      - '1.6'
      x-ms-resource-unit:
      - '1'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-22T15:08:54.1577297Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:06:58 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3321017F2A5C455AB457B7E45A44E425 Ref B: SJC211051204037 Ref C: 2024-08-13T23:06:58Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "fd6cf4a7-1446-4922-962d-4d208514f7fc", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"fd6cf4a7-1446-4922-962d-4d208514f7fc","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:06:58.9859585Z","updatedOn":"2024-08-13T23:06:59.4269617Z","createdBy":null,"updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000001"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1001'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:00 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: CC6C708973B0470C98B05CC9D090DE4E Ref B: SJC211051203045 Ref C: 2024-08-13T23:06:58Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-07T19:37:57.4796716Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:00 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 47EE9E09D1F64B2B948015ED5B976674 Ref B: SJC211051201011 Ref C: 2024-08-13T23:07:01Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "eb6e7378-5447-4d05-a439-b5d7eeb692a3", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:07:01.4615580Z","updatedOn":"2024-08-13T23:07:01.8715666Z","createdBy":null,"updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:01 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1198'
      x-msedge-ref:
      - 'Ref A: 3410C0DED0C24F928D7A5747DB9811B9 Ref B: SJC211051204031 Ref C: 2024-08-13T23:07:01Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"sku": {"name": "Standard"}, "properties": {}, "identity": {"type": "SystemAssigned"},
      "location": "westcentralus"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '116'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:03.1523129Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:03.1523129Z"},"identity":{"principalId":"fe43b446-23ae-466b-899c-106795e38f88","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
      cache-control:
      - no-cache
      content-length:
      - '1224'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:03 GMT
      etag:
      - '"0200ffbb-0000-0600-0000-66bbe7180000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241836659&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=a0wZsmLnJsazfhvoTbDYqIIfNMQoXM-OCYhUBFJLjaWizYdvJOeCDStfXQmLOfHhPIbbgdI13grIuO8vHMdwOy26GuuyOpNTW3rgVZN_e3j43wqBQ2Enprk3Ry0xb_ts3LO4KGej9RB8UrAWl4yFlJqlSK9WnjUkDU6mWXHnbankHEC6xkZolc_9ukscHZiQTzWQtEwULCRiUQpQiwa4yqO_TsWxsxqvSzz7_IMEe8C7miyn9C7ZAK7yBE_WTUAp1FW6-BABG9JvU-9HRQTO2qxsnFZKrxUPdiuDAToBg5Kt5y0xO5sIC5gBQoAphH_ah-3mNgQMLrYw12bK3Wfi0Q&h=qutYiyqaZfUZ65d6CJxyPpaAArLfLtmoUR2elCjKCJ4
      mise-correlation-id:
      - a5132a13-8d8c-4e27-a6ae-9975e6a7d1e9
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-writes:
      - '1198'
      x-msedge-ref:
      - 'Ref A: AC4EEC0A4081454D8E13CA41A728970D Ref B: SJC211051204045 Ref C: 2024-08-13T23:07:02Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-08-13T23:07:03.9465426Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:04 GMT
      etag:
      - '"020069bf-0000-0600-0000-66bbe7170000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 245474DF7C7245A99ABFB8EF65DEA236 Ref B: SJC211051204045 Ref C: 2024-08-13T23:07:04Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-08-13T23:07:03.9465426Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:07:34 GMT
      etag:
      - '"020069bf-0000-0600-0000-66bbe7170000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3C2EE69216BE4AFBA0FF7D06382BE4B4 Ref B: SJC211051204045 Ref C: 2024-08-13T23:07:34Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-08-13T23:07:03.9465426Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:08:04 GMT
      etag:
      - '"020069bf-0000-0600-0000-66bbe7170000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E16EC9504EF049BC9D0E47CE5320F758 Ref B: SJC211051204045 Ref C: 2024-08-13T23:08:04Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-08-13T23:07:03.9465426Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:08:34 GMT
      etag:
      - '"020069bf-0000-0600-0000-66bbe7170000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BCA4577E76FC49EAA3A573C84AB74300 Ref B: SJC211051204045 Ref C: 2024-08-13T23:08:34Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-08-13T23:07:03.9465426Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:07 GMT
      etag:
      - '"020069bf-0000-0600-0000-66bbe7170000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1DDF11D5A9F941AAB9DE11E467EF552C Ref B: SJC211051204045 Ref C: 2024-08-13T23:09:07Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591872241680356&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=owOYvBmSfJvlNvgvEcGLmpSgxy8zAikuN1R6PA5w2387dD1ByPzqvUX4s9Vr0jZ3kPF8Z4OY4EoPXWaojBPHXzgsDZ7oIiOgoypCuMbX6y-cXhSMFKN8FZ0D0M9iDnD2TDiA6fDO7VMejnoRcpDitya8ltpu00vxYbyGWLpeYe3kRAsNKII2BMmily_C7_XB2qBDgsOlbn4Sqdb1ugbfx9KAciaG1ikdqYJXsCTLawlHejol6l69BbSHRpA535rehtqsKtFNnsqHu5af74nCeTxHaYPHodMWNKesO4MDNNnEiT7liHQ0qzA_FUF7iwp_07tyEr4VubeXyi_2vXtV1g&h=TkUY4tdJ8uAXNCKXXIu24dROjf1d870NoifLLU75r40
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"70d35a3b-3d3f-4e1e-a1fd-cab3c8882a73*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Succeeded","startTime":"2024-08-13T23:07:03.9465426Z","endTime":"2024-08-13T23:09:28.1946043Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '590'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:37 GMT
      etag:
      - '"02008abf-0000-0600-0000-66bbe7a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 9F047AE15B784A789C1E09635D8501E5 Ref B: SJC211051204045 Ref C: 2024-08-13T23:09:37Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:03.1523129Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:03.1523129Z"},"identity":{"principalId":"fe43b446-23ae-466b-899c-106795e38f88","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:37 GMT
      etag:
      - '"39001ff7-0000-0800-0000-66bbe7a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: 8718D6359B194ED58118CBC86032DD8A Ref B: SJC211051204045 Ref C: 2024-08-13T23:09:37Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.22631-SP0) msrest/0.7.1 msrest_azure/0.6.4
        azure-graphrbac/0.60.0 Azure-SDK-For-Python
      accept-language:
      - en-US
    method: GET
    uri: https://graph.windows.net/00000000-0000-0000-0000-000000000000/me?api-version=1.6
  response:
    body:
      string: '{"odata.metadata":"https://graph.windows.net/00000000-0000-0000-0000-000000000000/$metadata#directoryObjects/@Element","odata.type":"Microsoft.DirectoryServices.User","objectType":"User","objectId":"fd6cf4a7-1446-4922-962d-4d208514f7fc","deletionTimestamp":null,"accountEnabled":true,"ageGroup":null,"assignedLicenses":[{"disabledPlans":["ab2d4fb5-f80a-4bf1-a11d-7f1da254041b","acbca54f-c771-423b-a476-6d7a98cbbcec"],"skuId":"36a0f3b3-adb5-49ea-bf66-762134cf063a"},{"disabledPlans":["75317150-0539-40a7-a034-ec352928e568","b74d57b2-58e9-484a-9731-aeccbba954f0"],"skuId":"61902246-d7cb-453e-85cd-53ee28eec138"},{"disabledPlans":[],"skuId":"639dec6b-bb19-468b-871c-c5c441c4b0cb"},{"disabledPlans":["795f6fe0-cc4d-4773-b050-5dde4dc704c9"],"skuId":"99cc8282-2f74-4954-83b7-c6a9a1999067"},{"disabledPlans":["f0ff6ac6-297d-49cd-be34-6dfef97f0c28","c948ea65-2053-4a5a-8a62-9eaaaf11b522","3ec18638-bd4c-4d3b-8905-479ed636b83e","3efbd4ed-8958-4824-8389-1321f8730af8","dcf9d2f4-772e-4434-b757-77a453cfbc02","b76fb638-6ba6-402a-b9f9-83d28acb3d86","cd31b152-6326-4d1b-ae1b-997b625182e6","a413a9ff-720c-4822-98ef-2f37c2a21f4c","a6520331-d7d4-4276-95f5-15c0933bc757","ded3d325-1bdc-453e-8432-5bac26d7a014","afa73018-811e-46e9-988f-f75d2b1b8430","b21a6b06-1988-436e-a07b-51ec6d9f52ad","531ee2f8-b1cb-453b-9c21-d2180d014ca5","bf28f719-7844-4079-9c78-c1307898e192","28b0fa46-c39a-4188-89e2-58e979a6b014","199a5c09-e0ca-4e37-8f7c-b05d533e1ea2","65cc641f-cccd-4643-97e0-a17e3045e541","e26c2fcc-ab91-4a61-b35c-03cdc8dddf66","46129a58-a698-46f0-aa5b-17f6586297d9","6db1f1db-2b46-403f-be40-e39395f08dbb","6dc145d6-95dd-4191-b9c3-185575ee6f6b","41fcdd7d-4733-4863-9cf4-c65b83ce2df4","c4801e8a-cb58-4c35-aca6-f2dcc106f287","0898bdbb-73b0-471a-81e5-20f1fe4dd66e","617b097b-4b93-4ede-83de-5f075bb5fb2f","33c4f319-9bdd-48d6-9c4d-410b750a4a5a","8e0c0a52-6a6c-4d40-8370-dd62790dcd70","4828c8ec-dc2e-4779-b502-87ac9ce28ab7","3e26ee1f-8a5f-4d52-aee2-b81ce45c8f40","7547a3fe-08ee-4ccb-b430-5077c5041653"],"skuId":"c7df2760-2c81-4ef7-b578-5b5392b571df"},{"disabledPlans":["a6e407da-7411-4397-8a2e-d9b52780849e","d9923fe3-a2de-4d29-a5be-e3e83bb786be","2a4baa0e-5e99-4c38-b1f2-6864960f1bd1"],"skuId":"a929cd4d-8672-47c9-8664-159c1f322ba8"},{"disabledPlans":[],"skuId":"c5928f49-12ba-48f7-ada3-0d743a3601d5"},{"disabledPlans":["e95bec33-7c88-4a70-8e19-b10bd9d0c014","5dbe027f-2339-4123-9542-606e4d348a72"],"skuId":"09015f9f-377f-4538-bbb5-f75ceb09358a"},{"disabledPlans":[],"skuId":"b05e124f-c7cc-45a0-a6aa-8cf78c946968"},{"disabledPlans":["57ff2da0-773e-42df-b2af-ffb7a2317929","0b03f40b-c404-40c3-8651-2aceb74365fa","b650d915-9886-424b-a08d-633cede56f57","03acaee3-9492-4f40-aed4-bcb6b32981b6","e95bec33-7c88-4a70-8e19-b10bd9d0c014","5dbe027f-2339-4123-9542-606e4d348a72","fe71d6c3-a2ea-4499-9778-da042bf08063","fafd7243-e5c1-4a3a-9e40-495efcb1d3c3"],"skuId":"ea126fc5-a19e-42e2-a731-da9d437bffcf"},{"disabledPlans":[],"skuId":"b30411f5-fea1-4a59-9ad9-3db7c7ead579"},{"disabledPlans":["39b5c996-467e-4e60-bd62-46066f572726"],"skuId":"90d8b3f8-712e-4f7b-aa1e-62e7ae6cbe96"},{"disabledPlans":[],"skuId":"4a51bf65-409c-4a91-b845-1121b571cc9d"},{"disabledPlans":[],"skuId":"9f3d9c1d-25a5-4aaa-8e59-23a1e6450a67"},{"disabledPlans":[],"skuId":"488ba24a-39a9-4473-8ee5-19291e71b002"}],"assignedPlans":[{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MicrosoftPrint","servicePlanId":"795f6fe0-cc4d-4773-b050-5dde4dc704c9"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"fe71d6c3-a2ea-4499-9778-da042bf08063"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"CustomerLockbox","servicePlanId":"3ec18638-bd4c-4d3b-8905-479ed636b83e"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"3efbd4ed-8958-4824-8389-1321f8730af8"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"Microsoft.ProjectBabylon","servicePlanId":"c948ea65-2053-4a5a-8a62-9eaaaf11b522"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"57ff2da0-773e-42df-b2af-ffb7a2317929"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"199a5c09-e0ca-4e37-8f7c-b05d533e1ea2"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"e95bec33-7c88-4a70-8e19-b10bd9d0c014"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"5dbe027f-2339-4123-9542-606e4d348a72"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"f0ff6ac6-297d-49cd-be34-6dfef97f0c28"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MixedRealityCollaborationServices","servicePlanId":"dcf9d2f4-772e-4434-b757-77a453cfbc02"},{"assignedTimestamp":"2024-07-13T23:56:44Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"fafd7243-e5c1-4a3a-9e40-495efcb1d3c3"},{"assignedTimestamp":"2024-06-22T07:44:06Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"b622badb-1b45-48d5-920f-4b27a2c0996c"},{"assignedTimestamp":"2024-06-21T07:33:07Z","capabilityStatus":"Deleted","service":"exchange","servicePlanId":"b74d57b2-58e9-484a-9731-aeccbba954f0"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"a62f8878-de10-42f3-b68f-6149a25ceb97"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"0aedf20c-091d-420b-aadf-30c042609612"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"ccibotsprod","servicePlanId":"fe6c28b3-d468-44ea-bbd0-a10a5167435c"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"931e4a88-a67f-48b5-814f-16a5f1e6028d"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"b95945de-b3bd-46db-8437-f2beb6ea2347"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"3f30311c-6b1e-48a4-ab79-725b469da960"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"82d30987-df9b-4486-b146-198b21d164c7"},{"assignedTimestamp":"2024-06-21T07:19:25Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"89f1c4c8-0878-40f7-804d-869c9128ab5d"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"Viva-Goals","servicePlanId":"b44c6eaf-5c9f-478c-8f16-8cea26353bfb"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"VivaPulsePROD","servicePlanId":"b29b2eba-821a-4a32-8a5e-791f430a88d5"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"OrgExplorer","servicePlanId":"a8564d77-48d8-4eb3-bfad-2e14bbe05a69"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"43304c6a-1d4e-4e0b-9b06-5b2a2ff58a90"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"LearningAppServiceInTeams","servicePlanId":"7162bd38-edae-4022-83a7-c5837f951759"},{"assignedTimestamp":"2024-06-16T07:28:04Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"c244cc9e-622f-4576-92ea-82e233e44e36"},{"assignedTimestamp":"2024-06-15T21:04:24Z","capabilityStatus":"Enabled","service":"YammerEnterprise","servicePlanId":"a82fbf69-b4d7-49f4-83a6-915b2cf354f4"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"Bing","servicePlanId":"0d0c0d31-fae7-41f2-b909-eaf4d7f26dba"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"e6afcc4a-2eb2-4bc7-8345-ca02bb7a367f"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"f022b139-a6f0-4193-aa7f-5e6b86f4aaf6"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"c815c93d-0759-4bb8-b857-bc921a71be83"},{"assignedTimestamp":"2024-06-15T18:47:01Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"4a2cc7a8-4c0f-4740-ae0b-70cdc445bb9b"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"3eeb8536-fecf-41bf-a3f8-d6f17a9f3efc"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"bb73f429-78ef-4ff2-83c8-722b04c3e7d1"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"3afa0b92-83ef-41c1-8d64-586ab882a951"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"a4c6cf29-1168-4076-ba5c-e8fe0e62b17e"},{"assignedTimestamp":"2024-06-15T10:22:50Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"795aec3a-93a2-45be-92c4-47b9a76340ca"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"a1ace008-72f3-4ea0-8dac-33b3a23a2472"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftCommunicationsOnline","servicePlanId":"711413d0-b36e-4cd4-93db-0a50a4ab7ea3"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"DefenderforIoT","servicePlanId":"99cd49a9-0e54-4e07-aea1-d8d9f5f704f5"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"Chapter5FluidApp","servicePlanId":"c4b8c31a-fb44-4c65-9837-a21f55fcabda"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftEndpointDLP","servicePlanId":"64bfac92-2b17-4482-b5e5-a0304429de3e"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"ProjectProgramsAndPortfolios","servicePlanId":"818523f5-016b-4355-9be8-ed6944946ea7"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"2bdbaf8f-738f-4ac7-9234-3c3ee2ce7d0f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"663a804f-1c30-4ff0-9915-9db84f0d1cea"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"bf6f5520-59e3-4f82-974b-7dbbc4fd27c7"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"f8b44f54-18bb-46a3-9658-44ab58712968"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"0504111f-feb8-4a3c-992a-70280f9a2869"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"SharePoint","servicePlanId":"da792a53-cbc0-4184-a10d-e544dd34b3c1"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"cc8c0802-a325-43df-8cba-995d0c6cb373"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"fa200448-008c-4acb-abd4-ea106ed2199d"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"9104f592-f2a7-4f77-904c-ca5a5715883f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"TeamspaceAPI","servicePlanId":"78b58230-ec7e-4309-913c-93a45cc4735b"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"Office365InsiderRisk","servicePlanId":"d587c7a3-bda9-4f99-8776-9bcf59c84f75"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"d2d51368-76c9-4317-ada2-a12c004c432f"},{"assignedTimestamp":"2024-06-15T10:15:02Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"50554c47-71d9-49fd-bc54-42a2765c555c"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AADPremiumService","servicePlanId":"41781fb2-bc02-4b7c-bd55-b576c07bb09d"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AADPremiumService","servicePlanId":"eec0eb4f-6444-4f95-aba0-50c24d67f998"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"SCO","servicePlanId":"c1ec4a95-1f05-45b3-a911-aa3fa01094f5"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"AzureAdvancedThreatAnalytics","servicePlanId":"14ab5db5-e6c4-4b20-b4bc-13e36fd2227f"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"6c57d4b6-3b23-47a5-9bc9-69f17b4947b3"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"MultiFactorService","servicePlanId":"8a256a2b-b617-496d-b51b-e76466e88db0"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"f6de4823-28fa-440b-b886-4783fa86ddba"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"5689bec4-755d-4753-8b61-40975025187c"},{"assignedTimestamp":"2024-06-15T10:14:58Z","capabilityStatus":"Enabled","service":"Adallom","servicePlanId":"2e2ddb96-6af9-4b1d-a3f0-d6ecfd22edb2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"9f431833-0334-42de-a7dc-70aa40db46db"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"6ea4c1ef-c259-46df-bce2-943342cd3cb2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftCommunicationsOnline","servicePlanId":"0feaeb32-d00e-4d66-bd5a-43b5b83db82c"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"07699545-9485-468e-95b6-2fca3738be01"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Adallom","servicePlanId":"8c098270-9dd4-4350-9b30-ba4703f3b36b"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"b1188c4c-1b36-4018-b48b-ee07604f6feb"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftStream","servicePlanId":"6c6042f5-6f01-4d67-b8c1-eb99d36eed3e"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"74d93933-6f22-436e-9441-66d205435abb"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"1315ade1-0410-450d-b8e3-8050e6da320f"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"816971f4-37c5-424a-b12b-b56881f402e7"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Sway","servicePlanId":"a23b959c-7ce8-4e57-9140-b90eb88a9e97"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"5136a095-5cf0-4aff-bec3-e84448b38ea5"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerBI","servicePlanId":"70d33638-9c74-4d01-bfd3-562de28bd4ba"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProjectWorkManagement","servicePlanId":"b737dad2-2f6c-4c65-90e3-ca563267e8b9"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"RMSOnline","servicePlanId":"bea4c11e-220a-4e6d-8eb8-8ea15d019f90"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"91f50f7b-2204-4803-acac-5cf5668b8b39"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MSRemoteAssist","servicePlanId":"4f4c7800-298a-4e22-8867-96b17850d4dd"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"efb87545-963c-4e0d-99df-69c6916d9eb0"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"18fa3aba-b085-4105-87d7-55617b8585e6"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"OfficeForms","servicePlanId":"e212cbc7-0961-4c40-9825-01117710dcb1"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"4de31727-a228-4ec3-a5bf-8e45b5ca48cc"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"2f442157-a11c-46b9-ae5b-6e39ff4e5849"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"9c0dab89-a30c-4117-86e7-97bda240acd2"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"efb0351d-3b08-4503-993d-383af8de41e3"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"DYN365AISERVICEINSIGHTS","servicePlanId":"1412cdc1-d593-4ad1-9050-40c30ad0b023"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"Deskless","servicePlanId":"8c7d2df8-86f0-4902-b2ed-a0458298f3b3"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"7e6d7d78-73de-46ba-83b1-6d25117334ba"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ERP","servicePlanId":"69f07c66-bee4-4222-b051-195095efee5b"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftDynamics365MRGuidesCoreClient","servicePlanId":"0b2c029c-dca0-454a-a336-887285d6ef07"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"To-Do","servicePlanId":"3fb82609-8c27-4f7b-bd51-30634711ee67"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"60bf28f9-2b70-4522-96f7-335f5e06c941"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"dc789ed8-0170-4b65-a415-eb77d5bb350a"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"d56f3deb-50d8-465a-bedb-f079817ccac1"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftFormsProTest","servicePlanId":"97f29a83-1a20-44ff-bf48-5e4ad11f3e51"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"PowerAppsService","servicePlanId":"ea2cf03b-ac60-46ae-9c1d-eeaeb63cec86"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"exchange","servicePlanId":"34c0d7a0-a70f-4668-9238-47f9fc208882"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"WhiteboardServices","servicePlanId":"4a51bca5-1eff-43f5-878c-177680f191af"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"MicrosoftOffice","servicePlanId":"43de0ff5-c92c-492b-9116-175376d08c38"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"c5002c70-f725-4367-b409-f0eff4fee6c0"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"8c66ef8a-177f-4c0d-853c-d4f219331d09"},{"assignedTimestamp":"2024-06-15T10:14:51Z","capabilityStatus":"Enabled","service":"ProjectProgramsAndPortfolios","servicePlanId":"0a05d977-a21a-45b2-91ce-61c240dbafa2"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"WindowsUpdateforBusinessCloudExtensions","servicePlanId":"7bf960f6-2cd9-443a-8046-5dbff9558365"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"WindowsDefenderATP","servicePlanId":"871d91ec-ec1a-452b-a83f-bd76c7d770ef"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"CRM","servicePlanId":"59231cdf-b40d-4534-a93e-14d0cd31d27e"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"Windows","servicePlanId":"e7c91390-7625-45be-94e0-e16907e03118"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"ProcessSimple","servicePlanId":"2d589a15-b171-4e61-9b5f-31d15eeb2872"},{"assignedTimestamp":"2024-06-15T10:14:49Z","capabilityStatus":"Enabled","service":"Modern-Workplace-Core-ITaas","servicePlanId":"9a6eeb79-0b4b-4bf0-9808-39d99a2cd5a3"}],"city":"Palo
        Alto","companyName":"Microsoft","consentProvidedForMinor":null,"country":null,"createdDateTime":"2024-06-15T08:01:16Z","creationType":null,"department":"DevDiv
        Interns","dirSyncEnabled":true,"displayName":"Leo Zhang","employeeId":"6299077","facsimileTelephoneNumber":null,"givenName":"Leo","immutableId":"6299077","isCompromised":null,"jobTitle":"Software
        Engineer Intern","lastDirSyncTime":"2024-06-19T13:46:49Z","legalAgeGroupClassification":null,"mail":"example@example.com","mailNickname":"t-zhangleo","mobile":null,"onPremisesDistinguishedName":"CN=Leo
        Zhang (6299077),OU=MSE,OU=Users,OU=CoreIdentity,DC=redmond,DC=corp,DC=microsoft,DC=com","onPremisesSecurityIdentifier":"S-1-5-21-2127521184-1604012920-1887927527-77568008","otherMails":[],"passwordPolicies":"DisablePasswordExpiration","passwordProfile":null,"physicalDeliveryOfficeName":"Home
        Office","postalCode":null,"preferredLanguage":null,"provisionedPlans":[{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Deleted","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"exchange"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"MicrosoftCommunicationsOnline"},{"capabilityStatus":"Enabled","provisioningStatus":"Success","service":"MicrosoftCommunicationsOnline"}],"provisioningErrors":[],"proxyAddresses":["x500:/o=ExchangeLabs/ou=Exchange
        Administrative Group (FYDIBOHF23SPDLT)/cn=Recipients/cn=86e499a5cc3e47a19b6aa6d010bee75d-fd6cf4a7-14","smtp:t-zhangleo@microsoft.onmicrosoft.com","smtp:t-zhangleo@service.microsoft.com","SMTP:example@example.com"],"refreshTokensValidFromDateTime":"2024-06-17T16:59:35Z","showInAddressList":null,"signInNames":[],"sipProxyAddress":"example@example.com","state":null,"streetAddress":null,"surname":"Zhang","telephoneNumber":null,"thumbnailPhoto@odata.mediaEditLink":"directoryObjects/fd6cf4a7-1446-4922-962d-4d208514f7fc/Microsoft.DirectoryServices.User/thumbnailPhoto","usageLocation":"US","userIdentities":[],"userPrincipalName":"example@example.com","userState":null,"userStateChangedOn":null,"userType":"Member","extension_18e31482d3fb4a8ea958aa96b662f508_SupervisorInd":"N","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToPersonnelNbr":"144840","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToFullName":"Brahmnes
        Fung","extension_18e31482d3fb4a8ea958aa96b662f508_ReportsToEmailName":"BFUNG","extension_18e31482d3fb4a8ea958aa96b662f508_ProfitCenterCode":"P15105","extension_18e31482d3fb4a8ea958aa96b662f508_PositionNumber":"72810338","extension_18e31482d3fb4a8ea958aa96b662f508_LocationAreaCode":"US","extension_18e31482d3fb4a8ea958aa96b662f508_CostCenterCode":"15105","extension_18e31482d3fb4a8ea958aa96b662f508_CompanyCode":"1010","extension_18e31482d3fb4a8ea958aa96b662f508_BuildingName":"HOME
        OFFICE","extension_18e31482d3fb4a8ea958aa96b662f508_BuildingID":"99999","extension_18e31482d3fb4a8ea958aa96b662f508_PersonnelNumber":"6299077"}'
    headers:
      access-control-allow-origin:
      - '*'
      cache-control:
      - no-cache
      content-length:
      - '25220'
      content-type:
      - application/json; odata=minimalmetadata; streaming=true; charset=utf-8
      dataserviceversion:
      - 3.0;
      date:
      - Tue, 13 Aug 2024 23:09:38 GMT
      duration:
      - '3712763'
      expires:
      - '-1'
      ocp-aad-diagnostics-server-name:
      - DjOOrsMDaSN68x8pGUPRM+VGub200c4azFUWy1TY/I8=
      ocp-aad-session-key:
      - g3DCArvHkLASNK8VyQ-sd3EFJg4nqLsb8hngRJJn-7gmdHQs-Ku0h7ckgUFKcjB2G-StgmYGGxYhSU_xLIT2CfV-NoSa0xaBOa8CwMWdZLwASC1-R2ElImGki0GbD79W.W3W9pwmMwVk6FkmP7gP3pKqHwzqGs6DfAgY8ZKVNMW4
      pragma:
      - no-cache
      request-id:
      - 81e22c58-47a9-4907-ab31-ee1a73950a6b
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-ms-dirapi-data-contract-version:
      - '1.6'
      x-ms-resource-unit:
      - '1'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-22T15:08:54.1577297Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:38 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 57243356E570425CA14B9CA782FA8FE1 Ref B: SJC211051203037 Ref C: 2024-08-13T23:09:38Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "fd6cf4a7-1446-4922-962d-4d208514f7fc", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"fd6cf4a7-1446-4922-962d-4d208514f7fc","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:09:39.8050615Z","updatedOn":"2024-08-13T23:09:40.2720673Z","createdBy":null,"updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000003"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1001'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:39 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1198'
      x-msedge-ref:
      - 'Ref A: CFD2C135249F413B90DF38D58FDFA455 Ref B: SJC211051204037 Ref C: 2024-08-13T23:09:39Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-07T19:37:57.4796716Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:40 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 31888FCBF0DD42E89B05D6D9DCB5E904 Ref B: SJC211051203049 Ref C: 2024-08-13T23:09:40Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "fe43b446-23ae-466b-899c-106795e38f88", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"fe43b446-23ae-466b-899c-106795e38f88","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:09:41.0475507Z","updatedOn":"2024-08-13T23:09:41.6365584Z","createdBy":null,"updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:09:41 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: E02A55DC95124C3E8A4BA84C9B06DC8F Ref B: SJC211051201025 Ref C: 2024-08-13T23:09:40Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana folder create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --title
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:03:52.9901929Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:03:52.9901929Z"},"identity":{"principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:11:42 GMT
      etag:
      - '"3900f0d8-0000-0800-0000-66bbe6fa0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: B7094513AB6C44DD86146F13AD251A5A Ref B: SJC211051201031 Ref C: 2024-08-13T23:11:42Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '24'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-08-13T23:11:44.57798002Z","updatedBy":"example@example.com","updated":"2024-08-13T23:11:44.57798012Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '355'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-L9jxSlT48VOXkOmMsvGayw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:44 GMT
      grafana-trace-id:
      - fa69c4e460d2124d7f42225a5eb16213
      mise-correlation-id:
      - 5007aff7-a288-4671-95a2-236f44653443
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590704.115.29.742754|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"access": "proxy", "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "jsonData":
      {"azureAuthType": "msi", "subscriptionId": ""}, "name": "Test Azure Monitor
      Data Source", "type": "grafana-azure-monitor-datasource"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '212'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":5,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Upk1jgLowYpoFR6N0cmNxA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:45 GMT
      grafana-trace-id:
      - bdbc51b4428cd8156bdd6e181df49778
      mise-correlation-id:
      - 329f1155-1676-4b1c-a95b-dc498b9a9f3f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590705.916.29.604810|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9YVOq4C8sgrZ99HIOWj+OA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:45 GMT
      grafana-trace-id:
      - 91c0e4d656c302d4c456de7f564b20a7
      mise-correlation-id:
      - a170ca09-91a9-4dda-8146-78c16f70dd1e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590706.488.29.123291|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Oi3E8WEWWLj/Jux7BJu+nA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:45 GMT
      grafana-trace-id:
      - 5700dde0803188083a8168275e26a25e
      mise-correlation-id:
      - 3fea52b3-be66-4f67-ba06-13afaf5a0c26
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590706.674.28.234051|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVa"},
      "folderUid": "eduqvzhe016o0f", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '127'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3hEFOl5csUExtNSpjevofg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:46 GMT
      grafana-trace-id:
      - a610fee8d27f11d1aae684ae49bf5263
      mise-correlation-id:
      - 6a78f856-9bd4-412e-acba-33a0efafd148
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590706.949.29.45853|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVb"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '96'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9VSdbEOeRFEXaCkziJIT0w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:46 GMT
      grafana-trace-id:
      - 12aa5e51dd855dc2b9ae792cffafe8fa
      mise-correlation-id:
      - 286d33d7-8197-4b22-b1c8-b35ab1fc38d0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590707.361.28.12609|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-GuAmjiMbd3RzdIv6WWzueQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:46 GMT
      grafana-trace-id:
      - 266f1c410c5ed460fab93a02c3cba14a
      mise-correlation-id:
      - 18d89474-5acf-46cb-af6a-2ce42aedbf8a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590707.791.27.884009|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-sDBK//o5VafJEapDXPzzHg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:47 GMT
      grafana-trace-id:
      - 26ec2cc9f85d7467cc41fe13273881c3
      mise-correlation-id:
      - d62b4f2b-33e4-4e3e-ba9a-b8958c49ed08
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590708.17.29.241585|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard2", "panels": [], "uid": "mg2OAlTVc"},
      "folderUid": "eduqvzhe016o0f", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '128'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":35,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-T/bFCab8qohnJS/4koSZNw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:47 GMT
      grafana-trace-id:
      - 8cff3ede24db07f555de5bf17bb3c5f2
      mise-correlation-id:
      - 23584451-a290-47ce-bedf-30b44e90fc68
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590708.461.26.439097|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:11:48 GMT
      grafana-trace-id:
      - f9d95459abb72b65ff0be04f1264646d
      mise-correlation-id:
      - 2a49709a-652f-4f55-831f-e4c603b3ee2c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590709.541.31.52185|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jLirZCuWZ8eosR26yYcQBA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:48 GMT
      grafana-trace-id:
      - 148fa8f2e2a3f7eed88fc2913b70ca53
      mise-correlation-id:
      - f05716e3-1f8d-4a3c-bd94-3cae620f07f7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590709.743.28.411890|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TORFYwDxXerwVQoJZlknNw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:49 GMT
      grafana-trace-id:
      - 293d5e0058e8d543ca4083e433ff9bfd
      mise-correlation-id:
      - a53b3584-7d28-4163-bd1b-21c30ff5e5bb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590710.05.29.331414|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":17,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":18,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":7,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":3,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":6,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":2,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":23,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"cduqvgp8p4v7ka","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/cduqvgp8p4v7ka/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":19,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":20,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":21,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":25,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":26,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":22,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":33,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":35,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":27,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hF0UYr53s9P1sivj9Nw0sw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:49 GMT
      grafana-trace-id:
      - 31953c4e2742915fdbc87eea4858a00d
      mise-correlation-id:
      - c2a9ccb4-bf41-445a-9133-6554219a90b0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590710.346.28.230065|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:46Z","updated":"2024-08-13T23:11:46Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-R9pP6ZrdgqKDhw1KnNZ/pQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:49 GMT
      grafana-trace-id:
      - 570bae11261cd51c05ec404b8438f053
      mise-correlation-id:
      - 13404ab0-aadf-47e0-9143-e5f5f626973f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590710.673.27.941658|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:45Z","updated":"2024-08-13T23:11:45Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0bqrm+Pk+VLpY7J4ndn+xw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:49 GMT
      grafana-trace-id:
      - eb92210be488214a241ed48ee657f266
      mise-correlation-id:
      - 1deefaa9-68f3-46e0-8653-f7d1ad226a37
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590710.97.26.609697|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:47Z","updated":"2024-08-13T23:11:47Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-GwHXB/55VzwQaskvfRJETA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:50 GMT
      grafana-trace-id:
      - e2ee2fdd182f4093dcb811c820ca1e24
      mise-correlation-id:
      - 5c2b59a1-0954-4d08-8886-eb8be8058095
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590711.184.31.672417|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WdIX3g6B0xaW9XbxFUiBvg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:50 GMT
      grafana-trace-id:
      - 5b2532393167c3951ccabf62a4b9f7f1
      mise-correlation-id:
      - 19ba7d5a-d069-4186-8d69-8bd7c99f83e7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590711.391.27.458775|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/bduqvgpfkctfkb/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":32,"uid":"eduqvzhe016o0f","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AsVG9J0M4BLeN/OmaDF4KQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:50 GMT
      grafana-trace-id:
      - a0dcfe6eb00ef9a0c1820c88688d957f
      mise-correlation-id:
      - 2a7f6812-8766-4bc2-bcb6-8e7739ae8248
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590711.618.26.719787|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":32,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:44.582409Z","updatedBy":"Anonymous","updated":"2024-08-13T23:11:44.582409Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ynpQweqGbpPcZ8RWs/oOfg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:50 GMT
      grafana-trace-id:
      - 6b5dcd3b6624b2f039461d55a2017be6
      mise-correlation-id:
      - c2465857-c7bc-40b7-bb09-591326e3cf2c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590711.869.27.433106|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f/permissions
  response:
    body:
      string: '[{"folderId":32,"created":"2024-08-13T23:11:44Z","updated":"2024-08-13T23:11:44Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/680ab924279570be1058c370ae052197","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false},{"folderId":32,"created":"2024-08-13T23:11:44Z","updated":"2024-08-13T23:11:44Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false},{"folderId":32,"created":"2024-08-13T23:11:44Z","updated":"2024-08-13T23:11:44Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-XPmfTQrKRoHnxVTE6ARVXQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:51 GMT
      grafana-trace-id:
      - bf0f8721db7c8aea0e2dc4ab04504099
      mise-correlation-id:
      - e561f7ac-2953-45b3-a056-9baf7257af92
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590712.062.29.118613|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-uvmBG3qDMWZehDQTX0gMpg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:52 GMT
      grafana-trace-id:
      - ff6a0d2884504b5dad80bd4635ad3630
      mise-correlation-id:
      - 9a011e15-b15f-4a72-ae14-5a88cb975e96
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590713.02.29.655535|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Rg1oEiNKX7pLjdx3Wro19A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:52 GMT
      grafana-trace-id:
      - f2b78d2df2b22606ec550f82061c4bc6
      mise-correlation-id:
      - b0d3884b-e4cd-4e0b-974e-0e693df36526
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590713.288.28.482000|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"message":"Folder deleted"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '28'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-XflDLR/skpKXzo7UhgdqIw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:52 GMT
      grafana-trace-id:
      - daf51860523877c3fc6906c24cdd3cd8
      mise-correlation-id:
      - 2775e193-de18-4815-a5f5-ee1524f86b18
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590713.562.28.198026|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources/name/Test%20Azure%20Monitor%20Data%20Source
  response:
    body:
      string: '{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '452'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jYUe8NMCJEXnDVJm1Qfx1A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:53 GMT
      grafana-trace-id:
      - 2ca0df5bf75d8231c079a42cc108ce32
      mise-correlation-id:
      - 45705d64-ed40-4b0b-8df0-2ca9b320cd88
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590714.394.28.787575|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources/uid/da714998-ca29-4adc-851b-1bd93371cbc6
  response:
    body:
      string: '{"id":5,"message":"Data source deleted"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '40'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7mUL6YcB8s1psZznm1jwOQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:53 GMT
      grafana-trace-id:
      - 33d2fef15f6a3f2e58853744799f9c25
      mise-correlation-id:
      - faa2fd14-e3bd-42f9-9a62-356d7a4a0174
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590714.633.28.35898|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:11:54 GMT
      grafana-trace-id:
      - 501b6e7c4dbbb8acc9276a769cad488a
      mise-correlation-id:
      - c270be67-3aa1-4b19-afce-74aea8a33b51
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590715.465.27.534320|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 32, "uid": "eduqvzhe016o0f", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/eduqvzhe016o0f/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-08-13T23:11:44.582409Z", "updatedBy": "Anonymous", "updated":
      "2024-08-13T23:11:44.582409Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-08-13T23:11:54.914947058Z","updatedBy":"example@example.com","updated":"2024-08-13T23:11:54.914947158Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-2E+kSPU+Zo0oyH8yCtxsFQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:54 GMT
      grafana-trace-id:
      - 400ce05e5357281e52d777392995d319
      mise-correlation-id:
      - 5fb7354e-e749-4304-92da-558d233c6ac3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590715.898.26.882592|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:11:54.918301Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xF3lmGOtO4U3hjDaeLqT+A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:55 GMT
      grafana-trace-id:
      - a522efafe533429c42dee237ee02dada
      mise-correlation-id:
      - bf6fbd6b-c5e2-4061-ad21-0491ebc6078e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590716.293.29.404180|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7A9bcnXqVIAyZSzKwGAwCw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:55 GMT
      grafana-trace-id:
      - ab0fdc6ceba7d396daa7b2883c426326
      mise-correlation-id:
      - 886f22c8-6e8f-43b7-a010-ab50585ef072
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590716.534.27.43126|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVb", "version": 1}, "folderId": 0, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '136'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ffB03QvjR6A5T1He5nWWKg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:55 GMT
      grafana-trace-id:
      - 19264411d156bb65f635c644a8fc1b23
      mise-correlation-id:
      - 12b28fbd-b484-4543-8901-889bed8cf94e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590716.862.28.192737|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:11:54.918301Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AwD8MBCi805PYs8HErQ1MA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:56 GMT
      grafana-trace-id:
      - 6c7875a11b676cb8412a8e787177db19
      mise-correlation-id:
      - ad3948f5-bc23-4f31-a42d-ff11effb1593
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590717.11.29.917576|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard2", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":38,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jjiwRJaDcoE4H4F7G4YTQQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:56 GMT
      grafana-trace-id:
      - cdabd5dead92f7b04a25f40410c0402e
      mise-correlation-id:
      - b5e78a82-5631-4a03-b81c-d2199c94db4f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590717.346.29.685395|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 2, "uid": "2bf5f4cb-b112-4c36-8ed5-22a2b478d58f", "orgId": 1, "name":
      "Geneva SLI Data", "type": "grafana-azure-data-explorer-datasource", "typeName":
      "Azure Data Explorer Datasource", "typeLogoUrl": "public/plugins/grafana-azure-data-explorer-datasource/img/logo.png",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "clusterUrl": "https://genevaslidatafollower.westcentralus.kusto.windows.net",
      "dataConsistency": "strongconsistency", "defaultDatabase": "slihelper", "defaultEditorMode":
      "visual", "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '661'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"bd7e2f1fd8f10a14c7521d3e76f655dd"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wXY/nJgSwHeU7/Ka1l6L2w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:56 GMT
      grafana-trace-id:
      - bd7e2f1fd8f10a14c7521d3e76f655dd
      mise-correlation-id:
      - ef86f58b-69c6-47e9-8548-56db34d8373f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590717.7.31.892080|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 1, "uid": "azure-monitor-oob", "orgId": 1, "name": "Azure Monitor",
      "type": "grafana-azure-monitor-datasource", "typeName": "Azure Monitor", "typeLogoUrl":
      "public/app/plugins/datasource/azuremonitor/img/logo.jpg", "access": "proxy",
      "url": "", "user": "", "database": "", "basicAuth": false, "isDefault": true,
      "jsonData": {"azureAuthType": "msi", "subscriptionId": "73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},
      "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '433'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"c996c0fa2dfc85e4a55adaf7b3eb1282"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QvxY7BK0silqnJa8G4tPgA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:57 GMT
      grafana-trace-id:
      - c996c0fa2dfc85e4a55adaf7b3eb1282
      mise-correlation-id:
      - 8456cee0-13be-4c6a-a93e-08c5e650f286
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590717.987.26.218193|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 5, "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "orgId": 1, "name":
      "Test Azure Monitor Data Source", "type": "grafana-azure-monitor-datasource",
      "typeName": "Azure Monitor", "typeLogoUrl": "public/app/plugins/datasource/azuremonitor/img/logo.jpg",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureAuthType": "msi", "subscriptionId": ""},
      "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '434'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":6,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TC/Nn+agi0svY5T3xOsc7g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:57 GMT
      grafana-trace-id:
      - 6a6574576f00c70aad7afc274875605d
      mise-correlation-id:
      - d333b086-c170-4398-b582-ff9a0bf87aee
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590718.241.29.569332|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 3, "uid": "f6364b78-a58a-4fcd-8fae-8cd0d3ddc448", "orgId": 1, "name":
      "IcM via ADX", "type": "grafana-azure-data-explorer-datasource", "typeName":
      "Azure Data Explorer Datasource", "typeLogoUrl": "public/plugins/grafana-azure-data-explorer-datasource/img/logo.png",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "clusterUrl": "https://icmclusterfollower.centralus.kusto.windows.net", "dataConsistency":
      "strongconsistency", "defaultDatabase": "IcMDataWarehouse", "defaultEditorMode":
      "visual", "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '657'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"afd19b475537af01c2e85c9ad39f3d22"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-V8Dnkji9+ymj2vQgRj+gSg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:58 GMT
      grafana-trace-id:
      - afd19b475537af01c2e85c9ad39f3d22
      mise-correlation-id:
      - e2025109-9737-42ca-bdcf-7f48805d2fa5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590719.064.28.911945|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 4, "uid": "Geneva", "orgId": 1, "name": "Geneva Datasource", "type":
      "geneva-datasource", "typeName": "Geneva Datasource", "typeLogoUrl": "public/plugins/geneva-datasource/img/logo.svg",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '396'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"604d90d45f4b685224b25ad3063688d2"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-kFy0ucoPfZ17FsT4HM65tQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:58 GMT
      grafana-trace-id:
      - 604d90d45f4b685224b25ad3063688d2
      mise-correlation-id:
      - 4725d267-aed2-438e-8106-6f77b627a943
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590719.252.30.329735|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources/name/Test%20Azure%20Monitor%20Data%20Source
  response:
    body:
      string: '{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '452'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ckt3W3cAGIjAv8hyASFWgQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:58 GMT
      grafana-trace-id:
      - 82b6dde0317ba21429cfe4a7b6398d1e
      mise-correlation-id:
      - c5a7572d-b948-4da8-86e5-d72204813d04
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590719.736.26.509089|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hlJYjyNtXTQH00+rqWH+Nw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:59 GMT
      grafana-trace-id:
      - f3c80b0d96d54a5e0bafb8684c30ed94
      mise-correlation-id:
      - 4c04ec61-f1eb-4d80-a9d0-dc1409bb19de
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590720.194.29.838650|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RWPoBcue4w26Qox8kjCSuQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:59 GMT
      grafana-trace-id:
      - bcd471d32ecdffb6b6f48ec6774d860a
      mise-correlation-id:
      - e4eb1cc8-cbcb-4eb6-9d7c-90ad55791b4e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590720.435.27.611362|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:55Z","updated":"2024-08-13T23:11:55Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-d+X6ynGqqYKlyetE5Cuyrw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:11:59 GMT
      grafana-trace-id:
      - 1dc19b5260997c525bf3d187f04ae1f6
      mise-correlation-id:
      - 69d01637-d52c-453a-9c2a-0009aad83313
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590720.858.28.842934|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:46Z","updated":"2024-08-13T23:11:55Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVb","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TG4C9IPqIL1rcgoj7vmE5A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:00 GMT
      grafana-trace-id:
      - a25e2d019c8c12f605600127e2ec7e43
      mise-correlation-id:
      - ec79b3fb-9420-4c82-b8bd-189d1ce2206d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590721.22.27.855070|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:00 GMT
      grafana-trace-id:
      - 9a4ad1adc065a753b246ee491536439b
      mise-correlation-id:
      - 49962666-c6e8-4ed7-8c33-89876d0d9b0f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590721.66.29.842516|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-muNOUsnWP0C0UX+/oDcagg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:00 GMT
      grafana-trace-id:
      - 349a525ee707c27abc155ba65a5a821e
      mise-correlation-id:
      - 6c23a8d8-d5dd-4d42-9054-72ab644ee816
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590721.872.28.203637|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":17,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":18,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":7,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":3,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":6,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":2,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":23,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"cduqvgp8p4v7ka","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/cduqvgp8p4v7ka/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":19,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":20,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":21,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":25,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":26,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":22,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":27,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-M2t9RXc2L9TogZRVbbyx9g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:03 GMT
      grafana-trace-id:
      - 4939cc8c3edca72bdae4e9c65ebfc499
      mise-correlation-id:
      - b1d6e79b-3712-40f3-9997-71b2f30627e4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590724.689.26.829439|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"cduqvgp8p4v7ka\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Z7bvor+xYg8MHOdKGZAXQA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:05 GMT
      grafana-trace-id:
      - a818314fd23682b8b6041bd2e611479a
      mise-correlation-id:
      - 788983da-b608-4532-8ce8-31814d098d4b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590726.336.26.682519|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:54Z\",\"updated\":\"2024-08-13T23:05:54Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"fduqvgq8p66m8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rGQfSP0KYkVNLu9ACwcZjg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:05 GMT
      grafana-trace-id:
      - 82d9a655b9a50cab3f9d4189997bc543
      mise-correlation-id:
      - 643789cc-03ba-44cc-8de9-23c7ad017251
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590726.59.27.574614|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nXyyy/lGKRCl+QJhBWcLOw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:05 GMT
      grafana-trace-id:
      - 8bf5d33630d4742261f0ab6f0153ad1a
      mise-correlation-id:
      - ed3c2031-b674-4277-b5f3-926905468b35
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590726.884.26.37302|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-uYlpQMDHGFv6Aw/nYxEf/A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:06 GMT
      grafana-trace-id:
      - 59974d648f6b573fae885c9912d8c962
      mise-correlation-id:
      - 3ba1676f-510f-4b67-ad61-7a0c54188767
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590727.092.27.576413|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:55Z","updated":"2024-08-13T23:11:55Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-z1buK90XcDJnv39321cC/A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:06 GMT
      grafana-trace-id:
      - 38d1bfd24056ab92eea677d8fc81a3ac
      mise-correlation-id:
      - b93d2056-b6af-44ea-9349-c29bec2a8a56
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590727.329.28.392559|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:56Z","updated":"2024-08-13T23:11:56Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0otvAYp3SU7o8TpeOqsEfQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:06 GMT
      grafana-trace-id:
      - f2a3d69560fbb806e6c91c05483e90b2
      mise-correlation-id:
      - 6afcfa91-69c6-436d-b7f2-898d11440006
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590727.519.29.155469|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zJN9JUAVMfOhl1nxhAuERg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:06 GMT
      grafana-trace-id:
      - 4d48576610aaadf14b8a7b66223c9f9b
      mise-correlation-id:
      - 05e26ae2-a0c8-4c9a-b292-de4bf411653f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590727.752.27.662439|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/bduqvgpfkctfkb/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":36,"uid":"eduqvzhe016o0f","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dCaM3Tt6i+ceBFif3uCPSw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:07 GMT
      grafana-trace-id:
      - 07977b2cb98592a8a6c363ef49422ed0
      mise-correlation-id:
      - 0bb5ea2a-ccc3-49a6-8f0d-06e93b72bc78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590728.013.26.269740|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/fduqvgq8p66m8a
  response:
    body:
      string: '{"id":28,"uid":"fduqvgq8p66m8a","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:05:54.18948Z","updatedBy":"Anonymous","updated":"2024-08-13T23:05:54Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '371'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7qq0KaI07dNFaOZeJYWAIQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:07 GMT
      grafana-trace-id:
      - 5e2e6b954ea3cbd7d3f269de7dea7119
      mise-correlation-id:
      - aa523386-25cd-42b0-84ae-1eca4c635674
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590728.194.30.876894|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/fduqvgq8p66m8a/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"fduqvgq8p66m8a","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"fduqvgq8p66m8a","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-evKkQ/y1ghjyQBdWDPY2kQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:07 GMT
      grafana-trace-id:
      - 1e579f03aa0c3cb6a9e4dcc999f97b02
      mise-correlation-id:
      - 0379f187-187a-47ff-a9ad-9d5d59045814
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590728.396.26.802313|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/cduqvgp8p4v7ka
  response:
    body:
      string: '{"id":12,"uid":"cduqvgp8p4v7ka","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:05:53.671283Z","updatedBy":"Anonymous","updated":"2024-08-13T23:05:53Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '358'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AXVmSZ0OQcPv8+jpSfw0cw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:07 GMT
      grafana-trace-id:
      - b502e82cafb90d708d41b6ce1c9337f7
      mise-correlation-id:
      - 12e58a56-2440-4ced-9fad-7142ab501211
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590728.677.29.241026|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/cduqvgp8p4v7ka/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zeIfxiUQKK7PYk0/k076pw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:07 GMT
      grafana-trace-id:
      - e7bde48143f7b59adaef141f51aee63c
      mise-correlation-id:
      - cdfef4f7-07f3-4715-aa45-dcaa53b1206c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590728.919.29.904745|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:11:54.918301Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QaxJrE980b3k6vxMnd1ZFw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:08 GMT
      grafana-trace-id:
      - 3591ee815b618e5ab8e2ac14af30f2d3
      mise-correlation-id:
      - 0984db06-93f9-4492-afb5-0d8daf45487a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590729.164.30.562315|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f/permissions
  response:
    body:
      string: '[{"folderId":36,"created":"2024-08-13T23:11:54Z","updated":"2024-08-13T23:11:54Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/680ab924279570be1058c370ae052197","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false},{"folderId":36,"created":"2024-08-13T23:11:54Z","updated":"2024-08-13T23:11:54Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false},{"folderId":36,"created":"2024-08-13T23:11:54Z","updated":"2024-08-13T23:11:54Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"eduqvzhe016o0f","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/eduqvzhe016o0f/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-UEAonoEwKWC7g00e+8admQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:08 GMT
      grafana-trace-id:
      - 38a4831001c8ac2e556d106af5be04ba
      mise-correlation-id:
      - 780590c5-d11f-4fa8-bd60-2bf91f55df0e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590729.384.27.445031|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"id":34,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ze3Z5ADHDUpY2raw5RcHug';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:08 GMT
      grafana-trace-id:
      - 2166e884b3253f3821c220fbea72d896
      mise-correlation-id:
      - 1b792714-ca24-4f55-bd47-a7ed8e507858
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590729.923.28.244058|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:09 GMT
      grafana-trace-id:
      - a7b3a5cb8e8e6e72cfffdaf76992e201
      mise-correlation-id:
      - c77173ff-b85e-41c3-a0dc-8739d6a0bc86
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590730.359.27.880257|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 12, "uid": "cduqvgp8p4v7ka", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-08-13T23:05:53.671283Z", "updatedBy":
      "Anonymous", "updated": "2024-08-13T23:05:53Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '406'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RmIkj+BfHId+/G/1L5tuFg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:09 GMT
      grafana-trace-id:
      - 2c6699c9d0d299a1f0414091ad336a30
      mise-correlation-id:
      - 09596f89-8be7-4657-b236-ae9764c4a433
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590730.64.28.240754|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 12, "uid": "cduqvgp8p4v7ka", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-08-13T23:05:53.671283Z", "updatedBy":
      "Anonymous", "updated": "2024-08-13T23:05:53Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '406'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/cduqvgp8p4v7ka
  response:
    body:
      string: '{"id":12,"uid":"cduqvgp8p4v7ka","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:05:53.671283Z","updatedBy":"Anonymous","updated":"2024-08-13T23:12:09.928681Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zOJJnzJKgOxoWsNhC+x//A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:09 GMT
      grafana-trace-id:
      - 80fc7475bbe3a660056d2fdae9ecab52
      mise-correlation-id:
      - 681cfe86-42c2-4cf7-ac0d-74a6a6c2ac8c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590730.873.29.340032|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 36, "uid": "eduqvzhe016o0f", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/eduqvzhe016o0f/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-08-13T23:11:54.918301Z", "updatedBy": "Anonymous", "updated":
      "2024-08-13T23:11:54.918301Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-YSHM/axg8xcMOSNimb5yAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:10 GMT
      grafana-trace-id:
      - 0c8bbbc9e279674185b8e28b5890c2ba
      mise-correlation-id:
      - 29734e59-6d87-493f-bbdf-2cbe989fed76
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590731.138.29.118630|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 36, "uid": "eduqvzhe016o0f", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/eduqvzhe016o0f/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-08-13T23:11:54.918301Z", "updatedBy": "Anonymous", "updated":
      "2024-08-13T23:11:54.918301Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:12:10.421908Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WKzQG4YyZdwgLib0orfxJQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:10 GMT
      grafana-trace-id:
      - d63f7a218f3c4e448396a1f97ac72de6
      mise-correlation-id:
      - e2e6d85c-5c06-4244-bb57-70346419ea46
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590731.395.27.993401|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 28, "uid": "fduqvgq8p66m8a", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-08-13T23:05:54.18948Z", "updatedBy":
      "Anonymous", "updated": "2024-08-13T23:05:54Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '419'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3QvwWreolG+GwCXjUAn9Ig';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:10 GMT
      grafana-trace-id:
      - bc1345529923fb2071b53bf7e878e91b
      mise-correlation-id:
      - d97e448d-6b7e-474a-84c1-256ec2964497
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590731.642.29.884056|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 28, "uid": "fduqvgq8p66m8a", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-08-13T23:05:54.18948Z", "updatedBy":
      "Anonymous", "updated": "2024-08-13T23:05:54Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '419'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/fduqvgq8p66m8a
  response:
    body:
      string: '{"id":28,"uid":"fduqvgq8p66m8a","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:05:54.18948Z","updatedBy":"Anonymous","updated":"2024-08-13T23:12:10.89385Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '377'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-b6kaHc/qlFSuL/u921Rr+w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:10 GMT
      grafana-trace-id:
      - de749ea3727e66f2c5ff42c5aca9c92d
      mise-correlation-id:
      - 87f87419-8cdf-422b-a9a0-bcd9df6fda54
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590731.828.27.155770|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:12:10.421908Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7/8acHg0t1KpKStJI7XyWw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:11 GMT
      grafana-trace-id:
      - 98f07265d390d9b42999a61982f593a1
      mise-correlation-id:
      - a8571cb3-2031-4249-98f7-5e9c6b8ef28d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590732.08.26.975704|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-sjUWdIBu6tnVvBWtiuidBg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:11 GMT
      grafana-trace-id:
      - 008ae1f49aa6d459ab78e031afca95a9
      mise-correlation-id:
      - 617f4a4f-d06e-43b5-af0f-31df8729ad86
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590732.36.29.851806|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders/eduqvzhe016o0f
  response:
    body:
      string: '{"id":36,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-08-13T23:11:54.918301Z","updatedBy":"Anonymous","updated":"2024-08-13T23:12:10.421908Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-yOAeX6jHwtigS1UlrkjhTQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:11 GMT
      grafana-trace-id:
      - 06c928fd9e8eb9ddf3bda96df5404c39
      mise-correlation-id:
      - fc7b7900-c698-47a2-8fda-afed7e01dcb8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590732.59.28.81698|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard2", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":38,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fvi3uhp8yC/ufu6W6HfQVA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:11 GMT
      grafana-trace-id:
      - 604203d0744aab4687ee70691255f5f2
      mise-correlation-id:
      - 243ef910-98e9-4f35-ba7c-8d2f6a2526e5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590732.87.26.863423|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":17,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":18,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":7,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":3,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":6,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":2,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":23,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"cduqvgp8p4v7ka","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/cduqvgp8p4v7ka/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":19,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":20,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":21,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":25,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":26,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":22,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":27,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10337'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-yDBAxP7KJ/b4/HE3xuk8oA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:12 GMT
      grafana-trace-id:
      - a9e80ff9b9ccdfc21194c7bb98193904
      mise-correlation-id:
      - c26b811c-23ad-4e27-bd0b-17f4c0ede3a8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590733.753.28.195413|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zHzFDk45VWKQXkOSZSQ6xw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:13 GMT
      grafana-trace-id:
      - 8ba30723f0435bf186f017618d4e4ba5
      mise-correlation-id:
      - 442d0e48-a4c2-42d7-8496-9346690000b8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590734.048.29.425672|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVd"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '96'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":39,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-USOjDAdvnTgf0LGL5MIDqQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:13 GMT
      grafana-trace-id:
      - d00082c55a7730e9ea685e411e5ee392
      mise-correlation-id:
      - a2d5507e-bbc1-42b5-86f8-b15a8e5dda75
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590734.495.26.14522|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:14 GMT
      grafana-trace-id:
      - c63d810ec218960f0088fa6d0db942d7
      mise-correlation-id:
      - 11b2ecf0-f9d4-4230-8069-c696449a3f78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590735.017.26.104032|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana dashboard sync
      Connection:
      - keep-alive
      ParameterSetName:
      - --source --destination --folders-to-include
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:03.1523129Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:03.1523129Z"},"identity":{"principalId":"fe43b446-23ae-466b-899c-106795e38f88","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:13 GMT
      etag:
      - '"39001ff7-0000-0800-0000-66bbe7a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: DD769FABA4C8435AA2290381DD876FC6 Ref B: SJC211051205047 Ref C: 2024-08-13T23:12:14Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:16 GMT
      grafana-trace-id:
      - 67ff5f2a0f85d78a720e8bee42f460b3
      mise-correlation-id:
      - be72cdcc-7efe-40e8-8428-e9acd6d1f7c3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590735.789.26.216148|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pWCk+Fh33AX1gxQO73pUog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:16 GMT
      grafana-trace-id:
      - c616db26ec0c2c620cf3446c0ac4811a
      mise-correlation-id:
      - 838e246a-63bf-494d-9e62-7658076f2548
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590737.357.31.191342|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"cduqvqotkgq2od","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"dduqvqmg6fojkd","title":"Azure Monitor"},{"id":14,"uid":"fduqvqo2v1szke","title":"Geneva"},{"id":12,"uid":"dduqvqnw7bjswe","title":"Microsoft
        Defender for Cloud"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '258'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vc18/Rq90Utx+fRjcN4EKA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:16 GMT
      grafana-trace-id:
      - 11be344ae71d58efa1f52d92ade04fec
      mise-correlation-id:
      - 70faf7d0-f755-4e95-84b2-39b14bc0d7c0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590737.585.30.835399|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder", "uid": "eduqvzhe016o0f"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '49'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"eduqvzhe016o0f","orgId":0,"title":"Test Folder","url":"/dashboards/f/eduqvzhe016o0f/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-08-13T23:12:16.907694109Z","updatedBy":"example@example.com","updated":"2024-08-13T23:12:16.907694209Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dRS1YYEIAwC5srV/Y48K6A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:16 GMT
      grafana-trace-id:
      - 9be1f468ae617975f768e9a1f4e99637
      mise-correlation-id:
      - c39b4d1a-2fc4-4165-a792-5f652196a735
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590737.855.27.196236|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9J2TjvW6ZpP34M7dTI2mjQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:17 GMT
      grafana-trace-id:
      - 17086e4f0ca407b7f816c79b32675280
      mise-correlation-id:
      - dd95f78f-4b0a-43d3-b78b-f77eecdf9391
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590738.134.28.470457|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-geWpZNdfnfMjmHPVrccT9g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:17 GMT
      grafana-trace-id:
      - f6e87454ae69a18403741bf993872fc1
      mise-correlation-id:
      - f45b952a-2b58-4d20-b29b-6371260559b9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590738.585.26.489417|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":17,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":18,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":7,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":3,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":6,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":2,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":23,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"cduqvgp8p4v7ka","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/cduqvgp8p4v7ka/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":19,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":20,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":21,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":25,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":26,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":22,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":39,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":27,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-02WVwcjCjKj59SbplLBpDg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:17 GMT
      grafana-trace-id:
      - 73c278c41b058c0ae06789bc6db47007
      mise-correlation-id:
      - e004109f-94c9-4c74-991c-1fb25e619336
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590738.887.26.848477|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mNAG/ZtvKInTQMLkr9PZvg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:18 GMT
      grafana-trace-id:
      - 36e186754ae5d7b883792a196a58545d
      mise-correlation-id:
      - 181cf468-dcd3-47b8-b21f-dcca96e233f6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590739.076.30.476652|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"bduqvgpfkctfkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/bduqvgpfkctfkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":15,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RdyvojM8JvZdYvtezyk09Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:18 GMT
      grafana-trace-id:
      - a6fa785a46e4e26c2ac0f52da656731d
      mise-correlation-id:
      - 25106499-61bd-4927-8ddf-f9a276ca2af0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590739.356.26.537278|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3L8mFeaFO3VQbDDVkoC5mg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:18 GMT
      grafana-trace-id:
      - a407481d7d87480e6eda672456022321
      mise-correlation-id:
      - f6f296b5-b215-45c1-9dc9-366844f63186
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590739.646.29.293315|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Rdmt3O71cl9crNQIGuiUog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:18 GMT
      grafana-trace-id:
      - 91881997cce8ea9b9b4eb3dd2173794c
      mise-correlation-id:
      - 5720afbc-68b5-4295-92ea-c2fc91b03835
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590739.904.28.275224|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":4,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18653'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lzO6I3XtjlA4tgayjuPt3g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:19 GMT
      grafana-trace-id:
      - 59857a6e210a94d14ce875000a7e671d
      mise-correlation-id:
      - 5d7cec28-6de2-4a98-91d4-91f9d1ea2a5d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590740.118.29.655657|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":7,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OLvWgEWJQmtcy2lPzozUBQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:19 GMT
      grafana-trace-id:
      - 91309c6e15fcd181f1983809417fb64f
      mise-correlation-id:
      - 9216b3b2-90e2-4f6f-8e82-f59d188e3c65
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590740.371.26.207966|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":8,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FC40B43kR5O7EYM2Nge7lA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:19 GMT
      grafana-trace-id:
      - 74ad8f4790b69360627324626267c177
      mise-correlation-id:
      - 3d5fddc4-e31c-41a7-acdc-3557d3d70ba3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590740.612.30.352209|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":3,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4UtOe/C/9lrsNh+7Xq9mUA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:19 GMT
      grafana-trace-id:
      - 336a607b7efbdbd42e872c5a6729e6b3
      mise-correlation-id:
      - 6f9adc3b-7ab3-4265-88a8-fe36ab383422
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590740.857.27.222519|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":9,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ny2Zw/dvTMZWOeJv51MnWg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:20 GMT
      grafana-trace-id:
      - 15bcbd0fb649e6ab452074a5d47d2d52
      mise-correlation-id:
      - f05a5089-7686-4bb6-9a10-fcedcdc5a8de
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590741.121.28.784536|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"eduqvgnu26yv4c\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/eduqvgnu26yv4c/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":10,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37723'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1/BdqQVOJR3EYQAIAprzxw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:20 GMT
      grafana-trace-id:
      - 24a13b60c7e1702bb37cb08cc118e1f6
      mise-correlation-id:
      - 7ec8073d-216d-4df8-ac80-2034a5c1cb59
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590741.4.26.529409|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"eduqvgnu26yv4c\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/eduqvgnu26yv4c/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":11,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123790'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zekSFKlR3smg16kDH8IuTQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:20 GMT
      grafana-trace-id:
      - 7639b782a5f749cef8bd2f3d756925b5
      mise-correlation-id:
      - 3a3b09a3-42c2-4257-acb0-715ef299c36f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590741.688.29.783537|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fq3JvtYyIvp/aHQTzH3hpw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:20 GMT
      grafana-trace-id:
      - b053a071f95ea962961d0b242fb994b6
      mise-correlation-id:
      - f5639f78-768a-4707-8e32-a1404219ade1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590741.937.27.375357|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117797'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ijd0cA1vPhETDM0BgHDg4w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:21 GMT
      grafana-trace-id:
      - fe3c431d57e157b7191c0f574bf24e5a
      mise-correlation-id:
      - fd1e913a-ed66-49bd-80b4-9f708b4d5b41
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590742.219.26.350400|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":2,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-R/Tw5r8A14WFjI0akfemQQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:21 GMT
      grafana-trace-id:
      - f9eaec819cafe734c83a90302c9d5c1c
      mise-correlation-id:
      - 4bb35d6a-869d-4101-9044-bff8b777226f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590742.407.27.388336|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":23,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zra4NivTgt7lTvG5R/7BvQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:21 GMT
      grafana-trace-id:
      - 62eabb77777a2e04f81a7e694584f1db
      mise-correlation-id:
      - 070370bb-a8e1-49cf-8e99-367723c6ba8b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590742.749.26.830262|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"cduqvgp8p4v7ka\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-GepXlpmQhA+MdeEI0R6hfA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:22 GMT
      grafana-trace-id:
      - 8e273c109b1e984fea53f1e71492574d
      mise-correlation-id:
      - ec16e70b-4b6f-4adf-a96d-248b6a97ae78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590743.041.27.583855|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:54Z\",\"updated\":\"2024-08-13T23:05:54Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"fduqvgq8p66m8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mA+szAVsE2/xEuETwZpIqQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:22 GMT
      grafana-trace-id:
      - c8e18f5c60be92b75ebd3405efde5957
      mise-correlation-id:
      - 057f53b8-9073-4fb1-86c4-03c3140d7867
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590743.359.28.54894|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":19,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-qzf2OucfZ9syB90dFJLA6Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:22 GMT
      grafana-trace-id:
      - 28d3aae324708e486115264cd6b9be45
      mise-correlation-id:
      - 468391a5-23d0-4942-814e-07ecf1e6c0d4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590743.676.26.43349|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FynR4IIrML0VKjK3QRvbrw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:23 GMT
      grafana-trace-id:
      - 05bdc6738d32c661c0d08c7c0aad2751
      mise-correlation-id:
      - d7b28475-cd56-44fa-9100-52956c5e669e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590743.959.28.989485|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":20,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BJCoiW9btD1/5pExXe/fVA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:23 GMT
      grafana-trace-id:
      - 7b133bda91faac4119505e96f8e85a3a
      mise-correlation-id:
      - be5b3b2b-d1d0-479e-b8e2-c82587f169d1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590744.305.29.572225|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Nv7D/DEnLv9RMpQKLklWGg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:24 GMT
      grafana-trace-id:
      - 2d7ec0e33877745c96bde6825ca1d0f4
      mise-correlation-id:
      - 26637322-fb39-4628-87ee-bab563e0bea6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590745.489.31.86187|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zmHKoSamvOfPu9+luXnJ5Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:24 GMT
      grafana-trace-id:
      - bc15c47782149fd504c6803e127bf62b
      mise-correlation-id:
      - 968c4b3b-7438-416f-94d6-497f29ab1028
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590745.847.29.791090|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-LUgYgfnp25x+Y1jILOpNJQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:25 GMT
      grafana-trace-id:
      - 154b8f2456a980465c371755b3aab430
      mise-correlation-id:
      - b033c9cb-58cc-433d-88e7-36d47e3379cd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590746.164.31.353242|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":21,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dUQmkwYZ0FZl8WCYGGc9Pw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:25 GMT
      grafana-trace-id:
      - 3b4e30e35eba09d6b42f8cc01249024e
      mise-correlation-id:
      - 26160b1a-ea01-4959-a05f-9eae9cb6bb9e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590746.505.26.576786|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:54Z\",\"updated\":\"2024-08-13T23:05:54Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"bduqvgpfkctfkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/bduqvgpfkctfkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":25,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xavfLIfVHNUYxNy5PPlNug';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:25 GMT
      grafana-trace-id:
      - 13c0f46fbe276412c88190b9af211868
      mise-correlation-id:
      - 4d568d8f-d517-4428-9a5c-d4c070a9cf5f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590746.812.31.3267|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":26,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1jpFmPOqY6/Ez8OWqQyxuw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:26 GMT
      grafana-trace-id:
      - d7b1b0c00d5f699c6aab2af74dc4d889
      mise-correlation-id:
      - c1f01b00-97ed-4ee0-9f9e-bbdd85c52857
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590747.153.26.102896|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":22,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RaSkHaGOSHQDFYYS0/Xz2A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:26 GMT
      grafana-trace-id:
      - 0cb6f1d37ca57482b308ae6405da9e5a
      mise-correlation-id:
      - 40878201-2a8e-406f-80b2-852d1c75697b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590747.457.26.517072|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:12:13Z","updated":"2024-08-13T23:12:13Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":39,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RoCDbNSuLSPUgOP5KVSlFg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:26 GMT
      grafana-trace-id:
      - 2f0b072b81975818b6f61e6f32132117
      mise-correlation-id:
      - 7f4afcf5-7905-4d4c-8798-611c9bbc943c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590747.804.28.150046|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"83aa72cb0ab048ced5c28584b0daa7e6"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TOU7UDbXis+JaXiat8WMbw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:27 GMT
      grafana-trace-id:
      - 83aa72cb0ab048ced5c28584b0daa7e6
      mise-correlation-id:
      - 5b83426d-02f0-4c07-bfb0-70706b15a682
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590748.043.27.278118|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVd/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-08-13T23:12:13Z", "updated":
      "2024-08-13T23:12:13Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 1, "hasAcl": false, "isFolder": false, "folderId": 0, "folderUid":
      "", "folderTitle": "General", "folderUrl": "", "provisioned": false, "provisionedExternalId":
      "", "annotationsPermissions": {"dashboard": {"canAdd": true, "canEdit": true,
      "canDelete": true}, "organization": {"canAdd": true, "canEdit": true, "canDelete":
      true}}}, "dashboard": {"panels": [], "title": "Test Dashboard", "uid": "mg2OAlTVd",
      "version": 1}, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '803'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-egXxzEfFg3aoWItPDFSoOA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:27 GMT
      grafana-trace-id:
      - dc7a17285721e018564f5da1a81f5cf2
      mise-correlation-id:
      - 2c363028-da76-4d5e-8ff8-94f2ff594300
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590748.431.26.104341|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:55Z","updated":"2024-08-13T23:12:11Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0CpaYchF//NWU22qEfnwXw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:27 GMT
      grafana-trace-id:
      - 363f958ad22013d24a1b836c9be5b32b
      mise-correlation-id:
      - 574f0fda-1b47-4e91-8ab7-53140caafaa6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590748.881.31.485718|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"da7080e9d3c3070f911f57412ae4daa0"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-z5E+kMVxfpoMq3Vf+8q9tQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:28 GMT
      grafana-trace-id:
      - da7080e9d3c3070f911f57412ae4daa0
      mise-correlation-id:
      - b8d9ccc8-fc10-4b4d-89b8-ac33fbb0fb20
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590749.178.26.401092|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVa/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-08-13T23:11:55Z", "updated":
      "2024-08-13T23:12:11Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "eduqvzhe016o0f", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/eduqvzhe016o0f/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard", "uid": "mg2OAlTVa", "version": 2}, "folderUid":
      "eduqvzhe016o0f", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '893'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WFy5D+wg4PcORh5i3A71Bw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:28 GMT
      grafana-trace-id:
      - f92a4ce1a74220822a6b882cab69ba08
      mise-correlation-id:
      - feb161d5-d9d4-4f9d-8729-9b86e9834940
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590749.423.31.838976|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:56Z","updated":"2024-08-13T23:12:11Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lBKwaxlMTWUApEYUO3rmjQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:28 GMT
      grafana-trace-id:
      - 20d95d17aaf7f40fba4bac54b257d3c8
      mise-correlation-id:
      - 7d007a2f-ad13-4952-92ab-c70cfeceb987
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590749.717.29.546334|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"e970c7dc28e07abfad0ee6746ae22e4a"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-+b1cl5gwgLYrBHge5/NoTA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:28 GMT
      grafana-trace-id:
      - e970c7dc28e07abfad0ee6746ae22e4a
      mise-correlation-id:
      - 9659af48-1142-4aa5-a4fb-a92396334222
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590749.893.29.311515|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard2", "url": "/d/mg2OAlTVc/test-dashboard2",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-08-13T23:11:56Z", "updated":
      "2024-08-13T23:12:11Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "eduqvzhe016o0f", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/eduqvzhe016o0f/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard2", "uid": "mg2OAlTVc", "version": 2}, "folderUid":
      "eduqvzhe016o0f", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '896'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":35,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HU+VqtN3KJFrPGt3ptLVTw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:29 GMT
      grafana-trace-id:
      - c211d4450348a9fcfbe3395416fd64e7
      mise-correlation-id:
      - 96d2041e-613c-48bb-9f1c-e14ecd31c1f4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590750.13.29.686314|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":27,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-KdptRLCsX7GgyS4wJAhG7w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:29 GMT
      grafana-trace-id:
      - 1a2493d958fb9198008d9c02c75f4865
      mise-correlation-id:
      - d0afafcd-6f37-4ee6-8372-8cdc23e087dd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590750.485.28.641055|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Y7VRXDMncheeHiwpfE0ppw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:29 GMT
      grafana-trace-id:
      - 1e49a44d24a7a91d67ccf679e2043b0b
      mise-correlation-id:
      - 47468eef-d827-40f1-9b96-87c63aa29850
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590750.939.28.541801|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"cduqvqotkgq2od","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"dduqvqmg6fojkd","title":"Azure Monitor"},{"id":14,"uid":"fduqvqo2v1szke","title":"Geneva"},{"id":12,"uid":"dduqvqnw7bjswe","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zSGh3X/8/3s/HhpqLMCb3g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:30 GMT
      grafana-trace-id:
      - da2e19b8e67b822056368e5c85460b1a
      mise-correlation-id:
      - 62f9840b-1eff-4054-ae66-08668f5dab97
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590751.205.31.309488|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:12:28Z","updated":"2024-08-13T23:12:28Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-cHW79y7C22vWK0cV0eRLVw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:30 GMT
      grafana-trace-id:
      - 506add3500d6c52307b055cc9035425f
      mise-correlation-id:
      - 0f51c9ad-a033-4dd8-bf1e-3296e906ebbd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590751.644.27.547916|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:12:27Z","updated":"2024-08-13T23:12:27Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-W2a6tAhhyN0PSn5CYf9bYQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:31 GMT
      grafana-trace-id:
      - e4a2116d5e40154f4caf0c7119ee70af
      mise-correlation-id:
      - 7965cb54-723f-4853-a98f-8d88ccfb1b64
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590752.114.28.744494|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"id":34,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OI5Qe+S3SLPEHlNW7CiwGA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:32 GMT
      grafana-trace-id:
      - 84732dd47e1a52f70a58cba11d0c6fdc
      mise-correlation-id:
      - 6d1d69a7-d830-4ae2-864a-105960e3d2c9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590753.226.29.676206|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"id":35,"message":"Dashboard Test Dashboard2 deleted","title":"Test
        Dashboard2"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '81'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-F7UQXcquCdlto3mIJ4twOw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:33 GMT
      grafana-trace-id:
      - 080e4925cf59138b65a8799990e773f8
      mise-correlation-id:
      - 4233b095-854d-4117-aa85-f00dbadeb0a5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590754.307.28.556831|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:34 GMT
      grafana-trace-id:
      - 6950409c6352bbf81f33ba5a0b3122c7
      mise-correlation-id:
      - 0bab6a3e-57ef-4919-9e0f-febbd856df97
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590755.194.31.97490|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:34 GMT
      grafana-trace-id:
      - b7b07acac6d6fecff754f86b8aac46fb
      mise-correlation-id:
      - 83366021-8304-4ac4-ae35-d270687dbf68
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590755.535.29.853864|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"fduqvgq8p66m8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"eduqvgnu26yv4c","title":"Azure Monitor"},{"id":14,"uid":"bduqvgpfkctfkb","title":"Geneva"},{"id":12,"uid":"cduqvgp8p4v7ka","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-JgHuRHWkpAOlT61VYAhHsw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:34 GMT
      grafana-trace-id:
      - fa942e6e66de3ccc6bb83df2a1d52859
      mise-correlation-id:
      - 3beae29f-99d7-4dce-a332-fc133f7f2fea
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590755.778.29.381348|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"cduqvqotkgq2od","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"dduqvqmg6fojkd","title":"Azure Monitor"},{"id":14,"uid":"fduqvqo2v1szke","title":"Geneva"},{"id":12,"uid":"dduqvqnw7bjswe","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"eduqvzhe016o0f","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tCPAbcJNtgeJ9r8ulwK/dw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:35 GMT
      grafana-trace-id:
      - b1ab42ca9f69303852c1ec923488bb7e
      mise-correlation-id:
      - dc056055-aa62-489a-b21c-1bf58d2cc1d5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590756.094.31.796313|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-CiVtL7jYkpGMXU3BRn5lvg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:35 GMT
      grafana-trace-id:
      - cf26fab59c64dbcdc7cd5f3129310567
      mise-correlation-id:
      - 05804d8f-edce-496f-a6d9-fec8c0b5bbf5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590756.407.29.595471|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"73D886AA-48C7-4C13-BA14-47D1EE4A5EF0"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4xwxRZSOt6zY2+izgD6TLA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:35 GMT
      grafana-trace-id:
      - 9c588be45b56e81694e8ac6c1076dbaf
      mise-correlation-id:
      - 2d9ed704-e6cb-4571-99ad-cacc3dbe95c2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590756.693.28.571285|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":17,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":18,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":7,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":3,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":6,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":2,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/Azure Monitor","sortMeta":0},{"id":23,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"cduqvgp8p4v7ka","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/cduqvgp8p4v7ka/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":19,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":20,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":21,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":25,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":26,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":22,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0},{"id":39,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":27,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Sq5VFO8RNoYxdQyqny9DpA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:36 GMT
      grafana-trace-id:
      - 71cc71c56d326e420a7105fabf5dbe30
      mise-correlation-id:
      - 78267e46-37c9-4e3c-bd45-9ebe29107025
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590757.042.30.914202|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-gxKqkuwt8SfCLNpau85/aQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:37 GMT
      grafana-trace-id:
      - 9e4afd5586291ab60659f9b9cf3f3bdf
      mise-correlation-id:
      - 23b46620-bd96-4b2e-bdce-cb0d037c4eda
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590758.69.27.320379|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"bduqvgpfkctfkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/bduqvgpfkctfkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":15,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9lO4+Fpk34PpeQaIayfOSQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:38 GMT
      grafana-trace-id:
      - 7199a178b6b8d05bae6258850903a677
      mise-correlation-id:
      - 1c6da2d9-c51f-4b3d-9c1e-4681b074cb34
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590759.159.26.297579|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6ggmVukAVGhs5ZQHzwenzQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:38 GMT
      grafana-trace-id:
      - 0a7baacd6fcbfa8ea0f6c1ccc0589977
      mise-correlation-id:
      - fabc913b-6466-4201-9ec9-4dc8f8cdc640
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590759.478.29.430312|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-t2BnVYSrwjOsPgnyoXySUg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:38 GMT
      grafana-trace-id:
      - c33a222d085877e667f87f996d186bd6
      mise-correlation-id:
      - 22d30794-8084-4e9a-84c7-f3052cc714ad
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590759.857.26.153038|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":4,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18653'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jbP/f7YWmhKIMqKQtHw3qQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:39 GMT
      grafana-trace-id:
      - a4e3f6d5b5f30a9dcd5b5645d8aefc69
      mise-correlation-id:
      - ad34a078-19b9-4aa7-8b4b-ea2048de23f5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590760.195.28.366562|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":7,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-uSlpg/aojxCU+NIEg4/0Ig';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:39 GMT
      grafana-trace-id:
      - ca7e38ec2222f61fd0ee943d708d106e
      mise-correlation-id:
      - bbac01ff-9722-4398-ac70-015203472da0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590760.576.29.479870|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":8,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-eFswGbYaYG2EUiXDVU3ESg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:39 GMT
      grafana-trace-id:
      - 5ded5ba97844f25385b541c1dd9a9a3c
      mise-correlation-id:
      - 983fbf35-8575-4b7f-8336-70b4c532e033
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590760.953.27.40659|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":3,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-X2IUsVpHBQjxYAEOG1CTNg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:40 GMT
      grafana-trace-id:
      - 2e297971f9a0589a6d34d2353ef85382
      mise-correlation-id:
      - 21c16fae-ffae-4ce5-948e-791880c82ab8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590761.251.27.927402|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":9,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-c4MrkfcgYF13lS3ESP3XtA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:40 GMT
      grafana-trace-id:
      - a31a9fda27806615fba6f72346c89b57
      mise-correlation-id:
      - e02d6aad-15b1-4c43-84f6-f0ed0d5eeb0a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590761.608.29.61043|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"eduqvgnu26yv4c\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/eduqvgnu26yv4c/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":10,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37723'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nMcw/IjzfKLRGW6WE9MLkA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:41 GMT
      grafana-trace-id:
      - d654558e32d22fb05d47840068d8524c
      mise-correlation-id:
      - 82381d32-09fc-4f54-8bca-5bf20c06fbb6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590762.095.29.587363|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"eduqvgnu26yv4c\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/eduqvgnu26yv4c/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":11,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123790'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-z9CGxwoA/CfxaTzP0Duc2g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:41 GMT
      grafana-trace-id:
      - 55f29564d32fb7c71c83bfcd5e8e2f6c
      mise-correlation-id:
      - a82e399e-fbf7-4fbb-8050-33e276c47a8c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590762.403.26.334911|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Xo6h2b9mzOSCIp0pfmkJJA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:41 GMT
      grafana-trace-id:
      - 9774b6557bb5a4890ea3ab047b3d58bc
      mise-correlation-id:
      - 1465c483-29c2-4372-a4d5-4e6859412682
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590762.746.28.984107|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117797'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-FBgKX6BNA4aKNQGf9F6qow';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:42 GMT
      grafana-trace-id:
      - 487ab3dc3c2b963cbeddd60c08b0c1df
      mise-correlation-id:
      - da5ea2f6-f412-4dbf-930f-fee5925fd3b3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590763.203.29.706721|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"eduqvgnu26yv4c","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/eduqvgnu26yv4c/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":2,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-kpMjAH0QFXXLebHK0Hl74A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:42 GMT
      grafana-trace-id:
      - cc58290d86d4bfd860f60be5312dfac0
      mise-correlation-id:
      - 901cf11b-80a9-488e-af84-963e457879e8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590763.504.26.184118|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":23,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tW0O7Hx1D9V4YHvrpcIY5w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:42 GMT
      grafana-trace-id:
      - c80d569511f2012f50531f1540ba98ab
      mise-correlation-id:
      - 830e13dd-56bc-4670-a86c-a9308707dae5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590763.877.30.950964|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:53Z\",\"updated\":\"2024-08-13T23:05:53Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"cduqvgp8p4v7ka\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/cduqvgp8p4v7ka/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6AZVS2qJ85WgtxZsfIJogA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:43 GMT
      grafana-trace-id:
      - ea7b7110429448d18752bf46908f44b9
      mise-correlation-id:
      - c9370b6e-1c1c-4341-b6d2-a5108ed8be27
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590764.268.27.481771|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:54Z\",\"updated\":\"2024-08-13T23:05:54Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"fduqvgq8p66m8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-EOZSFF/8p64D7c9Cr5Mjvg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:43 GMT
      grafana-trace-id:
      - 9f9709815d378323b17d66514098a509
      mise-correlation-id:
      - 478a5233-b166-49bb-b1f6-ef56699966e2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590764.565.27.442814|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":19,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Rg4VY5EXI0NoEso9k9YsoA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:43 GMT
      grafana-trace-id:
      - 9fc90e2c381676b9a53e59a021c57f43
      mise-correlation-id:
      - cb9ae286-d29e-489b-a139-74f37eaec958
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590764.897.31.916118|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-e77BHHtOwU6HUnPtvyksaQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:44 GMT
      grafana-trace-id:
      - a949f1a9a43ba4bc599eda4215fa354f
      mise-correlation-id:
      - 436f8ba9-efb8-4cc9-a964-5143c40e0ef5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590765.208.27.819628|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":20,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7g4TGvFBxv7jmdaec/sqSA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:44 GMT
      grafana-trace-id:
      - 64fb26811af998ce516f727d9ddcf20b
      mise-correlation-id:
      - 65ec520f-a2b3-4882-af87-8e22347a546d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590765.481.28.451364|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-HK2FE/qNXzLFYnq/Xij6VQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:44 GMT
      grafana-trace-id:
      - 63bc8d0d67cd72d16458e5decc488f3d
      mise-correlation-id:
      - d41a155d-f237-42e8-865f-d5617ec0ae66
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590765.717.30.307839|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"fduqvgq8p66m8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/fduqvgq8p66m8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0F7HnyOMWcUuPIt1UQt3iQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:45 GMT
      grafana-trace-id:
      - eb5723ca118a79e8015ef06ae6317105
      mise-correlation-id:
      - a42da624-e584-4070-b873-0e587cb115a0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590766.088.28.484090|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-d2ave4WnDsAkAxkrW8X1cg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:45 GMT
      grafana-trace-id:
      - 08bc20aa0dc26ea278a6e27b97a686a3
      mise-correlation-id:
      - a61bf5fa-af71-4a74-a3ee-cf8c2e619efc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590766.678.28.230513|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":21,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-SlMv7fBen4NyC1Djhh1U7Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:46 GMT
      grafana-trace-id:
      - a27c3ea3ee8fe069dc8ba4e593fd3d74
      mise-correlation-id:
      - 992e0d46-3a36-4964-bca6-f596bdf29363
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590767.02.28.384683|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-08-13T23:05:54Z\",\"updated\":\"2024-08-13T23:05:54Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"bduqvgpfkctfkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/bduqvgpfkctfkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":25,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-dOdkewS17NeYrvM9uH3Owg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:46 GMT
      grafana-trace-id:
      - 3bcf0ed3b0d5be317f3f3401b92f388f
      mise-correlation-id:
      - eb4376bf-1c65-40ea-a07d-3be2907e18ef
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590767.272.29.994772|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":26,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-KE5UpKubJL8OpNlKbVl5aw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:46 GMT
      grafana-trace-id:
      - b8dff6ee138e4b94ce53d1a1f83407d8
      mise-correlation-id:
      - 7ed276a8-cd00-4aa9-a2b0-af0c03353c2e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590767.541.31.914381|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:53Z","updated":"2024-08-13T23:05:53Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":22,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-DIoXpHH95PAvp3dNgihgSQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:46 GMT
      grafana-trace-id:
      - 35132f67b373b345211519fba40d2149
      mise-correlation-id:
      - 62731d7c-ac56-464f-ba48-f484361ba4c4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590767.752.26.950429|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:12:13Z","updated":"2024-08-13T23:12:13Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":39,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VB9mUvyKlMmo2NirtGhaKw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:47 GMT
      grafana-trace-id:
      - a2a16a3ecc32349c6aadf6e541822fd2
      mise-correlation-id:
      - a46a0ca6-2be2-435f-8701-5733cc95f7c2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590767.974.28.324244|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"id":33,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-2loWP91A2uu/36buKNEtnQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:47 GMT
      grafana-trace-id:
      - 4d9960de47d2930e86bb19e951c6b2f3
      mise-correlation-id:
      - fadb9a8d-e250-4724-8ea8-8735cb147e34
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590768.228.26.667807|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVd/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-08-13T23:12:13Z", "updated":
      "2024-08-13T23:12:13Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 1, "hasAcl": false, "isFolder": false, "folderId": 0, "folderUid":
      "", "folderTitle": "General", "folderUrl": "", "provisioned": false, "provisionedExternalId":
      "", "annotationsPermissions": {"dashboard": {"canAdd": true, "canEdit": true,
      "canDelete": true}, "organization": {"canAdd": true, "canEdit": true, "canDelete":
      true}}}, "dashboard": {"panels": [], "title": "Test Dashboard", "uid": "mg2OAlTVd",
      "version": 1}, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '803'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":36,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lwJ6mKQlfFDb1OZZIVuz0g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:47 GMT
      grafana-trace-id:
      - e2990191d77f9227ed5de608f2402e97
      mise-correlation-id:
      - 989f0978-8f5b-445c-b48d-c18790057fa7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590768.433.26.929327|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:55Z","updated":"2024-08-13T23:12:11Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nzxKXvSvvEJnAPYYF2Lzrw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:47 GMT
      grafana-trace-id:
      - 04ae557f6e2af2b4d307afa55b8be87a
      mise-correlation-id:
      - 48dbc419-b351-44c3-98c7-cec1611c7bdc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590768.744.29.504328|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"d5970e7fe2ecd129f6da28caa899f08a"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-a7ofKs3CojUg45CCBlczaA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:48 GMT
      grafana-trace-id:
      - d5970e7fe2ecd129f6da28caa899f08a
      mise-correlation-id:
      - 665583cc-8a79-442e-a69c-90a82868ecd5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590769.066.26.596390|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVa/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-08-13T23:11:55Z", "updated":
      "2024-08-13T23:12:11Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "eduqvzhe016o0f", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/eduqvzhe016o0f/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard", "uid": "mg2OAlTVa", "version": 2}, "folderUid":
      "eduqvzhe016o0f", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '893'
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"eduqvzhe016o0f","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0MmWbwwnb0l8Kw9uY+eIJQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:48 GMT
      grafana-trace-id:
      - 05fc14aebecdc72b0876ff94b5738ab6
      mise-correlation-id:
      - 74c143eb-1e3f-4889-8634-1030eff9e86f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590769.247.26.245303|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:11:56Z","updated":"2024-08-13T23:12:11Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7eROyxDEPiCS6q0lRPlolA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:48 GMT
      grafana-trace-id:
      - d904da657fff90bc23cb68c8f3306ced
      mise-correlation-id:
      - 9dc71368-518a-4336-964b-388df5a6ed69
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590769.503.26.846884|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-08-13T23:05:54Z","updated":"2024-08-13T23:05:54Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"bduqvgpfkctfkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/bduqvgpfkctfkb/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":27,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lIe6WawadZTpd/AbW9ck4Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:48 GMT
      grafana-trace-id:
      - ebc54422c07fa7a331fd1b116ed15438
      mise-correlation-id:
      - a112c4fe-f91f-432f-8fcd-358c9435b35a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590769.775.28.5785|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":16,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":17,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":7,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":2,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":8,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":9,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":4,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":5,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":6,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":10,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":11,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":3,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"dduqvqmg6fojkd","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/dduqvqmg6fojkd/Azure Monitor","sortMeta":0},{"id":22,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"dduqvqnw7bjswe","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/dduqvqnw7bjswe/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"cduqvqotkgq2od","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/cduqvqotkgq2od/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":23,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":27,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":18,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"cduqvqotkgq2od","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/cduqvqotkgq2od/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"cduqvqotkgq2od","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/cduqvqotkgq2od/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":24,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":25,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":26,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":20,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":19,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"eduqvzhe016o0f","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/eduqvzhe016o0f/Test Folder","sortMeta":0},{"id":36,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":21,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fduqvqo2v1szke","folderTitle":"Geneva","folderUrl":"/dashboards/f/fduqvqo2v1szke/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10208'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-SPJHAg537H/NZFNXtoWuCA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:49 GMT
      grafana-trace-id:
      - b5f0340d93fb0b753f97c3270fdee861
      mise-correlation-id:
      - dd00f375-2590-4b65-988a-ee210fb509d7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590770.192.26.635860|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.32.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/59w4HOtdo2jxChBTWFtvg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Tue, 13 Aug 2024 23:12:49 GMT
      grafana-trace-id:
      - a0d689d3ad11275b0d93af53f9121c2c
      mise-correlation-id:
      - 7aa2a670-4d1f-4358-b16e-814c314e7ac4
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1723590770.452.31.418607|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:03:52.9901929Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:03:52.9901929Z"},"identity":{"principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-fjgge2hnh0fzebfk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:49 GMT
      etag:
      - '"3900f0d8-0000-0800-0000-66bbe6fa0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: 5BE596B00E814C68AFBAFD68A40FA627 Ref B: SJC211051201035 Ref C: 2024-08-13T23:12:49Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:50 GMT
      etag:
      - '"02003cbc-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14999'
      x-msedge-ref:
      - 'Ref A: 5B5E16472770443D9DB63F4C625E24FF Ref B: SJC211051201035 Ref C: 2024-08-13T23:12:50Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875709752121&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Kufiu8l_nhCZAVpFd2bdLqZmbz0_RsjsQyvqhS9vFSA_riRBUFVwzCO4emcvFOu9SPMOXs6x69EgUlPam8GhXv5MS1HCSbuLURt_OoXGVun65BjJIuyIdWH9JapZCMW0qQy82h8J93uJAmuqErPyuF8ahoMX7s01jqFc7mgUS8p1kJU5HvvrfTXhSC95yFduCSYkQoxAq0dd6DhQVDR7TIvjos349F8HxCY-X7GrnBSnbBhRwTjtSButmqhIMiSzojpLvSdwncDzqUk9zwZMKvGGvpHH-9aVd36a66nh6-6Wuaxk8KWAkeI3Rroybqa4AYdKmyDGTA3j-OyLNVp70g&h=eMyRlOJyvwRofp-KEJgOr7hMI1LQm9aj6Su8g0ACrN8
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:12:50 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875709908378&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ZkLojkk_OCUjokGr6QoyrbdOZL0Vk8VXWGP57TcDJynpGY1CZ-At-v_VCWhZDKe6TJdUOY5_DjUreZQy8JoUuOz-rZ9vlGUdt5IrBOOw3jonvQKhVzqe3dtmP3kOhR0jTuOPTReST620xxAkhucQ2GTfUELCcoQzzep5RQMN981aUY67IsauxijjVeOmdWuxUo2OOla5i9fNIWMFIDJHc6PbBUbuD2w9NITaxpNQjdp_7JYhTv25uaSH1EkkvELpgzB4S-wbDCH6fiA3ZglRRoVqzULy38nm84CriecvkFhc_mhJu9Zxe2jyukCmoWngMFpoyN2P2SjwOW5ySvQdzg&h=I0zw2ggpQ9gB8mT9w1iNW-obRNUCp8msyY27d38AHn0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E5E0BC321D204865BF4E47B829AD56DA Ref B: SJC211051201035 Ref C: 2024-08-13T23:12:50Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876012675449&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=OWS3s1vWu2t-c27lF8y4bH3sufYeSlu_nEqEAtCO-XAL8Z2e6d_e83K7NM1z9SBOvMUv6Tbshad57kCiDsrI0ZCZThCFjG0df5DA9jyJIxsIEDmjhnD4_Z4LC0N1alspbocsZuRcHJocIOrrFHn5XPDoekn3-OoZZhfY0Ko68Jw3pjiPoYraFFgerO5vacdpf84lphWgm7M0g7S_3nWCmUPa5I2i_nvnfxpnIXktGhFQSS7RzI9Gvb71jmiT9ekQRPG2JR1ZjaxRRhXbZg2TnMA6jrPviC53r0lziazWUQ7DN3jdQ4UnUKn5-UJ25shcYnpI4YPe6sGz4iI_6u40Kg&h=12RZiUARn3waT3QvI4_2zi54a-CTDxQriXEjZTathuw
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:13:20 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876012675449&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=OWS3s1vWu2t-c27lF8y4bH3sufYeSlu_nEqEAtCO-XAL8Z2e6d_e83K7NM1z9SBOvMUv6Tbshad57kCiDsrI0ZCZThCFjG0df5DA9jyJIxsIEDmjhnD4_Z4LC0N1alspbocsZuRcHJocIOrrFHn5XPDoekn3-OoZZhfY0Ko68Jw3pjiPoYraFFgerO5vacdpf84lphWgm7M0g7S_3nWCmUPa5I2i_nvnfxpnIXktGhFQSS7RzI9Gvb71jmiT9ekQRPG2JR1ZjaxRRhXbZg2TnMA6jrPviC53r0lziazWUQ7DN3jdQ4UnUKn5-UJ25shcYnpI4YPe6sGz4iI_6u40Kg&h=12RZiUARn3waT3QvI4_2zi54a-CTDxQriXEjZTathuw
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B84C0F7BCB054A22B601652BCA75CCF7 Ref B: SJC211051201035 Ref C: 2024-08-13T23:13:21Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876315763893&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=eQLcOSII5biL5iBDDe0u45jPiH8dNHAWuk8Upgge2kLNnFAgbrx7DeJSaDXB6P5LUrBVJL_6Pn6leO5OXR1vibUtbkDXx-t7Rr2owOe4cPDuUUp84vvHboSusSWbyDNjiELaOP1y_3RCa9vYLs0wd__MPErA3TfBz1e_7XH8AbDUgVW45owv1iVP5m5LW_1eSBbdSRS7OY07d2Bh4JkvseitHCwCcBooVpLbyEAN_KgjACDaF9peHZ9OcDWZk6bf4gnK_9OpII79DnYa1MwowxZkQjsiyeKZCo4gXey87m7owRnpQ264Og-7-_Ta45jIWoMstZrGm54G8V85TDWZPQ&h=WRgA_UzHfUUXmiMzRq7GztGNf8Xz0rukzp9eJPd5lQM
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:13:50 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876315763893&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=eQLcOSII5biL5iBDDe0u45jPiH8dNHAWuk8Upgge2kLNnFAgbrx7DeJSaDXB6P5LUrBVJL_6Pn6leO5OXR1vibUtbkDXx-t7Rr2owOe4cPDuUUp84vvHboSusSWbyDNjiELaOP1y_3RCa9vYLs0wd__MPErA3TfBz1e_7XH8AbDUgVW45owv1iVP5m5LW_1eSBbdSRS7OY07d2Bh4JkvseitHCwCcBooVpLbyEAN_KgjACDaF9peHZ9OcDWZk6bf4gnK_9OpII79DnYa1MwowxZkQjsiyeKZCo4gXey87m7owRnpQ264Og-7-_Ta45jIWoMstZrGm54G8V85TDWZPQ&h=WRgA_UzHfUUXmiMzRq7GztGNf8Xz0rukzp9eJPd5lQM
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 7C2961D5EB154CADBB7543A8B5BD069A Ref B: SJC211051201035 Ref C: 2024-08-13T23:13:51Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876638183285&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=hJKjum54ZY9FjW_g0btAk-eua704oPBMUJ2VitJCnpb2qPmU1_mehPxkLeswZuUJGijxdG9k1isP-5EWI5tMu-3KlNLUSN_u7Gd3qzgaxJlKwBNTnL3FC1Yihbtnyg_FGU4IsEeSxN5fNcGP4jimJY8scE86xJM44RH2XUnuLfA_QmqjnAJCskdJJljxw5AahDn2NbIPR9xlSmm1aFI3SCXrFgXewvrsqhM94cqF5k6MgOUxRu4dO-fJoE17Evcv8lpqbbYjcLbON2Dh89cLIeXCQgPIaNRgeEraSwHZdp6UWpLSf4LcL74mLpbVCIaZN_q7qzSB6UZ6mNpJOuVXnQ&h=sNkrDJhLjF6baBrh5Sal9aEjJycLRI2EVncwZAiJpFg
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:14:22 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876638183285&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=hJKjum54ZY9FjW_g0btAk-eua704oPBMUJ2VitJCnpb2qPmU1_mehPxkLeswZuUJGijxdG9k1isP-5EWI5tMu-3KlNLUSN_u7Gd3qzgaxJlKwBNTnL3FC1Yihbtnyg_FGU4IsEeSxN5fNcGP4jimJY8scE86xJM44RH2XUnuLfA_QmqjnAJCskdJJljxw5AahDn2NbIPR9xlSmm1aFI3SCXrFgXewvrsqhM94cqF5k6MgOUxRu4dO-fJoE17Evcv8lpqbbYjcLbON2Dh89cLIeXCQgPIaNRgeEraSwHZdp6UWpLSf4LcL74mLpbVCIaZN_q7qzSB6UZ6mNpJOuVXnQ&h=sNkrDJhLjF6baBrh5Sal9aEjJycLRI2EVncwZAiJpFg
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 98BD1C6F8BE541D0BD468A0F9D6AF054 Ref B: SJC211051201035 Ref C: 2024-08-13T23:14:23Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876940129611&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=R6F-pZ6A-Cnwt_DeC0T-jZxvIHog2POnVW3CNXVeQUU9c32j9LRSjLeGfGA7JckrWK-D0Q-7Mk-Xktwcz1IxwyGnByEb2Qn8htys0JQOdqztl94zdQFnzVJfRIt--BSlB139PfyKSABKd-hjh5D2rF6h3xfFXTT0peEqIc7K_d_lnJHYBtSIuPA11koOYVLYJG0F3GkzjDtqpyf0XIYAMmw3OzUJrBFssEOcbxn21gaM9BYwjzGdLw9Gjin7kXpYWgxr8hHhLCW1svXIMV9K3kly7-BU0ugXiegQ3dDmEywxWjRH_JnbM_ttJ4KX4RDWmVPMrMGnCVURznaqvn6e8w&h=wzrqUGYsDBcjxFOhiNthj20DZZUO_gh5HYvbxLjUXDI
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:14:53 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591876940286009&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=EoBhFqaHbKdrSNc2w9W8G_vQafU3ux-N4S7XERocmosgLcQ2F0sCwABKJsH9Zqi4qxfkIPFtLckKazhyJHseJClRy1_gUwQclOQ4kJfGMYbZzF1NCcvT3NePe8nKqlwazddtcB3PUpNw9JdL4yzbxZiI4BcFHQMcTPI48n08dArm07EL20MdFhjl1KdM2B0G8u-8ibjxs2EEqaFNd_xNGdTfC-fKQtfLtL19boPNFk69uYtEypeYN9xpHAPljlVWu_VlA6xW9lEDmZDDsbcPnzEGddi-Plojj2y5d0j5oEsl4nhropiCyl7mTrPd_W_KdhEGVZ_ALzpBAIaCHMkopg&h=aYiKzwAcJiV2WWLv1F_IMITHnri4Cw3-P6T4Aqz6CpA
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E81F67C854DF48F3A8A205FDA2C22D3E Ref B: SJC211051201035 Ref C: 2024-08-13T23:14:53Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877241697176&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ehm5NI0teAPPlK4JERKQpJhzdBcBlWymbuDBiuOYSMZ3mJCng-OATtcDxVgmXdIQvBOIeqeI0W-R_Orv90vnOdBrY8sgqydg1w_Ag8pmGKYQcugQKYMk8wIJWr5qXDFDJF_2x0eX2tHNtIeSQy2PdEZHH3S3t9VCJmhAw7T8rhLa61M2ijBFJVuk5ND5ilGkafsKRonN_tR04vhuYxNUNo7LhS_h9Ih-2XbUh7-_Z-uBIGixvF7bbelLzGHtLTo35tpS2VTlMRGSwWU35oanS84tK6jmOG9enp1oS_5bfxR0txwz5iDi4YCvhwXvTu5AouFbE3Sp9Rd7COG1mSN1HA&h=NlJ-4jnoKY8Psk1xawnV_BDYwMbTR5PbJ6m7tTy2J0s
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:15:23 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877241853422&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=oBs354AMdHSDox32SgGlcbamMWq9OS9qiaYDOV6YjoEA4BEDAm8wNV0wRcyhAvcTrWwY70W2O9tRle0Wk3XixE5m_W6SS3fctmM2ubQJDZTzhlZppFWtapp-fyeEPMSkeVybQSorB13NNfTTTo-URYU9J1WiVP8dqo_k_zqjPD5PTF0WtzCtzYJNXX33TBdRyQODzHjRks957wpLLrEar_BzCos0eTF86YEreT0iajoJRdGH3GTRZYBQGRd0AiKO778J-w29wcyE39mlbCqzXJKTUC4mZ_M5LBbufi9Mg9xul6p2KILyGnw5bQ19EPBAcNZ-hreMr5iFI3E3ZU_3Ig&h=WbZltSKiBJKPuGOVyupBPsPntUUzdriEYwUZ5CI9DsE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: F85CA96B31614499BA137FD73DD6A505 Ref B: SJC211051201035 Ref C: 2024-08-13T23:15:24Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877551368975&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Ez6_AYILKbJrIqta_AKGLXonCgZggnj3akKYFSq3VrwFgJtt3sLyncV3UpWi5E5QkCJTefmrVk72oyNNQPgVxAqE0Bkq5CZnuoCVig1Ns7a71zQWic2MVJfJ-x6_moifXXfYxZ872CdFj87us0TThqx2ZHJFtRoaeJENH9TY-rRw7XMeEXRa1j9A6Qy_kC5RWwQFP-UP2X3WKswhr8b_BJfpobbs7ybK_EhfsnAlJ0E1z8diRzsUReM60pmB_Cr1UvYPlybsgxGPjuORCxib5R6SlTz16KFsU5ECWAN_7mWvO1ZhtiheiAkHVqSd0cOs9lWiTjwaZeQcNIRVQvtjSg&h=CN3FYh2G9isZqUxk2R-ZO2ff3DTgf9lb_KKomk8SD5g
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:15:54 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877551368975&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Ez6_AYILKbJrIqta_AKGLXonCgZggnj3akKYFSq3VrwFgJtt3sLyncV3UpWi5E5QkCJTefmrVk72oyNNQPgVxAqE0Bkq5CZnuoCVig1Ns7a71zQWic2MVJfJ-x6_moifXXfYxZ872CdFj87us0TThqx2ZHJFtRoaeJENH9TY-rRw7XMeEXRa1j9A6Qy_kC5RWwQFP-UP2X3WKswhr8b_BJfpobbs7ybK_EhfsnAlJ0E1z8diRzsUReM60pmB_Cr1UvYPlybsgxGPjuORCxib5R6SlTz16KFsU5ECWAN_7mWvO1ZhtiheiAkHVqSd0cOs9lWiTjwaZeQcNIRVQvtjSg&h=CN3FYh2G9isZqUxk2R-ZO2ff3DTgf9lb_KKomk8SD5g
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 478624B30ED34B27913610874D97F49B Ref B: SJC211051201035 Ref C: 2024-08-13T23:15:55Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877853393666&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=RXdwKy_QOB5cLnTQ4Yf6K6oBsW9jjsgfls5CiiD-AE64cmEiC8xR8XTbsPBiuNjuPUR193r9REDv5rCpnLInXgB4UDfUGJAGe2dqP04bUBytYyPATGB7O7zLMti_GvXVcTsCI5Wh62S9WfF2bRGgV2HuuzFQ8vV6L1Ow2JV17oaRhsNPQ4kHsoHjWANkKbG4Qw4XBe7Mro0WusOKCK8qmI4MgNCYYgB2VugsfwZMVage8FTu1wWbCBBwk3fpkWWb_oD135oUYWDgH1o-4UY-gfyxpkXYKMHxK93E2tOxr4fSrR9NAJsNHajy8ExHBAJU-tvwrSA9zkrCSAUMsLv7SA&h=XtvNSSLgviRv6Ei1B7fwuBtWzXdRth8rPRO5mnLMzUw
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:16:24 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591877853549926&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Fp5jlmDxAC98h-HKNaMb5D8NRmg5Fcke074JH9UI1nyu978x-iPxO4ZtGdcJ6GS8Mwbbfj-MpWv1lH44pSqxDCGKXsJegAoarjUbEKNwafIk9EgQc1T-JV9LLdtIWZIPiZL6Qr6kdqMTqdanwp4N-xf47YecB5jM2ODV1aMqJs_NrzkFAsjtg6LIuI-P8JftkTrsuWeAVI--sZbkLDfaB82xWuWaZU0f3fN6HtlFPLMFT0ZZkEQ-BksC_3D-SXlTtEP88JlaObkYyVAsGr2JTv4gpf8Dci0XNr_QVZ05lTn6ggTAJFqpcg35m1IiRlrBYnPueP7YGV8ysaqk8C5WiQ&h=RCzif9Fcfx8oo3znyAp4in7yU6Dba6hEHVO1jbhMc6U
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 51C07ABBFBDA404F854723BA3C0D371F Ref B: SJC211051201035 Ref C: 2024-08-13T23:16:25Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878155828516&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ANiC4CnW3szk-5iSv5SfPjHxXu4KR8rUclwhb5J4YFxJLoQ5leUonHgDLTwZqhXW9gUfENFjCm2gpuytWmCByaJfhplHI0M1x-_JsX_a-UOSDaEwx4BAwYebGAG03SjGbhTo9iMz-pHgFr2B4swIblW3Ox8IxlMItBEU-Tm3LmhTOEpvOG1suvkAQ_JceLBSaG3bEJBNGPASsytbQW5TYPTBSprc3iytwdAqLP99QDq5EcYYJ4kU8Zcbtmb4LcUIjimBRh_wHoDKgHRvSnUA_w_bNuzaGDBKrc-7s-Ayi1k42QtijKXh5TRuJjzglzwUFKi5-6WMrjOJEVukhbSwLQ&h=V4RdCpeh0OC1Gqr4ia3dK4d0SFczwq5Cl8FTLSVwDnI
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:16:54 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878155828516&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ANiC4CnW3szk-5iSv5SfPjHxXu4KR8rUclwhb5J4YFxJLoQ5leUonHgDLTwZqhXW9gUfENFjCm2gpuytWmCByaJfhplHI0M1x-_JsX_a-UOSDaEwx4BAwYebGAG03SjGbhTo9iMz-pHgFr2B4swIblW3Ox8IxlMItBEU-Tm3LmhTOEpvOG1suvkAQ_JceLBSaG3bEJBNGPASsytbQW5TYPTBSprc3iytwdAqLP99QDq5EcYYJ4kU8Zcbtmb4LcUIjimBRh_wHoDKgHRvSnUA_w_bNuzaGDBKrc-7s-Ayi1k42QtijKXh5TRuJjzglzwUFKi5-6WMrjOJEVukhbSwLQ&h=V4RdCpeh0OC1Gqr4ia3dK4d0SFczwq5Cl8FTLSVwDnI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: EA2E4B5985984086BAA38C67E48D7B27 Ref B: SJC211051201035 Ref C: 2024-08-13T23:16:55Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878459379262&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=lqQrQ-GRJVeXtXsgdURqxdwkdxKEdu9M_loxSw8ifDnE_LWCSeWe4I7c0OxxPtqG6eUp7rUAJGuHtNK1AqQhIWYi2Tv7OAj_bKvLUHVlHZXkuEg8DFkqybsaspMK-vO6hMBu_WI_Hd08wZt-75Y1pTkgBcn23YkDzXsmBCQB7HKb6BqI25ifQjI6P0_i6jAtvw_d6sga4ybXEBktK6ewgLkNf1Vhn41rgWsmH41Eptyvf6f3OMKnEJRfT4oQGRHP57sWryUDMfuEuo3IrqiUM7KZL-E6syyby4BtvuD5FWL7ESLUTjuE65bUluazWvrW7dduWheVtNR6e0SVf2vsww&h=QQbtdD2hVrxT1Mu-eVQAWvma5NG4HA3ZxTq1ZKrP_SM
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:17:24 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878459535457&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=H68w1Rci2gpGROLcKKOoYOgRv04wpsi4JDfuLzyq53zgLR-mWxageuZEr1lqy8Ye9tgheyzM8o2bzt3PLEZh6yWbdOHZgTYwf6vNpNWhET4rOf5KiGvPpO6O9RU0lSyVLU_jnjp1KjV3zrRskleGgOfNOmv2uch80ROSLWtovUZkcBGC6uHXE80wKtdmsaxVTqdj1bnKmfrwRxtASI1FQX6RvG_307VrTnmFGR5lNyV3XQMLDXXw8857NwLlA4Bs6FdNvbeyrHjD221BsILELW5fhm9Y0USpOExp0T9c89311GXcxhFhqA0Z_nqFtNlR84vzntUqaQJRONTxHWbeWQ&h=1hKzdbw6_JGntMcznD32wPRI2B7qIY90LzkVRHcJDRk
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: FE968D01BDD441AB80E7B3F5B638C711 Ref B: SJC211051201035 Ref C: 2024-08-13T23:17:25Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-08-13T23:12:50.6590348Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878762259808&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=NJy4ydCx6akq9KYcrMiJq1h38f7_H9XJjIXUDx22u-GzA_JwQ5fwQEs-rYHk1UxjdD6xPMRvBEXwTbkzP8JuaikcnHWM6UMkTALVe-H5LvfeFzLGu8o_uxUoMAZ-iV0Oj8UUoOCDxLEFk56NA_kwCObzGMJ8LSNrtMPuw1MWqG7kqmDs_ih0zWAZCwQolJlNmbGhYkA-RzwNplPKRW1CnVq8phabN2Arkno8dEQyydGZCOnKWPwMJg15VaONik4m1cC-rXjI2feunp-CU4H_m_2w-M7GCIJpdul5ozyIg1qel7Qz-sckffSxS_aItICa37IU0sMeNwmxUpEgZM7S4Q&h=9tq9jUeHMtqqhLNTjkv7wl759CNZo3qbVVdVoq2VWOI
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:17:56 GMT
      etag:
      - '"0200d8bf-0000-0600-0000-66bbe8720000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591878762416100&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=bPt9pFBnJfYR2ayIWa8bYBOrRnxRPPiI2CaZtReSiPct0NcGpJb88XJPuUtVwN47jfe0fnZC7HKszkw0Ck1tVtMgBRgzeOFyExEZ_eychclIBqjRXAPyeIfn7H6sa-8Ju0ZFo9hpMea5qr6BwqrPuKjIyD13vxKhDFZic4d2--f7yhwfjzFxOMpbS9s_EsOgnrlVQjK3HRd5-GPQf2KDbXFBADrNMzCkirRQSuGf73NNhC40IW8M1P3p27IBaXnGLtM6S5hf_GSoAvs_3fQ4dO0jqA-sGB8TR1dLQlU4SLUojyxwD2HAnE39LxL5FjDbv9HQ1NRhyf7zsvuga5EtjA&h=KddJGRj7Kum8a7INxqbCAOVB0SOCu4YUQtIY-KlfX54
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: DB6EE84C133B462E82C03DBCE6B334EE Ref B: SJC211051201035 Ref C: 2024-08-13T23:17:56Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343?api-version=2023-09-01&t=638591875707943460&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=TkmgKRtTmVndq0gfAU6_f5bFMiQKI2_DBEdyicPDwc3cz9PXTVykt2K9rrd8Vq7ISYS1DMZSu4GVDPbhFuXmVJftH8itxanUfMtx_uof_cJvkxY93gZWr4rD34fPKXg66hl8n2Yrqfbv6KR4MZ6Hf7MwpZkvrSrGHbMqYV3Tcs-eb93enUoACFM1p5dgtz-Th7v61cya7PJnfJYUJZODOMqbrl__PbKh5nWyOwjm_WSGJ73uML-h_BQtpno-jlUNBG_dE7_CLBC65gYOJcn1H5IghLIl_OM7n54G7thFS-1Odnn6J_QdHYRSmcss6A0Sw4ihZgEE5H31aCuxFUqFgg&h=hUYRFm9GbpUi9A-Dv4rNEGSl-MemUXpchV3sWk2cMZc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","name":"7e9d32b0-dbd4-4d51-a07f-c3dc9c86cc28*722002384336510322B39333007F17E75060951B77803B4A93B428C3B7D76343","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Succeeded","startTime":"2024-08-13T23:12:50.6590348Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '538'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:26 GMT
      etag:
      - '"5900e48a-0000-0800-0000-66bbe9bb0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3966793AE60E476A8021ED87A6F9046E Ref B: SJC211051201035 Ref C: 2024-08-13T23:18:26Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'eb6e7378-5447-4d05-a439-b5d7eeb692a3'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:07:01.8715666Z","updatedOn":"2024-08-13T23:07:01.8715666Z","createdBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:26 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2EB5A47ADD054172898DC07A04005624 Ref B: SJC211051205009 Ref C: 2024-08-13T23:18:26Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Cookie:
      - x-ms-gateway-slice=Production
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"eb6e7378-5447-4d05-a439-b5d7eeb692a3","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:07:01.8715666Z","updatedOn":"2024-08-13T23:18:27.5863539Z","createdBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:28 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14999'
      x-msedge-ref:
      - 'Ref A: FD2B272070B444348EFDF522914A3DE5 Ref B: SJC211051205009 Ref C: 2024-08-13T23:18:27Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:03.1523129Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:03.1523129Z"},"identity":{"principalId":"fe43b446-23ae-466b-899c-106795e38f88","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-hzbhe4cta8gzaqe8.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:45 GMT
      etag:
      - '"39001ff7-0000-0800-0000-66bbe7a80000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-msedge-ref:
      - 'Ref A: CFFD6639688C479ABFB6E1A835DB8C24 Ref B: SJC211051204033 Ref C: 2024-08-13T23:18:45Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:45 GMT
      etag:
      - '"020064bc-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14999'
      x-msedge-ref:
      - 'Ref A: A9408311DE344DF98AD28F253E95968F Ref B: SJC211051204033 Ref C: 2024-08-13T23:18:45Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879263208099&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=VOrniKuiRhHMCmNYwhJqwcO3QGtP6ggnuYwRrqcZdj4rZR5PcPye7D-tvdmFuXneIiopPqZiPrGzeYYJN-D7G-bfEXmUTTdPpVAjhONH_6SHr2c7xFlNeQQgxcQKif_4f0-Wjme6kMFaE-eau_VIhyVKkiqBccOqr8ITiSlXx9lP0tBEpYIOJnlir-t6ObIVx8VL0TK1upZN-pa8FZlvIwXOZOZUxKjDE8BA649H74FnKzjPBvHejNt16_YyITB2opMI1L8R17iTWqwf4eTwIwP10-C2VAQ5NNgJ6Yi_eIFZ8BFyRWI_yDrWzmP7Fya1UwMrTYSolglLUN61IvQgWQ&h=95SRS8Jvmf7vvlrV4ZdCHfMUjrCZRkGJ3ip1OmjHAuk
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:18:45 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879263208099&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=VOrniKuiRhHMCmNYwhJqwcO3QGtP6ggnuYwRrqcZdj4rZR5PcPye7D-tvdmFuXneIiopPqZiPrGzeYYJN-D7G-bfEXmUTTdPpVAjhONH_6SHr2c7xFlNeQQgxcQKif_4f0-Wjme6kMFaE-eau_VIhyVKkiqBccOqr8ITiSlXx9lP0tBEpYIOJnlir-t6ObIVx8VL0TK1upZN-pa8FZlvIwXOZOZUxKjDE8BA649H74FnKzjPBvHejNt16_YyITB2opMI1L8R17iTWqwf4eTwIwP10-C2VAQ5NNgJ6Yi_eIFZ8BFyRWI_yDrWzmP7Fya1UwMrTYSolglLUN61IvQgWQ&h=95SRS8Jvmf7vvlrV4ZdCHfMUjrCZRkGJ3ip1OmjHAuk
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 22124CDD327A4259AA147C7C238F5FE9 Ref B: SJC211051204033 Ref C: 2024-08-13T23:18:46Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879566135244&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=DbdzWuyAVOJQ0tjaVW3MxNM3Lrk-Q8hqtDNDPMcECWaJX1YGdO1pv3da4MoBtGCNjWYlhISyN1694Iv2euon9UPMf4-kNkcoAuyXnaIzYogi45ePJo1hgXzFKI2W9EoLdtLyS9pQ02QAD-Fp8NenqjoWhLH19U94lqFo4OUTwCv0M73Q7-z85EBBCdgGcZPsOfEK_YSA81OzxP00wZfUsYrXeSxtlxeSLJ-7Q4nXixlLVkCVVSZQzvmiN4wtkQdUzsXxh0RuM_jidOW2M08YHvpW7GQk0q512lJA_HbXtfDb7ylggL9aDZQu9Apsr_UxO_M_sZf7pvqJKzyJ1nqUnw&h=LZ8hkTwAOjlFue6QH0EI_zjxmq5zW6kX0gwkE9V91-k
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:19:16 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879566135244&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=DbdzWuyAVOJQ0tjaVW3MxNM3Lrk-Q8hqtDNDPMcECWaJX1YGdO1pv3da4MoBtGCNjWYlhISyN1694Iv2euon9UPMf4-kNkcoAuyXnaIzYogi45ePJo1hgXzFKI2W9EoLdtLyS9pQ02QAD-Fp8NenqjoWhLH19U94lqFo4OUTwCv0M73Q7-z85EBBCdgGcZPsOfEK_YSA81OzxP00wZfUsYrXeSxtlxeSLJ-7Q4nXixlLVkCVVSZQzvmiN4wtkQdUzsXxh0RuM_jidOW2M08YHvpW7GQk0q512lJA_HbXtfDb7ylggL9aDZQu9Apsr_UxO_M_sZf7pvqJKzyJ1nqUnw&h=LZ8hkTwAOjlFue6QH0EI_zjxmq5zW6kX0gwkE9V91-k
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 94981557F16A4552B8CCE9947A610BD7 Ref B: SJC211051204033 Ref C: 2024-08-13T23:19:16Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879868903459&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=eSJcylif1FwkpRl6I0or9gHmkRb8Vfa9pxg01fog83u9nzBPAvBFT7v50WC6IUbsDfC6dQG6BqnXQTxUReiSZmaBsji5H2pfa67cj6ATblHimtKFIpT99_Qn-fyrAgmUwEWSdnBNnIK6Us6GmJ2G-e70AeyfR62hhV4SXKeea3NgDtdqBrKWmMSzeizqpfR4HtLQwxF7fyV_ZOv_UI-Jbg2O8vrBFYr05EsumdFOy6t3rHcBi41jfLUDd-TWCRzswvzX0y4D2stQ3CZy2VaMuMTdQSOWS9AEjXZkQvy8x4NyiC6FIklUHv_B2sPhVM982Oya8LmZlQWCGPcz5-gzqg&h=kBT5OZK95sAfMQQMQxyt6Pfw-0nesKOrABpiQE1xF3g
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:19:46 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879868903459&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=eSJcylif1FwkpRl6I0or9gHmkRb8Vfa9pxg01fog83u9nzBPAvBFT7v50WC6IUbsDfC6dQG6BqnXQTxUReiSZmaBsji5H2pfa67cj6ATblHimtKFIpT99_Qn-fyrAgmUwEWSdnBNnIK6Us6GmJ2G-e70AeyfR62hhV4SXKeea3NgDtdqBrKWmMSzeizqpfR4HtLQwxF7fyV_ZOv_UI-Jbg2O8vrBFYr05EsumdFOy6t3rHcBi41jfLUDd-TWCRzswvzX0y4D2stQ3CZy2VaMuMTdQSOWS9AEjXZkQvy8x4NyiC6FIklUHv_B2sPhVM982Oya8LmZlQWCGPcz5-gzqg&h=kBT5OZK95sAfMQQMQxyt6Pfw-0nesKOrABpiQE1xF3g
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B81AB9E5454A41958C882A9FF83574B2 Ref B: SJC211051204033 Ref C: 2024-08-13T23:19:46Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880171383338&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Wo0LkqQdbExRBBTs1hIirkrvmR9RSuqOewabAbv91N5aA2AMgM2CKEOJT8fStl_kzE2RARAuR_o9F7EbaRgAEAyW-hGVqn1dKOWpgPwBzdizaO2-VV31i5zkg3hRaoSqmpUpYji2Z1INmrpqae8fxRVjquXLV6ubDMIWlevMHSfMHyeaWZWTwAeV_3EZpKYtxIQGaXJqqhE8yEMU0JWGyJeAwAMCh84qQYPWqsJRZNjo5mnHAPESg6C64cXd5dXGzJArKqqYyAgY0Lgc-O9zICBodwfbKaM_pI_bamwOf8NoLwem-G7JgnMngaEBddtxP_zFpDvJlX5Im0QveN1ZtQ&h=YmTS9nz8ilIuONS1lTvxga543ym-rkn6IK5ct7ytxaQ
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:20:16 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880171383338&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Wo0LkqQdbExRBBTs1hIirkrvmR9RSuqOewabAbv91N5aA2AMgM2CKEOJT8fStl_kzE2RARAuR_o9F7EbaRgAEAyW-hGVqn1dKOWpgPwBzdizaO2-VV31i5zkg3hRaoSqmpUpYji2Z1INmrpqae8fxRVjquXLV6ubDMIWlevMHSfMHyeaWZWTwAeV_3EZpKYtxIQGaXJqqhE8yEMU0JWGyJeAwAMCh84qQYPWqsJRZNjo5mnHAPESg6C64cXd5dXGzJArKqqYyAgY0Lgc-O9zICBodwfbKaM_pI_bamwOf8NoLwem-G7JgnMngaEBddtxP_zFpDvJlX5Im0QveN1ZtQ&h=YmTS9nz8ilIuONS1lTvxga543ym-rkn6IK5ct7ytxaQ
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 0D1C671942E54E98B9041FD6718DF17C Ref B: SJC211051204033 Ref C: 2024-08-13T23:20:17Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880473567857&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ZExJwxr_TQ_Om9fTd6moC4moAYHLKqVlOUQk2IxG_DOFOyPs2f4kO80gpU5OgoLDkTbjJEp3JKRwpVqY3RZxJlxNtXf7BDmBVDOr2lU3-o_lh7Y1fAeSaEaqwIH5f01RlLzdX9TwbaWZ2XWOhwZ4t5UQrZJ0tAKgtQaCfUFxydknTKtK64Y0r2V6MCw1otNuVYycqPRefSpVvkBv5I3qWIhr628YefHsIrjTOZwofoIpE4ZBbbVVhfo1Y3wMcKMc3pxWejq4LvbJonCoxcpuPogJFMKzQLwYZ6QPHrarQGWmUwP1-SHD6m_D46Xj5JZ3N_geVKBTQO0EmS74Ckmyfw&h=dMHfDLDgUPR2dmeqNDEebKDyMqkee9LCMVZyGExIB5k
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:20:46 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880473567857&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=ZExJwxr_TQ_Om9fTd6moC4moAYHLKqVlOUQk2IxG_DOFOyPs2f4kO80gpU5OgoLDkTbjJEp3JKRwpVqY3RZxJlxNtXf7BDmBVDOr2lU3-o_lh7Y1fAeSaEaqwIH5f01RlLzdX9TwbaWZ2XWOhwZ4t5UQrZJ0tAKgtQaCfUFxydknTKtK64Y0r2V6MCw1otNuVYycqPRefSpVvkBv5I3qWIhr628YefHsIrjTOZwofoIpE4ZBbbVVhfo1Y3wMcKMc3pxWejq4LvbJonCoxcpuPogJFMKzQLwYZ6QPHrarQGWmUwP1-SHD6m_D46Xj5JZ3N_geVKBTQO0EmS74Ckmyfw&h=dMHfDLDgUPR2dmeqNDEebKDyMqkee9LCMVZyGExIB5k
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 4993FA29D65047DDB8B17ABAAD016491 Ref B: SJC211051204033 Ref C: 2024-08-13T23:20:47Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880776974706&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Atvz2msKBOhOQnpbclRX3kxmE6KVR10UalXsb05aU4tdAzoX6vPXYG89ZycQW2X9ZHJddSbCqrnNMbltij7gHIulSC65iajgc94S8bC4eVimNEEfxOnkcS6ZaVVSz4sqRWBO9UUMf22maVtosDZpCv90eZI3KabqcztS5J-Wd2alp6UTMgOf3cALRahMvUpmkvu1cSu1UWI6A4YlJ5XRB3QDhkZM0_SX1eOU8dz66Mq3VZ3ZxOKQL_6UTRnGAl9oo9bWUKalmAYWr1s0BPBWy1lILQBTvOMkh-Zwwabj2ue_WrmT6xEIM450dJP4SPJD8FtBSyngnS83YCev16FnEA&h=IS5fu3QgEAWC3aDLibvErlib3BN0h_SkloV_k0XSrzk
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:21:17 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591880776974706&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=Atvz2msKBOhOQnpbclRX3kxmE6KVR10UalXsb05aU4tdAzoX6vPXYG89ZycQW2X9ZHJddSbCqrnNMbltij7gHIulSC65iajgc94S8bC4eVimNEEfxOnkcS6ZaVVSz4sqRWBO9UUMf22maVtosDZpCv90eZI3KabqcztS5J-Wd2alp6UTMgOf3cALRahMvUpmkvu1cSu1UWI6A4YlJ5XRB3QDhkZM0_SX1eOU8dz66Mq3VZ3ZxOKQL_6UTRnGAl9oo9bWUKalmAYWr1s0BPBWy1lILQBTvOMkh-Zwwabj2ue_WrmT6xEIM450dJP4SPJD8FtBSyngnS83YCev16FnEA&h=IS5fu3QgEAWC3aDLibvErlib3BN0h_SkloV_k0XSrzk
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 9D00D3DD9DE8418F83415ECD116D34E7 Ref B: SJC211051204033 Ref C: 2024-08-13T23:21:17Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881078985539&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=O5_03ftRBLin8GEZ2OlBGlFpsKfgIs_fc636pSKtBCcPpSsOuht_o0k3dl93-op0JphVJToQqolP9yz1tHT85HVacYd1KEfgXzAoCFzvEX_Ne99m3V8FD11VH4yk6rA7d9SRWK4FN8HTz9QJJE7ByCXWOZx8_200FW6veAUfnVNJ2VaMFvpYnrh4brV2e0AosN9qfrqpe6E1MAImDXcFWfJQTYds0u55orudLpR82HPy-5QpzZbn9K7RlWWiu9FJd4P8A94QrhqLqA-JrcxdL9I2dsDEt1I4Q0RFA_ME_iH9YKhBfb8AZoiPdocUXRr9InOg0Z5u5OkrhJenMF74KQ&h=2xah0BUz0jTpBjtdRkE8g2cJTJffIdLgz2wA9eOKLyo
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:21:47 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881078985539&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=O5_03ftRBLin8GEZ2OlBGlFpsKfgIs_fc636pSKtBCcPpSsOuht_o0k3dl93-op0JphVJToQqolP9yz1tHT85HVacYd1KEfgXzAoCFzvEX_Ne99m3V8FD11VH4yk6rA7d9SRWK4FN8HTz9QJJE7ByCXWOZx8_200FW6veAUfnVNJ2VaMFvpYnrh4brV2e0AosN9qfrqpe6E1MAImDXcFWfJQTYds0u55orudLpR82HPy-5QpzZbn9K7RlWWiu9FJd4P8A94QrhqLqA-JrcxdL9I2dsDEt1I4Q0RFA_ME_iH9YKhBfb8AZoiPdocUXRr9InOg0Z5u5OkrhJenMF74KQ&h=2xah0BUz0jTpBjtdRkE8g2cJTJffIdLgz2wA9eOKLyo
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 4186FC87CB4C4C0CB41F5BE2F5854F6E Ref B: SJC211051204033 Ref C: 2024-08-13T23:21:47Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881381447041&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=f7z8qFQc927sr4GxtuoYyEftXDCg_6X2Bvmfo84AhrUKxKOOJMXFArE8ww3HivZ3JsS0vZP5gmLYj-R6plaBegMwrj0oQy0MpdO5NEB_A8fkbQu-wZZsxUoaz6bSROHFBEgEGMQ_Xu6WSD7bY-XWOxG6bckwz7ESWVPpjsMdCBkr9I5m2tzRJ9b_rqr_rbIQjL4pq8UY2ru3Aejti46Q7IzXnqGag4p_Nfum02ulIjY9avB8NdN1V81QsQNgaqYVwWP5ysJcAKEjYCOKEXhqwok5-fJc4r3a-YiJrJ0bViRXEBjtNMjJTN-YE67AGSUpgzbHmn-1IH6zCeV9xKkIzg&h=IAz_wlRc0vzUWwO5fClN4cEq21XJwkxPHcgKq3Ug5jg
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:22:17 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881381603271&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=SlINjkKKNdfvt-2JjuNaIEmVm7ctAm_5tkwrnRVSRNzsWx79dYydVFzQAnHuyg77KsOVbx-wghDUP7OmiwcNMsAW7_MfZDn4FzqTk7G49ZRJ2HI7sVGSLLRbXUe0ilEwFCyux4UV5fOBGrUQRpc-czGpsrbvJO_5p1aIiHGPBD472ody1YRUrzkwYtAVOXFyMrf1qTT7SnPN4VXkdwb01o6AGmQE9HuOZ3KdoEeU2ZuVRWm6uGFh_5niTHwj9wByIjtsUjhq6PKqRvgP48iESEMMU6oRR3xe0xWR9jDsJrmG0FqaOCCqSrUxMamJ6BoteY_H-IE8GEnfISotncpSlA&h=vkfOYnPt76QvlbzSSJaBWUVpq2WlpuVdeWhdFdNS93M
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: FCC1BF8A8C854B5B866234B9418E2353 Ref B: SJC211051204033 Ref C: 2024-08-13T23:22:18Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-08-13T23:18:46.0313737Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881683605221&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=NocS0DekwsK79w-Qc593PuKkbz73RFs8zFvbetHq9sQkUjc4EnsArOtE1ZiDtZ6p5FFPs6ftSfbHE7b66lEGWuCbvuUbCu7iBoa5PBNReCHblmTSDEObzPGvqnN1GDSFet3iLg6FUevc_gOzpSGJslgOTHUBFd0e3YKMviObuzJJ50duJrvHQ0aq9MqI6nDL7uQkb1FUyYegNA2BCo69Mkv2huRZfvLUmQq-KeXxInOEYGLrk8xqwSbFB5bNqyr8uJPGRYR6U7Ymmknh4ZP_g5hWpMigoQbp381QwN5DL0Clf0aBSSQ9A76Bveb-a3jwfSfl8aVJwGKfpC7SEOp5Xw&h=rI6RdFIvhjrTxeYlM8XL7weoJbZH0fycOAL7GY8Ztj8
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:22:47 GMT
      etag:
      - '"020027c0-0000-0600-0000-66bbe9d60000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591881683605221&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=NocS0DekwsK79w-Qc593PuKkbz73RFs8zFvbetHq9sQkUjc4EnsArOtE1ZiDtZ6p5FFPs6ftSfbHE7b66lEGWuCbvuUbCu7iBoa5PBNReCHblmTSDEObzPGvqnN1GDSFet3iLg6FUevc_gOzpSGJslgOTHUBFd0e3YKMviObuzJJ50duJrvHQ0aq9MqI6nDL7uQkb1FUyYegNA2BCo69Mkv2huRZfvLUmQq-KeXxInOEYGLrk8xqwSbFB5bNqyr8uJPGRYR6U7Ymmknh4ZP_g5hWpMigoQbp381QwN5DL0Clf0aBSSQ9A76Bveb-a3jwfSfl8aVJwGKfpC7SEOp5Xw&h=rI6RdFIvhjrTxeYlM8XL7weoJbZH0fycOAL7GY8Ztj8
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 17AD862E953945C7AA61CD8F9BA12B66 Ref B: SJC211051204033 Ref C: 2024-08-13T23:22:48Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862?api-version=2023-09-01&t=638591879261627976&c=MIIHpTCCBo2gAwIBAgITfwN4zwbxlQ3hiVeX7gAEA3jPBjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDIwHhcNMjQwNjI0MTEyOTI5WhcNMjUwNjE5MTEyOTI5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKitus9otjKc_2mnoItGg2ODGCsanW7wwLiNnlghjNsxrMUDq5u2Jp-zfc9sJhD2ssQRZGj0UhmQ_fxJ4Ej5jX1NtqoCE8_O4gSKDdsiETzdh9UuRNePujUsrqI3GK70mlTIIt7O4BfdGHHn4HzvFUjh9U-qxP7e990OLjdKcDTGsSNQ7lAVCgWGJpYegOJ6ACBHOfb8Rpt_dbMKIJesuzIQELniFYNWwFtNwNUzlKNQKhZDUYVuoR16g6NR2F8u15sHtxwMbmBEBBCSn6UWzgsEFu8XZyuBiRyVmr88JioOGGWe7rEeV6y8PB1pwedA9jLRlHuGYRszTvO8at-wf20CAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDAyKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwMig0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3J0MB0GA1UdDgQWBBS94SVCkY0GgY_zlPO8rjBypYY5eTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDIoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBSuecJrXSWIEwb2BwnDl3x7l48dVTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAGIn-9f_E2WtRfn5TnPvEFcnNeoR9cALTPfaepUursLy4o269sf_duZqDORTSB8D9bTNs8fcLI7f82rJ0W1N0iScK0RSU5qHe4zcN9BxYTXTxR67i3VJUrqzkser13e4pWKmTswjP1n56pVyneTFuMxfzgyPSTOIS8w8t_dBcDOCwN6VWhEClbaMoQpGHx1ay3ESzhlV21h7nPhFy-kZYSS9KTS_vtrdH8AWOWHccg2aiEKul_pD_FGFO4RTwv09JYTSlzWahYyx4oi7bhueV5SyfUM_hWnRTIx3b7NBeSCf4_JXcGhNRgcUqKX_J_Ey9f6Uz6U6GBVNkYj0V9SK-TQ&s=X7nvVhW2PJOYMwW7pTHR1k4cwlS25MUlDh_eUxDBs3TjUpJS9-nGuYMeXgrLDpsN8JpNVH0_hkRqmNfspblcCD4D1JvZCvn5gWWrG1n4k3tl4DPKTzlPASZ4EmI8HWnL53axDs7itPKvKg6mAbJKbW26bCz0HhbZTris-fSTXr36Q8hsPStWoW7mfj3R3XAaVGIoKBhW_Q7sR1-BfOKWe_NH3_G_UqR7AUFHO052XveRYiEPKYYZ_l_Nc6p6r1ovI7wja0Hg0TVwVPddjB95rQqqptV9VF_kDEKkynyfjXlD2GhgCzQLMaWFI8ODOwov70RZntPdjp7ginA1uQ77UA&h=ZgiAPAw7FPyzAAeZVSpgKnRs-WGdglqsY0EplTnvGzU
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","name":"0904cf80-b1d8-4406-800f-96031a793da4*278D9E242A59DB64B915A1877F744289D1BFED3E17A8E4D57472714CF330C862","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Succeeded","startTime":"2024-08-13T23:18:46.0313737Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '538'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:23:18 GMT
      etag:
      - '"020059c0-0000-0600-0000-66bbeadf0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 9CB9D2989322456D9D3FCB036D924268 Ref B: SJC211051204033 Ref C: 2024-08-13T23:23:18Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'fe43b446-23ae-466b-899c-106795e38f88'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"fe43b446-23ae-466b-899c-106795e38f88","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:09:41.6365584Z","updatedOn":"2024-08-13T23:09:41.6365584Z","createdBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:23:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 53FE96761AE140D89D0D06C0E099A4CC Ref B: SJC211051203023 Ref C: 2024-08-13T23:23:18Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Cookie:
      - x-ms-gateway-slice=Production
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"fe43b446-23ae-466b-899c-106795e38f88","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-08-13T23:09:41.6365584Z","updatedOn":"2024-08-13T23:23:19.4229239Z","createdBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","updatedBy":"fd6cf4a7-1446-4922-962d-4d208514f7fc","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:23:20 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14999'
      x-msedge-ref:
      - 'Ref A: CB71EF27B39C4231AD00258FA4AB11AC Ref B: SJC211051203023 Ref C: 2024-08-13T23:23:19Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana list
      Connection:
      - keep-alive
      User-Agent:
      - AZURECLI/2.63.0 azsdk-python-core/1.28.0 Python/3.8.10 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Dashboard/grafana?api-version=2023-09-01
  response:
    body:
      string: '{"value":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgpmhqe4hzjuhbxifttsbqqrbj5mwkdda33avcn34j42mfe7t5634zvjifh2pf7an/providers/Microsoft.Dashboard/grafana/clitestamgmigrate6lggpd","name":"clitestamgmigrate6lggpd","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:06:30.289632Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:06:30.289632Z"},"identity":{"principalId":"c5ce83cd-3143-4267-9720-cc617bfd3fab","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigrate6lggpd-d2djewcbf7fpeqhb.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgoxkmahlmnw3slmmquwtgsw7welnzd62emz7msloqiv2cxnxllidfwcrlza2fyi4/providers/Microsoft.Dashboard/grafana/clitestamgmigratez7c6ma","name":"clitestamgmigratez7c6ma","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:06:30.985655Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:06:30.985655Z"},"identity":{"principalId":"2d1fd752-74b1-4857-9284-b865faa02889","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigratez7c6ma-gedfbrh6hcg7b3hk.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg4ztad3dgpyrvvwbslug7sjgxdmnptd5zwefxedmk27eumgihbwte33md3gi77ss/providers/Microsoft.Dashboard/grafana/clitestamgmigratemev4kn","name":"clitestamgmigratemev4kn","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:02.1415305Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:02.1415305Z"},"identity":{"principalId":"929ee7db-74ab-42a3-9a26-667ad5421f9d","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigratemev4kn-gthvhbb4hkehhydt.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgucghetb26rctft3rehimiqatypfj6pvivooerqwrh22qkslvtyw4tptnqisfjly/providers/Microsoft.Dashboard/grafana/clitestamgmigratexmzytm","name":"clitestamgmigratexmzytm","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:07:02.4870281Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:07:02.4870281Z"},"identity":{"principalId":"2fc9a090-124f-4a86-88ae-b4a4dab5448b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Deleting","grafanaVersion":"10.4.7","endpoint":"https://clitestamgmigratexmzytm-bqc6b8hvakaucyd7.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/leo-rg/providers/Microsoft.Dashboard/grafana/leo0813eus-awsdemo-05","name":"leo0813eus-awsdemo-05","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T22:49:28.8009686Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T22:49:28.8009686Z"},"identity":{"principalId":"fa014dbf-4da3-4606-9a4d-921284a079c9","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.3","endpoint":"https://leo0813eus-awsdemo-05-cchqfgepd6bkhqdr.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/leo-rg/providers/Microsoft.Dashboard/grafana/leo0813eus-localdemo-06","name":"leo0813eus-localdemo-06","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-13T23:02:42.2733787Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-08-13T23:02:42.2733787Z"},"identity":{"principalId":"5e4d1353-e0ce-4a89-b49a-c1027689b0d5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.3","endpoint":"https://leo0813eus-localdemo-06-ctarenhxg5awhsee.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '6941'
      content-type:
      - application/json; charset=utf-8
      date:
      - Tue, 13 Aug 2024 23:23:21 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-original-request-ids:
      - c3590980-f123-4ade-82d6-0f1dad27ef66
      - e5bd2050-55df-45e2-be2a-e176cf04e794
      x-msedge-ref:
      - 'Ref A: 5912B50C37C647529B01A408EBC13478 Ref B: SJC211051205019 Ref C: 2024-08-13T23:23:21Z'
    status:
      code: 200
      message: OK
version: 1
